---
http_interactions:
- request:
    method: get
    uri: https://developer.nps.gov/api/v1/campground
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      X-Api-Key:
      - oe3WDnTYKdteakhTgReXQVgClPC5dsggs6DNll9C
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Date:
      - Tue, 01 Aug 2023 22:08:44 GMT
      Content-Type:
      - text/html; charset=iso-8859-1
      Content-Length:
      - '185'
      Connection:
      - keep-alive
      Age:
      - '0'
      Strict-Transport-Security:
      - max-age=31536000; preload
      - max-age=31536000; preload
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      Via:
      - http/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])
      X-Api-Umbrella-Request-Id:
      - c9mcingbtkms468pj0n0
      X-Cache:
      - MISS
      X-Ratelimit-Limit:
      - '1000'
      X-Ratelimit-Remaining:
      - '999'
      X-Vcap-Request-Id:
      - d90ae68b-6922-49a5-6246-422952280401
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: ASCII-8BIT
      string: |
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
        <html><head>
        <title>404 Not Found</title>
        </head><body>
        <h1>Not Found</h1>
        <p>The requested URL /api/v1/campground was not found on this server.</p>
        </body></html>
  recorded_at: Tue, 01 Aug 2023 22:08:44 GMT
- request:
    method: get
    uri: https://developer.nps.gov/api/v1/campgrounds
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      X-Api-Key:
      - oe3WDnTYKdteakhTgReXQVgClPC5dsggs6DNll9C
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 01 Aug 2023 22:14:08 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - Content-type, Authorization, Access-Control-Allow-Headers, Credentials, X-Api-Key
      Access-Control-Allow-Methods:
      - GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Age:
      - '0'
      Allow:
      - Get
      Content-Security-Policy:
      - default-src 'none'; base-uri 'none'; connect-src 'self'; form-action 'self';
        font-src 'self'; frame-ancestors 'none'; img-src 'self'; media-src 'self';
        style-src 'self' 'unsafe-inline'; script-src 'self'; worker-src 'self';
      Strict-Transport-Security:
      - max-age=31536000; preload
      - max-age=31536000; preload
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      Via:
      - http/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])
      X-Api-Umbrella-Request-Id:
      - c9mcl6kdpu6hruu2ifm0
      X-Cache:
      - MISS
      X-Content-Type-Options:
      - nosniff
      X-Ratelimit-Limit:
      - '1000'
      X-Ratelimit-Remaining:
      - '998'
      X-Vcap-Request-Id:
      - 2531785d-0445-4977-4a49-44e71d7bc3c1
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
         
{

"total":"634",
"limit":"50",
"start":"0",  
"data":[

{

"id":"EA81BC45-C361-437F-89B8-5C89FB0D0F86"

,"url":"https://www.nps.gov/amis/planyourvisit/277-north-campground.htm"

,"name":"277 North Campground"      

,"parkCode":"amis"

,"description":"277 North Campground is generally open year-round and rarely fills up, except possibly on holiday weekends. A boat launch ramp off the campground may be available depending on lake levels. 277 North offers 17 primitive sites, which are first-come, first-served only. Each site has a covered picnic table and a BBQ grill. A group site is available with reservation only. No ground fires are allowed. The sites are suitable for tents or RVs. Vault toilets are available. No drinking water or hookups are available."

,"latitude":

"29.512373695509215" 

,"longitude":

"-100.90816633365614" 

,"latLong":"{lat:29.512373695509215, lng:-100.90816633365614}"

,"audioDescription":"277 North Campground is generally open year-round and rarely fills up, except possibly on holiday weekends. A boat launch ramp off the campground may be available depending on lake levels. 277 North offers 17 primitive sites, which are first-come, first-served only. Each site has a covered picnic table and a BBQ grill. A group site is available with reservation only. No ground fires are allowed. The sites are suitable for tents or RVs. Vault toilets are available. No drinking water or hookups are available."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"582AB459-28A8-453A-B22E-BAD481E92098"

,"reservationInfo":"Standard overnight camping is first-come, first-served only and does not take a reservation. However, the group campsite requires a reservation no less than 3 days in advance and no more than 6 months. Link below is for group campsite ONLY."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/10182621"

,"regulationsurl":"https://cms.nps.gov/amis/learn/management/compendium.htm"

,"regulationsOverview":"Site capacity is not to exceed eight persons and one recreational vehicle camping unit (three vehicles total). Vehicles must be parked in designated parking areas only and may not be driven off-road. Visitors can stay in a campground up to 14 consecutive nights with a limit of 60 nights in the park in a calendar year. Quiet hours are 10pm to 6am. Check out time is 11am. Ground fires are prohibited."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[],"emailAddresses":[{"description":"","emailAddress":"AMIS_Interpretation@nps.gov"}]}
,"fees":[{"cost":"6.00","description":"Sites are available on a first-come, first-served basis; there are no reservations. Fee is payable within 30 minutes of occupying a campsite. This can be paid at a centrally located self-pay fee station, which accepts credit or debit cards only. Checkout time is 11am.","title":"277 North Campground Standard Site, Nightly Rate (Regular)"},{"cost":"3.00","description":"Sites are available on a first-come, first-served basis; there are no reservations. Fee is payable within 30 minutes of occupying a campsite. This can be paid at a centrally located self-pay fee station, which accepts credit or debit cards only. Checkout time is 11am.","title":"277 North Campground Standard Site, Nightly Rate (with Interagency Sr/Access Pass)"},{"cost":"35.00","description":"One site available, reservation only. Fees charged on a tiered system as follows:1-15 people: $35.00, 16-35 people: $75.00, 36-75 people: $155.00. Make reservations on Recreation.gov no less than 3 days and no more than 180 days in advance. Check-out time is 11:00am. Quiet hours are from 10:00pm until 6:00am. No hook-ups.","title":"San Pedro Campground Group Site, Nightly Rate (Only with Recreation.gov Reservation)"}]
,"directionsOverview":"Directions from Amistad National Recreation Area's Visitor Center- Head east on Highway 90 (turn left out of parking area) and drive 5.3 miles. Get in right lane, take Loop 79 on ramp, and travel 0.2miles. Turn left onto US 277/US 377 (follow signs to Sonora) and go 5.2 miles. Take a sharp right onto Old Highway 377 and follow to campground. GPS Coordinates 29.511294, -100.907325 or 29°30'40.7\"N 100°54'26.4\"W"

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"277 North Campground is generally open year-round and rarely fills up, except possibly on holiday weekends.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"277 North Campground"}]
,"addresses":[]
,"images":[{"credit":"NPS Photo","crops":[],"title":"277 North Campground","altText":"277 North Campground","caption":"277 North Campground","url":"https://www.nps.gov/common/uploads/structured_data/6074AEF5-C153-C931-79C614E3D22A3CB4.jpg"},{"credit":"NPS Photo`","crops":[],"title":"277 North Campground, Standard Campsite","altText":"Picnic table under shade shelter.","caption":"277 North Campground, Standard Campsite","url":"https://www.nps.gov/common/uploads/structured_data/607CE792-ACEF-DBDA-E0B625666F2F9DA2.jpg"},{"credit":"NPS Photo / J.Rolls","crops":[],"title":"277 North Group Campsite","altText":"Open space with a fire pit and covered picnic area for the group campsite.","caption":"227 North Campground Group Campsite Facilities","url":"https://www.nps.gov/common/uploads/structured_data/FDE685F8-A53B-66A4-6348D4529CA3F2CB.jpg"},{"credit":"NPS / J. Rolls","crops":[],"title":"277 North Campground, Standard Site 1","altText":"Picnic table under metal shade shelter","caption":"277 North Campground, Standard Site 1","url":"https://www.nps.gov/common/uploads/structured_data/9472362E-F073-7B1A-0587FE25080BB8FF.jpg"},{"credit":"NPS Photo / J. Rolls","crops":[],"title":"277 North Campground, Standard Site 2","altText":"Picnic table on cement pad under metal shade shelter","caption":"277 North Campground, Standard Site 2","url":"https://www.nps.gov/common/uploads/structured_data/9D90A782-FBF3-9E0E-A934921502F94966.jpg"},{"credit":"NPS Photo / J. Rolls","crops":[],"title":"277 North Campground, Standard Site 13","altText":"Picnic table on cement pad under shade shelter with BBQ grill","caption":"277 North Campground, Standard Site 13","url":"https://www.nps.gov/common/uploads/structured_data/A1E80B5E-095F-0F99-C521DEA71C26FC59.jpg"}]
,"weatherOverview":"The climate at Amistad is semi-arid in moisture and subtropical in temperature. Humidity is more often high than low, with periodic morning fog. Summers are long, hot, and frequently humid; winters are mild and vary between sunny, warm, cloudy, and cool weather. For current weather, visit the park's weather page at https://www.nps.gov/amis/planyourvisit/weather.htm."

,"numberOfSitesReservable":"1"

,"numberOfSitesFirstComeFirstServe":"17"

,"campsites":{
"totalSites":"18",
"group":"1",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Limited. However, some sites do have a cement ramp from gravel RV/tent pad to picnic table.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Ground fires are not permitted. Each campsite has a grill.",
"rvAllowed":"1",
"rvInfo":"RV and Trailers are permitted",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"The main road leading to the campground is paved but the road that goes to each campsite is not.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"1241C56B-7003-4FDF-A449-29DA8BCB0A41"

,"url":""

,"name":"Abrams Creek Campground"      

,"parkCode":"grsm"

,"description":"Abrams Creek Campground - elevation 1,125 feet (343m) - is located beside beautiful Abrams Creek in a remote and secluded setting. The climate is moderate, characterized by mild winters and hot, humid summers. Flush toilets and drinking water are available. There are no hookups or showers at the campground. Hammocks are allowed over the footprint of the campsite. Limited to trees 10 inches in diameter with adequate padding around the tree and only 2 hammocks may be suspended from tree."

,"latitude":

"35.61074664664336" 

,"longitude":

"-83.93318327404131" 

,"latLong":"{lat:35.61074664664336, lng:-83.93318327404131}"

,"audioDescription":"Mountain ranges and a pristine creek are the backdrop for your camping adventure at Abrams Creek. At 1,125 ft, Abrams Creek provides a moderate climate, characterized by mild winters and hot, humid summers with moderate rainfall. Beautiful Abrams Creek flows beside the campground offering the camper the peaceful sounds of rippling water. Abrams Creek Campground offers a traditional outdoor camping experience with the added convenience of flush toilets and drinking water. There are no hookups or showers at the campground. Hiking trails and fishing streams are easily accessible from the site."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"166CDAB3-554B-4409-B2F0-211650614BA0"

,"reservationInfo":"Campsite reservations are required and may be made up to six months in advance."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/273847"

,"regulationsurl":"http://www.nps.gov/grsm/planyourvisit/campregs.htm"

,"regulationsOverview":"All food and equipment used to prepare and store food must be kept sealed in a vehicle or in a camping unit constructed of solid, non-pliable material or as otherwise directed at all times when not in use. Campfires are permitted only in fire grates. You may collect wood in the park only if it is on the ground and dead. Only heat-treated firewood that is bundled and certified by the United States Department of Agriculture (USDA) or a state agency may be brought into the park. Quiet hours are in effect from 10 pm to 6 am. Generator use is prohibited from 8 pm to 8 am. Your stay is limited to 14 consecutive days at a time. You may have up to six people per campsite."

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"865-856-2445","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"GRSM_Smokies_Information@nps.gov"}]}
,"fees":[{"cost":"30.00","description":"Camping Fee is per site, per night.","title":"Camping Fee"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-10-30","name":"Closed Seasonally","endDate":"2024-04-27"}],"description":"Campground is open seasonally from late May until early October.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Abrams Creek Campground"}]
,"addresses":[{"postalCode":"37878","city":"Tallassee","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"6537 Abrams Creek Road","type":"Physical","line3":"","line2":""},{"postalCode":"37738","city":"Gatlinburg","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"107 Park Headquarters Road","type":"Mailing","line3":"","line2":""}]
,"images":[]
,"weatherOverview":"This campground is in the mountains and weather can rapidly change from warm and sunny to cold and rainy. Be prepared with layers and rain gear in all seasons."

,"numberOfSitesReservable":"16"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"16",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Campground is not ADA accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Only heat-treated firewood which is in its original packaging and bears a certification from the USDA or a state agency may be brought into the park. You may also collect wood which is dead and down in the park to burn at your campsite. Fires are permitted only in established fire rings at campsite.",
"rvAllowed":"1",
"rvInfo":"RVs and trailers not recommended.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"12",
"adaInfo":"Campground is not ADA accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"ABDC6E2A-9959-4A4C-9DB6-EEF66E7C95B8"

,"url":"https://www.recreation.gov/camping/campgrounds/233321?q=Adirondack%20Shelters"

,"name":"Adirondack Shelters"      

,"parkCode":"cato"

,"description":"Reservations Required. No Walk Ins. There are two shelters that offer the bare minimum with regard to outdoor accommodation. Available year-round, the Adirondack Shelters located near the northern most point of the park, provide a destination for true nature immersion and an alternative to drive-up camping. A moderate three-mile uphill hike over rocky and gently rolling terrain starting at Camp Round Meadow will lead you to these three-sided shelters."

,"latitude":

"39.67775041640082" 

,"longitude":

"-77.48462720159597" 

,"latLong":"{lat:39.67775041640082, lng:-77.48462720159597}"

,"audioDescription":"The Adirondack shelters are three-walled and roofed structures on platforms about 2 feet off the ground. They are surrounded by forest and each has a fire ring."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"99E8FA77-1BB9-4EE9-916B-A824CE21A0DC"

,"reservationInfo":"Reservations can be made at www.recreation.gov or by calling 877-444-6777."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/233321?q=Adirondack%20Shelters"

,"regulationsurl":"http://www.nps.gov/cato/learn/management/superintendent-s-compendium.htm"

,"regulationsOverview":"Minimum age for permittees is 18. Alcohol is prohibited. Horses, bicycles or other vehicles may not be taken to the shelter. Pets are prohibited. Fireworks or similar devices are prohibited. All drinking water must be carried in. Dead and down wood may be collected for firewood. Fires are permitted only in fireplace rings provided. Stoves or heaters should not be used in the shelters. Dishes and clothing should not be washed in natural water sources. Dispose of waste water at least 500 feet from the shelter site. All trash, including food scraps, must be carried out. Quiet hours are 10:00 p.m. until 6:00 a.m. Length of stay is limited to 7 calendar days or 14 days total in a calendar year."

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"3016639388","description":"","extension":"","type":"Voice"},{"phoneNumber":"3012710205","description":"","extension":"","type":"Fax"}],"emailAddresses":[{"description":"","emailAddress":"CATO_superintendent@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"A reservation fee is charged for use of the shelters.","title":"Reservation Fee"}]
,"directionsOverview":"Campers must park at Round Meadow (14840 Manahan Road, Sabillasville, MD 21780) and hike approximately 3 miles to the Adirondack shelters."

,"directionsUrl":"http://www.nps.gov/cato/planyourvisit/round-meadow-directions.htm"

,"operatingHours":[{"exceptions":[],"description":"The Adirondack shelters are available year round.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Adirondack Shelters Rental Information"}]
,"addresses":[{"postalCode":"21788","city":"Thurmont","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"6602 Foxville Road","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Adirondack Shelter","altText":"Three-sided wooden shelter","caption":"Two 3-sided shelters offer back-country solitude for hike-in campers.","url":"https://www.nps.gov/common/uploads/structured_data/84B33A53-9EA2-D337-08E8948AFA1C1537.jpg"}]
,"weatherOverview":"Summer (June-Aug) average temperature is between 61 and 81 degrees Fahrenheit. Fall (Sep-Nov) average temperature is between 45 and 64 degrees Fahrenheit. Fall foliage is at its peak in mid-October Winter (Dec-Feb) average temperature is between 24 and 41 degrees Fahrenheit. Winter snowfall is between 5-12\" per month. Spring (March-May) average temperature is between 41 and 63 degrees Fahrenheit. Average precipitation is approximately 4 inches per month. (Source: usclimatedata.com)"

,"numberOfSitesReservable":"2"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"2",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"2",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"None",
"internetInfo":"",
"cellPhoneInfo":"Cell phone service is sparse.",
"fireStovePolicy":"Fires in designated areas only.",
"rvAllowed":"0",
"rvInfo":"No",
"rvMaxLength":"0",
"additionalInfo":"No pets are allowed.",
"trailerMaxLength":"0",
"adaInfo":"The Adirondack shelters are not ADA accessible.",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"4F9ED6A5-3ED1-443D-9E4C-859D7988F199"

,"url":"https://www.nps.gov/bica/planyourvisit/afterbay-campground.htm"

,"name":"Afterbay Campground"      

,"parkCode":"bica"

,"description":"- Near Fort Smith, Montana - Open All Year - $35 per night for full utility sites - $18 per night for non-utility/tent camping sites - 22 RV and tent sites are located on the south shore of Afterbay lake - All sites have fire rings and picnic tables - Composting vault toilets - All sites are back in (not pull through) - All sites have electric and water - RV dump station available across the road near the Headquarters building"

,"latitude":

"45.315438210045016" 

,"longitude":

"-107.94165891102676" 

,"latLong":"{lat:45.315438210045016, lng:-107.94165891102676}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"7F24B353-91F9-56B7-83CB-47807B7C6080"

,"reservationInfo":"Please place a reservation for your site by calling 406-666-2333 during normal operating hours or after hours call 406-679-5599."

,"reservationUrl":""

,"regulationsurl":""

,"regulationsOverview":"1. Overnight stays/camping in park is only allowed in established sites 2. Check-out is 12:00 pm 3. Quiet hours from 10:00 pm to 6:00 am; idling of motor vehicles is prohibited during quiet hours 4. Generators permitted from 8 am to 8 pm 5. Campsite occupancy may not exceed 14 cumulative days within a 28-day period 6. Collection of firewood is prohibited within the park 7. No attaching or tying items to trees 8. Pets must be leashed at all times and may not be left unattended"

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Composting Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"Yes - seasonal","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"(406) 666-2333","description":"","extension":"","type":"Voice"},{"phoneNumber":"406-679-5599","description":"","extension":"","type":"Fax"}],"emailAddresses":[{"description":"","emailAddress":"dyanna.threeirons@crow-nsn.gov"}]}
,"fees":[{"cost":"35.00","description":"Sites with electric and water hook up.\n\nCash and check only at this time. Please make checks payable to: Crow Tribe of Indians","title":"Full Utility Sites"},{"cost":"18.00","description":"Site with no electric or water hook up.\n\nCash and check only at this time. Please make checks payable to: Crow Tribe of Indians","title":"Non-Utility Sites and Tent Camping"}]
,"directionsOverview":"Take 313 through the town of Fort Smith, MT and follow the brown and white sign to Afterbay Campground. It will be on the right side of 313 just past the NPS Headquarters building."

,"directionsUrl":"https://www.google.com/maps/dir//Afterbay+South+Campground,+Fort+Smith,+MT+59035/@45.3135083,-107.9382166,15z/data=!4m8!4m7!1m0!1m5!1m1!1s0x5349b60ef11e2427:0x5360e17333e34042!2m2!1d-107.9417086!2d45.3154533"

,"operatingHours":[{"exceptions":[],"description":"Open year round.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Afterbay Campground"}]
,"addresses":[{"postalCode":"59035","city":"Fort Smith","stateCode":"MT","countryCode":"US","provinceTerritoryCode":"","line1":"Afterbay Campground","type":"Physical","line3":"","line2":"Rte 200"},{"postalCode":"59035","city":"Fort Smith","stateCode":"MT","countryCode":"US","provinceTerritoryCode":"","line1":"PO Box 7458","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS, Jen Prentiss","crops":[],"title":"Afterbay Campground upper spots","altText":"A gravel campground spot with a fire pit and picnic table with trees and afterbay lake in the back.","caption":"Upper camp spots at Afterbay Campground","url":"https://www.nps.gov/common/uploads/structured_data/6EDA2637-E4C2-DD95-F0C82B84901ADDB2.jpg"},{"credit":"NPS Photo","crops":[],"title":"Afterbay Campground looking toward Grapevine Campground.","altText":"Campground with lake in the background and Grapevine Campground in the distance.","caption":"Afterbay Campground looking toward Grapevine Campground.","url":"https://www.nps.gov/common/uploads/structured_data/66989928-1DD8-B71B-0B561CB7F8470440.jpg"},{"credit":"Afterbay Campground Service","crops":[],"title":"Afterbay Campground Map","altText":"A hand drawn sketch of the layout of afterbay campground.","caption":"Afterbay Campground Map","url":"https://www.nps.gov/common/uploads/structured_data/330D8DE8-EC87-D37E-AE029B7676E9130B.png"},{"credit":"NPS, Jen Prentiss","crops":[],"title":"Afterbay Campground","altText":"A gravel road with several side by side campgrounds lining the left side.","caption":"Lower units at Afterbay Campground.","url":"https://www.nps.gov/common/uploads/structured_data/6EC9B9FA-EE82-5B48-291D96A7469A02E3.jpg"}]
,"weatherOverview":"For the most recent weather forecast please look up Fort Smith, MT."

,"numberOfSitesReservable":"22"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"22",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"22",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"All sites are handicapped accessible. Campsite 6,7 and 19 are Designated Accessible campsites. Mens and Womens pit toilets are handicapped accessible.",
"internetInfo":"",
"cellPhoneInfo":"Cell phone reception is dependent on the carrier.",
"fireStovePolicy":"Check locally, dependent on conditions.",
"rvAllowed":"1",
"rvInfo":"All sites are handicapped accessible. Campsites 6,7 and 19 are Designated Accessible campsites. Mens and Womens pit toilets are handicapped accessible.",
"rvMaxLength":"0",
"additionalInfo":"Season is generally from Memorial Day to Labor Day. Please check at the Headquarters building for more information or call 307-568-5406.",
"trailerMaxLength":"0",
"adaInfo":"All sites are handicapped accessible. Mens and Womens pit toilets are handicapped accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"9FAE941D-D7E8-4F36-A28F-8556628242BA"

,"url":"https://www.nps.gov/ozar/planyourvisit/akers-campground.htm"

,"name":"Akers Group Campground"      

,"parkCode":"ozar"

,"description":"Group campsites, located at Akers Ferry. The campground is located north of the junction of Highway KK and Highway K."

,"latitude":

"37.3764551871" 

,"longitude":

"-91.5615463252" 

,"latLong":"{lat:37.3764551871, lng:-91.5615463252}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Reservations may be made online at http://www.recreation.gov. If sites have not been reserved, they are available on a first-come-first-serve basis."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/234442"

,"regulationsurl":"http://www.nps.gov/ozar/learn/management/lawsandpolicies.htm"

,"regulationsOverview":"Laws and policies governing park campgrounds can be found in the Superintendent's Compendium on the park website."

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"No","potableWater":["Yes - seasonal"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"5733234236","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"ozar_campground_operation@nps.gov"}]}
,"fees":[{"cost":"65.00","description":"Summer group site fee from April 15 to October 15.","title":"Summer group site fee"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Group campsites, located at Akers Ferry.  The campground is located at the junction of Highway KK and Highway K.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Akers Ferry"}]
,"addresses":[{"postalCode":"65466","city":"Eminence","stateCode":"MO","countryCode":"US","provinceTerritoryCode":"","line1":"5170 Akers Campground RD","type":"Physical","line3":"","line2":""},{"postalCode":"63965","city":"Van Buren","stateCode":"MO","countryCode":"US","provinceTerritoryCode":"","line1":"P.O. Box 490","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"Akers","altText":"Map showing campsites, restrooms, ranger station, roads and river","caption":"Akers has group camp sites only.","url":"https://www.nps.gov/common/uploads/structured_data/819AA64D-F303-A68D-186A6CAF1E9AD2A4.jpg"},{"credit":"NPS","crops":[],"title":"Akers","altText":"Map showing campsites, restrooms, ranger station, roads and river","caption":"Akers has group camp sites only.","url":"https://www.nps.gov/common/uploads/structured_data/819AA64D-F303-A68D-186A6CAF1E9AD2A4.jpg"}]
,"weatherOverview":"Ozark National Scenic Riverways is located in southeast Missouri. Summer temperatures generally range from 75-100 degrees with high humidity. Winter temperatures generally range from 0-50 degrees with periods of intermittent freezing and snow."

,"numberOfSitesReservable":"4"

,"numberOfSitesFirstComeFirstServe":"4"

,"campsites":{
"totalSites":"4",
"group":"4",
"horse":"0",
"tentOnly":"4",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"No wheelchair access.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires in designated fire rings only.",
"rvAllowed":"0",
"rvInfo":"No RVs or trailers allowed.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Group sites are not accessible.",
"trailerAllowed":"0",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"6EAB2A34-0D56-4A15-99E2-E41C06B0FF86"

,"url":"https://www.nps.gov/orpi/planyourvisit/alamo-canyon.htm"

,"name":"Alamo Canyon Campground"      

,"parkCode":"orpi"

,"description":"Alamo Canyon Campground is a secluded, four-site campground nestled against rocky mountains at the mouth of Alamo Canyon. This primitive campground features picnic tables, grills, a tent area at each site, and a vault toilet located near bulletin boards. It is only for tent camping or small car camping; no RVs, trailers or generators are allowed."

,"latitude":

"32.072943" 

,"longitude":

"-112.728093" 

,"latLong":"{lat:32.072943, lng:-112.728093}"

,"audioDescription":"Alamo Campground is nestled against small, rocky mountains and located right at the opening of Alamo Canyon. The campground includes four primitive sites, each with a picnic table and standing grill. Thick stands of organ pipe cacti and saguaros surround the campground. To the south of the campground is a wash where the canyon exits; the wash is full of desert greenery. In the center of the campground is a small informational bulletin board, and close by is a vault toilet restroom."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"All campsites are reserved through Recreation.gov or by calling 877-444-6777. Sites may be reserved the same day or up to six months in advance."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/247566"

,"regulationsurl":"http://www.nps.gov/orpi/planyourvisit/alamo-canyon.htm"

,"regulationsOverview":"Length of stay is limited to 7 consecutive days. Campers must park in the space provided at their assigned campsite. Checkout time is 11am. Generators are not allowed. No ground fires are allowed. Fires are allowed in the raised grills, or in raised fire pans that are at least 6 inches off the ground."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"5203876849","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"orpi_information@nps.gov"}]}
,"fees":[{"cost":"16.00","description":"Fee is per site, per night.","title":"Alamo Canyon Camping Fee"},{"cost":"8.00","description":"Holders of the interagency senior or access pass are entitled to half price camping.","title":"Alamo Canyon Campground- Senior/Access Rate"}]
,"directionsOverview":"Campground is located at the end of the Alamo Canyon Road. Road junction with Highway 85 is located halfway between milepost 65 and 66 on the eastern side of the highway. There is no road sign. The road begins on the north side of the concrete bridge that crosses the wash. Road is suitable for all cars."

,"directionsUrl":"http://www.nps.gov/orpi/planyourvisit/alamo-canyon.htm"

,"operatingHours":[{"exceptions":[],"description":"Open 24 hours a day, 365 days a year.  You can self-register 24 hours a day at the campground.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Alamo Canyon Primitive Campground"}]
,"addresses":[{"postalCode":"85321","city":"Ajo","stateCode":"AZ","countryCode":"US","provinceTerritoryCode":"","line1":"Alamo Canyon Road","type":"Physical","line3":"","line2":""},{"postalCode":"85321","city":"Ajo","stateCode":"AZ","countryCode":"US","provinceTerritoryCode":"","line1":"10 Organ Pipe Drive","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Alamo Scenery","altText":"A wash runs with water below cacti and a large mountain","caption":"The surrounding landscape at the campground is full of life.","url":"https://www.nps.gov/common/uploads/structured_data/30AD9C86-B408-5598-F21072B2495F43BF.jpg"},{"credit":"NPS Photo","crops":[],"title":"tent At Alamo Canyon Campground","altText":"tent pitched on the ground at alamo canyon in front of saguaro and organ pipe cacti","caption":"Tent campers flock to the primitive experience at Alamo Canyon","url":"https://www.nps.gov/common/uploads/structured_data/42ECB7F0-1DD8-B71B-0BC1E1974084840F.jpg"},{"credit":"NPS Photo/ K Ceballos","crops":[],"title":"Alamo Campground","altText":"Campground site with a picnic table and standing grill, with mountains and canyon in the background","caption":"Many visitors seeking seclusion and solitude enjoy the Alamo Canyon campground.","url":"https://www.nps.gov/common/uploads/structured_data/B66DA656-CA99-CCAC-10984C1F2CB60197.jpg"},{"credit":"NPS Photo/Cate Blanch","crops":[],"title":"Information Sign and Bathroom","altText":"The Alamo Canyon information sign is located near the vault toilet.","caption":"The Alamo Canyon Information board has tips on how to safely enjoy your time at Organ Pipe Cactus.","url":"https://www.nps.gov/common/uploads/structured_data/30193427-0135-8743-9598A45313A989B7.jpg"},{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Picnic Table and Grill","altText":"Photo of a picnic table and charcoal grill from a campsite","caption":"Each site has a picnic table and grill","url":"https://www.nps.gov/common/uploads/structured_data/306EB48C-F39D-7BDF-176FC4F184216E85.jpg"},{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Tent Site","altText":"A circle of rocks indicate the location of a tent site at the campground","caption":"Alamo Canyon is a tent-only campground","url":"https://www.nps.gov/common/uploads/structured_data/30C7B89B-9741-70BA-C9161F8F0D927D61.jpg"},{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Accessible Parking and Pit Toilet","altText":"The accessible parking is close to the pit toilet","caption":"The parking, ramp to the toilet, and toilet itself are all accessible.","url":"https://www.nps.gov/common/uploads/structured_data/304F1949-03B1-33DB-A9ADA722B64DAC55.jpg"},{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Garbage Bins","altText":"Garbage bins at Alamo Canyon Campground","caption":"There are garbage receptacles provided at the campground","url":"https://www.nps.gov/common/uploads/structured_data/307DCB91-E364-49DB-74A03DD29A7CCD61.jpg"},{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Alamo Canyon Trail","altText":"The Alamo Canyon trail is surrounded by many kinds of cacti and leads into the mountains","caption":"Explore the 1.8-mile Alamo Canyon trail that goes to an old ranching site.","url":"https://www.nps.gov/common/uploads/structured_data/30323CBF-900D-448E-0F64822FFFA221EE.jpg"},{"credit":"NPS photo/Cate Blanch","crops":[],"title":"Road Sign","altText":"The road sign for Alamo Canyon Campground points down a dirt road","caption":"Once you turn onto the Alamo Canyon Road, you'll see the sign directing you to the campground","url":"https://www.nps.gov/common/uploads/structured_data/309DFF4E-B86D-E787-6FC8712D6F698962.jpg"}]
,"weatherOverview":"Winter temperatures are mild, with daytime highs in the 60s and lows in the 40s. Summer temperatures are hot, with daytime highs often exceeding 110F."

,"numberOfSitesReservable":"4"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"4",
"group":"0",
"horse":"0",
"tentOnly":"4",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"There are no ADA campsites, although the sites are flat and level.",
"internetInfo":"",
"cellPhoneInfo":"Cell reception is spotty and dependent on carrier. AT&T doesn't work in this area; Verizon works best.",
"fireStovePolicy":"No ground fires are allowed. Fires are allowed in the raised grills or in raised fire pans that are at least 6 inches off the ground.",
"rvAllowed":"0",
"rvInfo":"No RVs or trailers are allowed.",
"rvMaxLength":"0",
"additionalInfo":"Campground is very popular in the winter time, so booking ahead of time on Recreation.gov is highly recommended.",
"trailerMaxLength":"0",
"adaInfo":"The restroom (vault toilet) is ADA accessible and open 24 hours. Accessible parking is available near the restroom on a paved pad.",
"trailerAllowed":"0",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"AB15EC6C-7761-4DFF-A4AC-38E6A9986FB7"

,"url":"https://www.nps.gov/ozar/planyourvisit/alley-spring-campground.htm"

,"name":"Alley Spring Campground"      

,"parkCode":"ozar"

,"description":"Campground located near Alley Spring, 6 miles west of Eminence, MO on State Highway 106."

,"latitude":

"37.148223" 

,"longitude":

"-91.44976700000001" 

,"latLong":"{lat:37.148223, lng:-91.44976700000001}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"15939808-8584-4BE5-AB8F-2FBB6EE984AC"

,"reservationInfo":"Reservations for reservable sites may be made online at http://www.recreation.gov"

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/234046"

,"regulationsurl":"http://www.nps.gov/ozar/learn/management/lawsandpolicies.htm"

,"regulationsOverview":"Laws and policies governing park campgrounds can be found in the Superintendent's Compendium on the park website."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Flush Toilets - year round"],"internetConnectivity":"No","showers":["Free - Seasonal","Hot - Year Round"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"5733234236","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"ozar_campground_operations@nps.gov"}]}
,"fees":[{"cost":"30.00","description":"Electric site fee for April 15 to October 15","title":"Summer electric site camping fee"},{"cost":"20.00","description":"Non- electric site fee from April 15 to October 15","title":"Summer non-electric camping site fee"},{"cost":"140.00","description":"Group site fee April 15 to October 15","title":"Summer group site fee"},{"cost":"45.00","description":"Cluster site fee April 15 - October 15.  Cluster sites allow 7-20 people, and 6 tents;  OR 4 tents and 2 RVs.","title":"Summer cluster site fee"},{"cost":"30.00","description":"Fee to reserve Burr Oak or Alley Spring pavilions on http://www.recreation.gov.  May be reserved April 15-October 15.","title":"Summer pavilion reservation fee"},{"cost":"20.00","description":"Fee for electric campsites from October 16 to April 14.","title":"Winter electric campsite fee"},{"cost":"10.00","description":"Fee for non-electric campsites from October 16 to April 14.","title":"Winter non-electric campsite fee"}]
,"directionsOverview":"Alley Spring campground is located 6 miles west of Eminence, MO, on State Highway 106. It sits on the bank of the Jacks Fork River."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Alley Spring campground is open daily year-round.  Campers only from 10 p.m. to 6 a.m.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Alley Spring Campground"}]
,"addresses":[{"postalCode":"65466","city":"Eminence","stateCode":"MO","countryCode":"US","provinceTerritoryCode":"","line1":"11544 Alley Spring Residence Road","type":"Physical","line3":"","line2":""},{"postalCode":"63965","city":"Van Buren","stateCode":"MO","countryCode":"US","provinceTerritoryCode":"","line1":"P. O. Box 490","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"Alley Spring Campground Map","altText":"a map showing campsites, roads, trails, restrooms, river access, showers","caption":"Alley Spring Campground Map","url":"https://www.nps.gov/common/uploads/structured_data/97D6C606-E0E0-0E3E-658D4B56D865604D.jpg"}]
,"weatherOverview":"Ozark National Scenic Riverways is located in southeast Missouri. Summer temperatures generally range from 75-100 degrees with high humidity. Winter temperatures generally range from 0-50 degrees with periods of intermittent freezing and snow."

,"numberOfSitesReservable":"102"

,"numberOfSitesFirstComeFirstServe":"62"

,"campsites":{
"totalSites":"162",
"group":"3",
"horse":"0",
"tentOnly":"3",
"electricalHookups":"28",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"There are 2 accessible sites (#609 and #217). Both are located near accessible restroom facilities, with paved walkways to those facilities. The entire campground is paved, with sidewalks up to the shower facility, which is centrally located.",
"internetInfo":"",
"cellPhoneInfo":"Cell service very unreliable.",
"fireStovePolicy":"Fires in designated fire rings only.",
"rvAllowed":"1",
"rvInfo":"Are allowed.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"There are 2 accessible sites (#609 and #217). Both are located near the accessible restroom facilities, with paved walkways to those facilities.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"4F9E59DF-BFCB-400F-8F4E-6A5233A47324"

,"url":"https://www.nps.gov/biso/planyourvisit/alumfordcampground.htm"

,"name":"Alum Ford Campground"      

,"parkCode":"biso"

,"description":"Alum Ford is a primitive campground and offers six campsites with a vault toilet facility. No drinking water is located at this area. Alum Ford also has a boat ramp. There are no fees to use the ramp."

,"latitude":

"36.764033745775" 

,"longitude":

"-84.5463375728999" 

,"latLong":"{lat:36.764033745775, lng:-84.5463375728999}"

,"audioDescription":"The campground sits at the end of a gravel road with an entrance that passes by a small building with a bulletin board of information. This is where campers get information about the park. All sites have a gravel parking pad along with a gravel tent pad. Each site has a picnic table, lantern hook and fire ring with grill. Most sites will also have a food storage locker on site or one nearby. There is a vault toilet at the end of the campground road. The women's room is on the right and the men's room is on the left. Both are accessible."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"C34605A0-4F20-4B87-9CD9-FC53B14BC9AB"

,"reservationInfo":"This campground is open year-round on the honor system. Sites may not be reserved."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/biso/planyourvisit/upload/2009-Alum-Ford-Campground.pdf"

,"regulationsOverview":"All food, food items (mustard, ketchup, etc), coolers (even if they are empty or have ice, water, pop, etc), must be kept in a vehicle or trailer with hard sides, except while preparing or eating it. Parking is allowed on the asphalt surface ONLY, not on the grass or gravel pads (gravel pads are for tents). Pets MUST be restrained on a leash AT ALL TIMES. QUIET HOURS ARE FROM 10:00 PM (ET) TO 6:00 AM (ET) Alcohol is prohibited in the Kentucky area of the Park. All grey water (dishes, shower, etc) must NEVER be dumped onto the ground. Bicycles may be ridden at night only if you have a light in the front and a red reflective marker on the back."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4232867275","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"biso_information@nps.gov"}]}
,"fees":[{"cost":"5.00","description":"This fee is for one night of camping for up to six persons per site. Holders of the Interagency Access/Senior Passport pay only half the fee per night.","title":"Campsite Fee"}]
,"directionsOverview":"Exit I-75 onto HWY 92 at Williamsburg (Exit 11). (This road has been recently upgraded and provides a direct access to Stearns and Blue Heron) Turn right on 92 for approximately 7 miles to the intersection of Hwy 700 and US 27 . Turn Left onto Hwy 700 and continue approximately 5.5 miles to the campground."

,"directionsUrl":"http://www.nps.gov/biso/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Alum Ford is a primitive campground and offers six campsites with a vault toilet facility.  This campground is open year-round on a first come-first serve basis.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Alum Ford Campground"}]
,"addresses":[{"postalCode":"42653","city":"Whitley City","stateCode":"KY","countryCode":"US","provinceTerritoryCode":"","line1":"State Hwy 700","type":"Physical","line3":"","line2":""},{"postalCode":"37841","city":"Oneida","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"4564 Leatherwood Road","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"Campsite at Alum Ford Campground","altText":"Campsite with leaves and picnic table","caption":"One of the few areas where visitors can camp near the river.","url":"https://www.nps.gov/common/uploads/structured_data/3C81F483-1DD8-B71B-0B5CBEB6FD050CCF.jpg"}]
,"weatherOverview":"The weather along the Cumberland Plateau can be best described as unpredictable. Each season brings its own weather patterns. Summers are generally hot and humid, with high temperatures sometimes eclipsing 90 degrees. The low temperatures in winter often dip below freezing. Spring sees the most amount of precipitation, but rainfall can occur in various amounts throughout the year."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"6"

,"campsites":{
"totalSites":"6",
"group":"0",
"horse":"0",
"tentOnly":"6",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Campsite number 7 is wheelchair accessible on a gravel surface. The vault toilet is accessible on a paved surface.",
"internetInfo":"",
"cellPhoneInfo":"Cell phone reception is poor in this area due to the gorge.",
"fireStovePolicy":"Firewood must be purchased and/or collected from the local vicinity; to learn more visit http://dontmovefirewood.org/.",
"rvAllowed":"0",
"rvInfo":"No RVs in this campground.",
"rvMaxLength":"0",
"additionalInfo":"The campground is located adjacent to the Alum Ford Boat Launch, providing access for motorized boats to this remote section of Lake Cumberland. The Sheltowee Trace National Recreational Trail also passes through the campground. The Sheltowee Trace is a 260-mile back country trail through Daniel Boone National Forest, Big South Fork NRRA, and Natural Bridge, Cumberland Falls, & Pickett State Parks in Kentucky and Tennessee.",
"trailerMaxLength":"0",
"adaInfo":"There is one accessible site located at the end of the campground near the vault toilet which is also accessible. The surface is gravel only.",
"trailerAllowed":"0",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"B0B25595-CE24-4E9C-B0CD-93912216F113"

,"url":""

,"name":"American Memorial Park"      

,"parkCode":"amme"

,"description":"There are no campgrounds in the park."

,"latitude":

"" 

,"longitude":

"" 

,"latLong":""

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":""

,"reservationUrl":""

,"regulationsurl":""

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"","toilets":[],"internetConnectivity":"","showers":[],"cellPhoneReception":"","laundry":"","amphitheater":"","dumpStation":"","campStore":"","staffOrVolunteerHostOnsite":"","potableWater":[],"iceAvailableForSale":"","firewoodForSale":"","foodStorageLockers":""}
,"contacts":{"phoneNumbers":[],"emailAddresses":[]}
,"fees":[]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[{"postalCode":"96950","city":"Saipan","stateCode":"MP","countryCode":"US","provinceTerritoryCode":"","line1":"","type":"Physical","line3":"","line2":""}]
,"images":[]
,"weatherOverview":""

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"0",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"E7CC7363-9C34-42ED-B3F0-769BB39E9400"

,"url":"https://www.recreation.gov/camping/anacapa-island/r/campgroundDetails.do?contractCode=NRSO&parkId=70984"

,"name":"Anacapa Island Campground"      

,"parkCode":"chis"

,"description":"Primitive camping is available (seven sites; $15 per night per site; reservations required). Picnic table, food storage box, and pit toilet are provided. No water is available. Distance from landing to campground is one-half mile and includes a 157-stair climb. WARNING: Western gulls nest on Anacapa Island From April through mid-August. During this time, visitors will encounter seabird rookery conditions: guano, strong odor, constant noise, bird carcasses, and birds protecting their territory."

,"latitude":

"34.0143426535482" 

,"longitude":

"-119.367763068282" 

,"latLong":"{lat:34.0143426535482, lng:-119.367763068282}"

,"audioDescription":"This campground is set amongst the native plants on the south side of the island. There are 7 sites that are marked by railroad ties. A table and picnic table are located at each site. A bathroom sits near the entrance to the campground."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"1F7B2583-AC0B-4CFB-B09A-C54B48867E2C"

,"reservationInfo":"Advanced camping reservations are required for all of the park's campgrounds. There are no entrance fees to visit the park. However, a reservation fee of $15.00 is charged for camping on the islands. For six of the sites, this fee covers up to four people. For one of the sites, it covers up to six people. Reservations can be made by calling (877) 444-6777 or through http://www.recreation.gov/"

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/232502"

,"regulationsurl":"http://www.nps.gov/chis/learn/management/lawsandpolicies.htm"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - year round","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"8056585730","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"chis_information@nps.gov"}]}
,"fees":[{"cost":"15.00","description":"Advanced camping reservations are required for all of the park's campgrounds. There are no entrance fees to visit the park. However, a reservation fee of $15.00 per site-per night is charged for camping on the islands. For six of the sites on Anacapa Island, this fee covers up to four people. For one of the sites, it covers up to six people. Reservations can be made by calling (877) 444-6777 or through http://www.recreation.gov/","title":"Anacapa Island Campground Fee"}]
,"directionsOverview":"Anacapa Island Campground is only accessible by boat. Visit our island transportation webpage for more information: http://www.nps.gov/chis/planyourvisit/island-transportation.htm The hike to the campground is 157 stairs and .5 miles from the boat landing."

,"directionsUrl":"http://www.nps.gov/chis/planyourvisit/island-transportation.htm"

,"operatingHours":[{"exceptions":[],"description":"Anacapa Island campground is open year round.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Anacapa Island Campground"}]
,"addresses":[{"postalCode":"93001","city":"Anacapa Island","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"Anacapa Island Campground","type":"Physical","line3":"","line2":""},{"postalCode":"93001","city":"Ventura","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"1901 Spinnaker Drive","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"Tim Hauf, timhaufphotography.com","crops":[],"title":"Anacapa Island Campground by Tim Hauf","altText":"Within a field of yellow flowers lie tents that overlook historic buildings and the ocean.","caption":"Anacapa Island Campground","url":"https://www.nps.gov/common/uploads/structured_data/3C7AB470-1DD8-B71B-0B72BD9A775B0E8C.jpg"}]
,"weatherOverview":"Campers should be prepared for a variety of weather conditions. Sturdy, low-profile tents, stakes, and line for securing tents to ground or table. Fog can occur on the islands during any season producing cool, damp conditions. There are no trees or shade on Anacapa. Overexposure to the wind and sun can be a serious problem. Visitors are advised to bring supplies for an extra day in case boats are unable to pick up campers due to sea conditions. Current weather: http://channelislands.noaa.gov/news/kiosk.html"

,"numberOfSitesReservable":"7"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"7",
"group":"1",
"horse":"0",
"tentOnly":"7",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"7",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Due to Anacapa Island's isolation, steep cliffs, and boat transportation requirements, the Anacapa Island Campground is not accessible for individuals in wheelchairs or those with limited mobility.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"No fires are permitted. Use only enclosed, gas camp stoves.",
"rvAllowed":"0",
"rvInfo":"Anacapa Island is only accessible via boat.",
"rvMaxLength":"0",
"additionalInfo":"Anacapa Island is only accessible via boat. All campgrounds are located away from the boat landing areas. Visitors must carry all their gear to the campgrounds. No on-island transportation is provided.",
"trailerMaxLength":"0",
"adaInfo":"Due to Anacapa Island's isolation, steep cliffs, and boat transportation requirements, the Anacapa Island Campground is not accessible for individuals in wheelchairs or those with limited mobility.",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"3CCB0AF7-A364-4490-A788-EE00700BD108"

,"url":"https://antelopepointlakepowell.com/explore-lake-powell/rv-park/"

,"name":"Antelope Point RV Park"      

,"parkCode":"glca"

,"description":"While the Antelope Point RV park is not physically within the boundaries of Glen Canyon National Recreation Area, it is adjacent to the Antelope Point Marina, restaurant, gift shop. This is an RV site only. 104 full hook-up spaces, 15 pull-through spaces. Maximum Length - 70ft. 2 RV dump stations"

,"latitude":

"36.956030575674106" 

,"longitude":

"-111.43123626708984" 

,"latLong":"{lat:36.956030575674106, lng:-111.43123626708984}"

,"audioDescription":"Large area of flat RV sites with some green turf areas for walking. 15 pull-through sites. Two dump stations, no restrooms."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Antelope Point Marina's RV park takes reservations using a third party site."

,"reservationUrl":"https://www.roverpass.com/c/antelope-point-rv-park-page-az/booking/?slug=antelope-point-rv-park-page-az"

,"regulationsurl":""

,"regulationsOverview":"Please proceed to your site. Check in is not necessary. The RV office is located at the front of the RV Park in the conex box. Our office hours are now 9:00 AM to 5:00 PM Check-In: 1pm - 10pm Check-Out: 11am Please be careful as you are parking that you do not run over our new gravel or turf. There are also plants at the back and front of a lot of the pads, please do not run over or back over our new plants. Please help us keep the park beautiful by staying on the pavement and being careful where you drive. Please help keep our park clean for all guests by picking up all trash and keeping your site clean. You are liable for the actions of yourself, your children, your guests and your pets, and are financially liable for any damage done to park facilities by you or anyone in your group. Check out time is 11:00 AM. Garbage will not be picked up at your site, please take to dumpsters Check in time is 1:00 PM Quiet time is between 10 PM to 6 AM. Pet owners are required to clean up after their pets and dispose of"

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Flush Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - year round","potableWater":["Yes - year round"],"iceAvailableForSale":"Yes - year round","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"928-645-5900","description":"","extension":"5077","type":"Voice"}],"emailAddresses":[{"description":"Unknown if this email is valid. Please use their \"contact us\" feature on their website:\nhttps://antelopepointlakepowell.com/contact-us/","emailAddress":"info@antelopepointmarina.com"}]}
,"fees":[]
,"directionsOverview":"From AZ 98 take Navajo Rte 22B to the end. After going through the entrance station, turn right onto Marina Parkway. The RV park will be on your right."

,"directionsUrl":"https://www.google.com/maps/dir//Antelope+Point+Marina+Navajo+Nation+Reservation+537+Marina+Pkwy+Page,+AZ+86040/@36.9616396,-111.4317578,10z/data=!4m5!4m4!1m0!1m2!1m1!1s0x87341506c1469de5:0xc87ff40a2e307c03"

,"operatingHours":[{"exceptions":[],"description":"Check-in 1pm, check-out 11am.\nQuiet time 10pm - 6am.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Antelope Point RV Park"}]
,"addresses":[]
,"images":[{"credit":"Antelope Point Marina","crops":[],"title":"Antelope Point RV park","altText":"Aerial view of recreational vehicle campground","caption":"Antelope Point RV Park","url":"https://www.nps.gov/common/uploads/structured_data/7E3733CB-C900-8B13-A24B7886C66C5D66.png"}]
,"weatherOverview":"The weather in Glen Canyon National Recreation Area is usually typical for the high deserts. Summers are extremely hot with little, if any, shade. Winters are moderately cold with night time lows often below freezing. Spring weather is highly variable and unpredictable with extended periods of winds. Fall weather is usually nice and mild, a great time to beat the heat (and the crowds!)."

,"numberOfSitesReservable":"104"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"104",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"104",
"rvOnly":"104",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires only in the shared fireplace/grills provided. Get a key from the campground host.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"Only one additional vehicle allowed and it must fit on your pad. All other vehicles, boats, etc. must be parked in the Marina parking lot. Boat trailer parking is prohibited unless it will fit on your pad. No parking in the gravel or driving on the gravel or turf. Stay on pavement. Please be cautious pulling in and out of spots that you do not run over the new plants, turf and gravel. Speed Limit:10 MPH",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"03608E50-3CA0-4AEA-9E6C-146FBD6D204B"

,"url":"https://www.recreation.gov/camping/campgrounds/252970?tab=info"

,"name":"Antietam Creek Campground"      

,"parkCode":"choh"

,"description":"Mile 69.4 (Washington County, MD) - The campground has 20 single campsites each with a picnic table, fire ring and grill. Each campsite will accommodate up to eight campers. Pit toilets are located between campsite #6 and campsite #7 adjacent to the towpath. A second set of chemical toilets are available down the towpath. Potable water is along the towpath at pumps (available mid-April to mid-November). No vehicular traffic is allowed on the towpath and access to the campsites is by foot only."

,"latitude":

"39.42110917600782" 

,"longitude":

"-77.74884282038619" 

,"latLong":"{lat:39.42110917600782, lng:-77.74884282038619}"

,"audioDescription":"[61 Words] Crossing a wooden boardwalk from the roadside to the towpath Antietam Creek Campground stretches to the North and South in about equal parts along the gravel towpath. There are 15 campsite, each about 50 feet by 65 feet with a picnic bench, fireplace, and charcoal grill. About halfway in the campground is one latrine with two stalls and two porta pottys."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"7C9E6483-90CC-41EB-8F58-03DF4FD60147"

,"reservationInfo":"April 15 - November 15 (Peak Season): $20/night; November 16 - April 14 (Non-Peak Season): $10/night"

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/252970"

,"regulationsurl":""

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["Portable Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - seasonal","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"301-739-4200","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"choh_information@nps.gov"}]}
,"fees":[{"cost":"20.00","description":"April 15 - November 15\n(Peak Season)","title":"Tent Only Nonelectric (Peak Season)"},{"cost":"10.00","description":"November 16 - December 31\n(Non-Peak Season)","title":"Tent Only Nonelectric (Non-Peak Season)"}]
,"directionsOverview":"Near Sharpsburg, Washington County, Maryland"

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Peak Season: April 15 - November 15 || Non-Peak Season: November 16 - April 14","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Antietam Creek Campground"}]
,"addresses":[]
,"images":[{"credit":"Stephanie Spencer","crops":[],"title":"Antietam Creek Campground","altText":"Grass covered campsite with a picknick table.","caption":"Antietam Creek Campground","url":"https://www.nps.gov/common/uploads/structured_data/A092A660-C86B-3233-B232AD109C3BC17C.jpg"},{"credit":"NPS Photo / Stephanie Spencer","crops":[],"title":"Antietam Creek Aqueduct","altText":"A aqueduct with three arches spans Antietam Creek","caption":"Antietam Creek Aqueduct","url":"https://www.nps.gov/common/uploads/structured_data/55304128-BD19-07FE-BE8ED6DC33A5FEF4.jpg"}]
,"weatherOverview":"The Washington, DC, area has a four-season Mid-Atlantic climate. Summertime is warm and humid, while winter can be cold and snowy. Precipitation averages 2-4” monthly, year-round. The climate gradually gets cooler and wetter further west along the canal where the elevation is higher."

,"numberOfSitesReservable":"20"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"20",
"group":"0",
"horse":"0",
"tentOnly":"20",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"20",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires are permitted only in established fire rings. Please ensure that your fire is extinguished completely each time you leave the area. The cutting or defacing of any live growth is strictly prohibited. Kiln fired or dried wood may be brought into the park. Fallen dead timber in the park may be used for on-site firewood. Bring handsaws to cut fallen wood. Chainsaws are prohibited. Park Rangers reserve the right to ban all fires during periods of drought.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"Well water within the reservable campgrounds is potable and treated with iodine - do NOT drink if you have any iodine allergies or if you are on medication for an overactive thyroid. In general, well water is clean and able to be used without additional treatment. However, as a general precaution for wells located in a flood zone, you are advised to boil or treat the water before use for your own protection. Water is turned off from mid-November to mid-April each year.",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"48F2732E-4251-4D81-875C-8E52839620B5"

,"url":""

,"name":"Apgar Campground"      

,"parkCode":"glac"

,"description":"Apgar campground is the largest campground in the park. It is situated in trees and provides tent and RV campers with shade and some privacy. Evening sunsets on Lake McDonald are only a short stroll, and you won't want to miss evening programs with a ranger at the Apgar Amphitheater. Many trails are located within a short drive of the campground. Advanced reservations are required for all sites. Click the reservation button below for details."

,"latitude":

"48.5260810439" 

,"longitude":

"-113.981860185" 

,"latLong":"{lat:48.5260810439, lng:-113.981860185}"

,"audioDescription":"Apgar campground is a maze of paved loops circling through a pine forest. There are no views of the nearby lake or roads."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"2910E5F1-BFC9-4755-877C-A95FA2252906"

,"reservationInfo":"Reservations are required throughout the spring, summer, and fall at Apgar Campground. A reservation is not required during the winter months. Reservations must be made through Recreation.gov. Five group sites are available for reservation for parties of 9-24 people. Reservations are also required for group campsites."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/234669"

,"regulationsurl":"https://www.nps.gov/glac/planyourvisit/camping.htm"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Flush Toilets - seasonal","Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None","Free - Seasonal"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"Yes - seasonal","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"1-877-444-6777","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"This is the park's general contact email. This is not an email for making campground reservations. There is no direct email for the park's campgrounds. \n\nYou can make campground reservations on recreation.gov or by calling 1-877-444-6777.","emailAddress":"glac_questions@nps.gov"}]}
,"fees":[{"cost":"23.00","description":"Campsite capacity is limited to eight people and two vehicles, where space is available. A maximum of two tents per site is permitted.","title":"Reservation summer status"},{"cost":"10.00","description":"October 4–31 and April 1-April 24.","title":"Primitive camping status"},{"cost":"0.00","description":"November 1–March 31: Free with valid entrance pass","title":"Winter status"}]
,"directionsOverview":"GPS Info. (Latitude, Longitude): 48.525, -113.98361 48°31'30\"N, 113°59'1\"W Located 1 mile northeast of the west entrance near West Glacier, Montana. Access is from U.S. Highway 2, approximately 32 miles northeast of Kalispell, Montana."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"startDate":"2023-10-04","name":"Primitive Fall and Winter Season","endDate":"2024-04-24"}],"description":"In the spring and fall the campground coverts to primitive status. Beginning November 1 through March 31 the campground is open for winter camping.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Apgar Campground"}]
,"addresses":[{"postalCode":"59936","city":"West Glacier","stateCode":"MT","countryCode":"US","provinceTerritoryCode":"","line1":"PO Box 128","type":"Mailing","line3":"","line2":"Attn: Apgar Campgrounds"}]
,"images":[{"credit":"NPS/Gabriel Morrow","crops":[],"title":"Apgar Picnic Area","altText":"shoreline of mountain lake surrounded by forest","caption":"Shoreline view from picnic area","url":"https://www.nps.gov/common/uploads/structured_data/309E8537-1DD8-B71B-0BD307081BCD3FDA.jpg"},{"credit":"NPS/David Restivo","crops":[],"title":"Apgar Amphitheater","altText":"two aisles run through green benches that point to platform","caption":"Attend an evening program at Apgar Amphitheater","url":"https://www.nps.gov/common/uploads/structured_data/3105A601-1DD8-B71B-0B1F749E36AA5922.jpg"},{"credit":"NPS/Jacob W. Frank","crops":[],"title":"Camping in winter","altText":"tent and picnic table in snowy forest","caption":"Apgar is open yearround","url":"https://www.nps.gov/common/uploads/structured_data/314F0032-1DD8-B71B-0BEE8CBD66A6ADBB.jpg"}]
,"weatherOverview":"Apgar is located in a dense forest on the western side of the park at an elevation of nearly 3,500 feet. This area of the park generally receives the most rainfall. Daytime temperatures can exceed 90 degrees, although it is frequently 10 to 15 degrees cooler at higher elevations. Weather in the mountains can be varied, including snow in summer. Visitors should come prepared for anything."

,"numberOfSitesReservable":"188"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"194",
"group":"5",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"2 campsites (C152, C122)",
"internetInfo":"",
"cellPhoneInfo":"Connectivity is very spotty and only certain carriers may have service.",
"fireStovePolicy":"Picnic tables and fire rings are provided.",
"rvAllowed":"1",
"rvInfo":"25 sites can accommodate up to a 40 foot RV or truck and trailer combination",
"rvMaxLength":"40",
"additionalInfo":"Nearby public boat dock.",
"trailerMaxLength":"40",
"adaInfo":"Restroom facilities are accessible. Amphitheater is accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"18D6C184-E9BB-4590-93FF-09CE0210C13A"

,"url":""

,"name":"Army Camp"      

,"parkCode":"neri"

,"description":"This campground offers both tent and RV campsites along the banks of the New River at one of its many horseshoe bends. There are 11 drive-in sites for RVs, campers, and tents. Only small (less than 25 feet) and medium (22 - 31.5 feet) RVs or campers are recommended. Large RVs or campers are not recommended. Some sites offer partial shade; others are located in the open with no shade. Camp only at designated sites. RV, camper, or car camping in non-designated sites is strictly prohibited."

,"latitude":

"37.85814480804737" 

,"longitude":

"-81.09902510804346" 

,"latLong":"{lat:37.85814480804737, lng:-81.09902510804346}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"BC20A805-FDD8-42CA-91F5-501CD1F9DC7C"

,"reservationInfo":"All sites are managed on a first-come, first-served basis and reservations are not accepted."

,"reservationUrl":""

,"regulationsurl":"http://www.nps.gov/neri/planyourvisit/campgrounds.htm"

,"regulationsOverview":"• Camp only in designated campsites. • RV, Camper, and Car camping only permitted at drive-in campsites. • No more than 2 tents or 1 tent and 1 RV/Camper per campsite. • No more than 2 vehicles permitted per campsite. • Campers must occupy permitted campsites each night. • No more than 8 people and 4 pets per campsite. • Camping limit of no more than a total of 14 days per 28-day period in any park campground. • Quiet hours are from 10:00 PM to 6:00 AM. • Pets must be kept on a leash. • Use existing fire rings for campfires. Burn only dead wood found on the ground. • Use the provided toilet facilities. • Do not drive nails into trees or hang lanterns against trees. • Public intoxication, disorderly conduct, and possession of alcohol by minors is prohibited. • Possession and use of firearms is prohibited in all campgrounds. • Littering is prohibited. Dispose of trash in a bear-proof trash receptacle. • Avoid glass containers, use plastic or aluminum. • Respect all other park visitors and campers."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Composting Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"3044650508","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"neri_interpretation@nps.gov"}]}
,"fees":[{"cost":"0.00","description":"These primitive camping areas have no drinking water or hookups, and limited restroom facilities. All sites are managed on a first-come, first-served basis and reservations are not accepted. There are no fees for camping.","title":"Army Camp"}]
,"directionsOverview":"Located on an unmarked dirt road, off Route 41 near Prince. Coming from Beckley, it is the first left after crossing the New River."

,"directionsUrl":"http://www.nps.gov/neri/planyourvisit/campgrounds.htm"

,"operatingHours":[{"exceptions":[],"description":"Campsites at Army Camp are open year round.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Army Camp"}]
,"addresses":[{"postalCode":"25907","city":"Prince","stateCode":"WV","countryCode":"US","provinceTerritoryCode":"","line1":"Army Camp Campground","type":"Physical","line3":"","line2":""},{"postalCode":"25846","city":"Glen Jean","stateCode":"WV","countryCode":"US","provinceTerritoryCode":"","line1":"PO Box 246, 104 Main Street","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"Army Camp Campground","altText":"A grassy field with a few trees, campsites, and restroom facility in it","caption":"The campground at Army Camp offers 11 drive in sites around a grassy field on the banks of the New River.","url":"https://www.nps.gov/common/uploads/structured_data/3C7FCAC8-1DD8-B71B-0BEB9255CDE4CDB8.jpg"},{"credit":"NPS","crops":[],"title":"Standard Campsite at Army Camp","altText":"A sunny campsite in a grassy area with a picnic table and grill","caption":"Campsites at Army Camp each offer a camping pad, picnic table, and places for grilling and campfires.","url":"https://www.nps.gov/common/uploads/structured_data/3C7FC8F7-1DD8-B71B-0B20BDE1F49A7161.jpg"},{"credit":"NPS","crops":[],"title":"Partially Shaded Army Camp Campsite","altText":"A grassy field campsite with a picnic table and grill partially shaded by a few trees.","caption":"Some campsites at Army Camp offer partial shade.","url":"https://www.nps.gov/common/uploads/structured_data/3C7FC796-1DD8-B71B-0BA1D3D330C06B07.jpg"},{"credit":"NPS","crops":[],"title":"New River at Army Camp","altText":"A sandy beach at a clear fast flowing river next to a green tree covered bank","caption":"The swift water New River at Army Camp offers fishing and relaxation opportunities near your campsite.","url":"https://www.nps.gov/common/uploads/structured_data/3C7FCC3C-1DD8-B71B-0B113DE60C731930.jpg"},{"credit":"NPS","crops":[],"title":"Army Camp Picnic Area","altText":"Three picnic tables in a shaded forested area.","caption":"Day use picnic tables at Army Camp allow visitors to enjoy a meal near the New River.","url":"https://www.nps.gov/common/uploads/structured_data/3C7FCDB8-1DD8-B71B-0BFC2D9441620CC8.jpg"}]
,"weatherOverview":"Weather in the Appalachian Mountains can be unpredictable and can change quickly. Always be prepared for the possibility of sudden storms. Weather in the mountains is often cooler and wetter than the surrounding area. On average, the warmest month is July. The maximum average precipitation also occurs in July."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"11"

,"campsites":{
"totalSites":"11",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"11"
}

,"accessibility":{
"wheelchairAccess":"There is one wheelchair accessible campsite at this location. Composting restroom facilities are wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"Cell service is spotty and may not be reliable based on provider, weather, and location.",
"fireStovePolicy":"Use existing fire rings at campsites. Burn only dead wood found on the ground. Damaging or cutting down trees or branches for firewood is prohibited.",
"rvAllowed":"1",
"rvInfo":"All campsites are drive in and can accommodate small (less than 25 feet in total length) and medium (22 - 31.5 feet in length) RVs or trailers. Large RVs or trailers are not recommended. There are no pull-through campsites.",
"rvMaxLength":"31",
"additionalInfo":"",
"trailerMaxLength":"31",
"adaInfo":"There is one accessible campsite at this campground. Please display disability placard in your vehicle if using this site. Composting restroom facilities are accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"7475825B-E844-4012-841B-0E29E05D4540"

,"url":"https://www.nps.gov/romo/planyourvisit/agcg.htm"

,"name":"Aspenglen Campground"      

,"parkCode":"romo"

,"description":"Aspenglen Campground is open for the 2023 summer season. Aspenglen is reservation only - to make a reservation, visit Recreation.gov. Timed Entry Permits are included with your camping reservation. Campers will be able to initially enter the park beginning at 1 p.m. on the first day of your camping reservation. If you plan to enter the park earlier in the day, you will have to enter the park outside of the times when Timed Entry Permits are in effect."

,"latitude":

"40.39934770583215" 

,"longitude":

"-105.59305451637942" 

,"latLong":"{lat:40.39934770583215, lng:-105.59305451637942}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"4D716569-72FA-4D90-8A4D-ED2475396A08"

,"reservationInfo":"Aspenglen Campground is a reservation only campground. All sites are reservable up to six months in advance."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/233187"

,"regulationsurl":""

,"regulationsOverview":"There is an eight (8) person limit per site. Each camping site is limited to: one camping unit (i.e., a tent, RV, or trailer/tow vehicle) plus one additional tent. All tents shall be located on the tent pad. All additional camp structures must be self standing without impacts to vegetation or trees. Parking is limited to two (2) vehicles per site. A vehicle is defined as one vehicle, one trailer, one RV, or one towed unit. Each vehicle must be parked on the gravel or paved parking pad causing no resource degradation or encroachment onto the paved access road. Some sites will accommodate only one vehicle on the graveled parking pad. Extra vehicles must park in overflow areas. Check-in is after 1 p.m. Bears, Deer, elk, raccoons and skunks frequent the area: all food, pet food, cooking utensils and other scented items must be stored in a vehicle or food storage lockers located in the campground. For more regulations, visit https://www.recreation.gov/camping/campgrounds/233187?tab=info under \"Need to Know.\""

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"9705861206","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"romo_information@nps.gov"}]}
,"fees":[{"cost":"35.00","description":"Per site per night","title":"Camping Fee"}]
,"directionsOverview":"Immediately west of the Fall River Entrance Station, follow signs south to Aspenglen Campground."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Aspenglen Campground is open for the 2023 summer season. Aspenglen is reservation only - to make a reservation, visit Recreation.gov.\n\nTimed Entry Permits are included with your camping reservation. Campers will be able to initially enter the park beginning at 1 p.m. on the first day of your camping reservation. If you plan to enter the park earlier in the day, you will have to enter the park outside of the times when Timed Entry Permits are in effect.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Aspenglen Campground"}]
,"addresses":[{"postalCode":"80517","city":"Estes Park","stateCode":"CO","countryCode":"US","provinceTerritoryCode":"","line1":"Cascade Cottages Road","type":"Physical","line3":"","line2":"Rocky Mountain National Park"},{"postalCode":"80517","city":"Estes Park","stateCode":"CO","countryCode":"US","provinceTerritoryCode":"","line1":"Aspenglen Campground","type":"Mailing","line3":"","line2":"1000 US Highway 36"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Aspenglen Campground","altText":"Road through pines with tent sites","caption":"Aspenglen Campground is nestled in a pine forest near Fall River","url":"https://www.nps.gov/common/uploads/structured_data/3FAA6E89-1DD8-B71B-0B170E56BD4ED00D.jpg"},{"credit":"NPS Photo","crops":[],"title":"Campsite with popup camper and comfort station","altText":"Popup camper at campsite with picnic table and comfort station","caption":"A typical campsite at Aspenglen Campground.","url":"https://www.nps.gov/common/uploads/structured_data/3FB3F3FE-1DD8-B71B-0B9E4BCE69676E6D.jpg"},{"credit":"NPS Photo","crops":[],"title":"Aspenglen Comfort Station","altText":"Comfort station set in trees","caption":"A comfort station (restroom) at Aspenglen Campground.","url":"https://www.nps.gov/common/uploads/structured_data/3FC22E4A-1DD8-B71B-0B1EF349ED80CF5A.jpg"},{"credit":"NPS Photo","crops":[],"title":"Food Storage Locker","altText":"A visitor places food in a food storage locker","caption":"Use food storage lockers to protect food from bears and other wildlife.","url":"https://www.nps.gov/common/uploads/structured_data/3FCBC8C3-1DD8-B71B-0BCD4A43E1924C05.jpg"}]
,"weatherOverview":"Average High and Low Temperatures (Fahrenheit): May: 62 / 34 June: 73 / 41 July: 78 / 46 August: 77 / 45 September: 70 / 38"

,"numberOfSitesReservable":"54"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"52",
"group":"0",
"horse":"0",
"tentOnly":"13",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"5",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Two ADA sites are offered for those customers with a disability or otherwise limited mobility who would benefit from the accessibility design features.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires are only allowed in metal fire grates. Never leave fires or coals unattended. Fires must be completely extinguished before leaving campsite or going to bed. Gathering firewood or fire-starting materials is prohibited.",
"rvAllowed":"1",
"rvInfo":"Generators may be run only in Loop C between 7:30 - 10 am and 4 - 8:30 pm. There is no dump station—RV sewage and wastewater tanks must be emptied at the dump station located in Moraine Park Campground",
"rvMaxLength":"30",
"additionalInfo":"All campers are required to store all food items in food storage lockers.",
"trailerMaxLength":"30",
"adaInfo":"Two ADA sites are offered for those customers with a disability or otherwise limited mobility who would benefit from the accessibility design features.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"BC707FA3-F575-4734-8E62-34689982F615"

,"url":"https://www.nps.gov/seki/planyourvisit/atwell.htm"

,"name":"Atwell Mill Campground"      

,"parkCode":"seki"

,"description":"All sites are reservation only. 𝗢𝗽𝗲𝗻𝗶𝗻𝗴 𝗗𝗮𝘁𝗲: Not currently accepting reservations for summer 2023, due to winter storm damage. Typically, reservations would begin on April 24, 2023, on a one-month rolling basis. The campground is situated along the East Fork of the Kaweah River. There are limited services at Silver City Resort, 1.7 miles (3 km) east of the campground. More services can be found in Three Rivers, 23 miles (37 km) west of Atwell Mill Campground (approximately 1.5 hours away)."

,"latitude":

"36.46466811721671" 

,"longitude":

"-118.66967218821418" 

,"latLong":"{lat:36.46466811721671, lng:-118.66967218821418}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"CCD1DDF8-0FC8-4696-AAA9-6DB31A0A232C"

,"reservationInfo":"All sites are reservation only. Reservations for all campsites at Atwell Mill Campground can be made up to one month in advance of your stay. Reservations open for the season on April 24, 2023, one month in advance of the campground opening date of May 24, 2023."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/seki/planyourvisit/cg_regs.htm"

,"regulationsOverview":"Black bears are active in this area. Food and scented items must be stored properly to protect bears and other wildlife. When you arrive at the campground, be prepared to store all food and scented items in metal food-storage boxes provided at each site. Learn more about bears and the importance of food storage: http://www.nps.gov/seki/planyourvisit/bears.htm Pets are permitted within the campground but must be leashed at all times. Leash should be no longer than 6 feet (1.8 m). Pets, including those riding in backpacks, are not allowed on any trails in Sequoia and Kings Canyon National Parks. For more information about pet regulations: https://www.nps.gov/seki/planyourvisit/pets.htm"

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"5595653341","description":"","extension":"","type":"Voice"},{"phoneNumber":"5595653730","description":"","extension":"","type":"Fax"}],"emailAddresses":[{"description":"","emailAddress":"SEKI_Information@nps.gov"}]}
,"fees":[{"cost":"28.00","description":"This fee covers up to six people at a single campsite per night.","title":"Camping Fee"},{"cost":"14.00","description":"This fee covers up to six people at a single campsite per night. \n\nAccess or Senior Passes provide a 50 percent discount on some amenity fees charged for facilities and services such as camping, swimming, boat launch, and specialized interpretive services. This does not apply to group campsites.","title":"Access Pass or Senior Pass Camping Fee"}]
,"directionsOverview":"Atwell Mill Campground is located 19 miles (31 km) from Highway 198 on Mineral King Road, which turns off in Three Rivers, and 6 miles (10 km) before the end of the road. The road is primarily unpaved, narrow, winding, and deeply rutted in places. It is not advised for longer vehicles, especially recreational vehicles. No RVs or trailers are permitted in the campground."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-05-22","name":"Not Accepting Reservations Due to Winter Storm Damage","endDate":"2023-10-10"},{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-10-11","name":"Seasonal Closure (Dates Subject to Change)","endDate":"2024-05-23"}],"description":"Atwell Mill Campground usually opens in late May and closes in late October.\n\n*Potable water is not always available in spring and fall.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Atwell Mill Campground"}]
,"addresses":[{"postalCode":"93271","city":"Sequoia National Park","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"Mile 19.1, Mineral King Road","type":"Physical","line3":"","line2":""},{"postalCode":"93271","city":"Three Rivers","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"47050 Generals Highway","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Accessible Restroom","altText":"A primitive restroom building","caption":"The ground around the restroom is level and firm-packed.","url":"https://www.nps.gov/common/uploads/structured_data/3E5F633B-ACDC-C983-8134C4784DF573DE.jpg"},{"credit":"NPS Photo","crops":[],"title":"Campsites","altText":"Picnic tables on level ground in a shady forest","caption":"Atwell Mill's campsites are in a shady sequoia grove.","url":"https://www.nps.gov/common/uploads/structured_data/3E48DE93-BA25-E1A1-CDF3601CA40B20F5.jpg"},{"credit":"NPS Photo","crops":[],"title":"Campground Entrance","altText":"A sign reads \"Atwell Mill Campground\" near a narrow road","caption":"The roads leading to the campground are extremely narrow and winding.","url":"https://www.nps.gov/common/uploads/structured_data/3E6AA4F7-D941-2D11-F43BF45E634F0971.jpg"},{"credit":"NPS Photo","crops":[],"title":"Accessible Campsite","altText":"A marker with an accessibility symbol near a forested campsite","caption":"This accessible campsite features level, firm-packed surfaces.","url":"https://www.nps.gov/common/uploads/structured_data/3E5338A6-F31F-12F6-4BE035A966B6240C.jpg"}]
,"weatherOverview":"This campground is at 6,650 feet (2,027 m). Summers are usually warm and sunny, however the weather can change at any time. Be prepared for three-season camping, even in summer."

,"numberOfSitesReservable":"21"

,"numberOfSitesFirstComeFirstServe":"21"

,"campsites":{
"totalSites":"21",
"group":"0",
"horse":"0",
"tentOnly":"21",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Campground roads are unpaved, rutted, and uneven.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"In summer, fire restrictions may be in effect if conditions are dry, even at higher-elevation campgrounds. When fire danger is very high, wood and charcoal fires (including campfires in fire rings and wood-burning stoves) may be prohibited. Check current fire restrictions online or at park bulletin boards before you camp.",
"rvAllowed":"0",
"rvInfo":"No RVs or trailers permitted in campground.",
"rvMaxLength":"0",
"additionalInfo":"You are required to store food properly in order to protect bears. Each campsite has a large food storage locker (47”W x 33”D x 28”H) that is resistant to bears when properly latched. For more information: https://www.nps.gov/seki/planyourvisit/bears.htm.",
"trailerMaxLength":"0",
"adaInfo":"While there are currently no accessible campsites, our parks are committed to creating sites in the near future.",
"trailerAllowed":"0",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"18436909-D300-44A7-BD73-553AF16E576E"

,"url":""

,"name":"Au Sable East Group Backpacking Site"      

,"parkCode":"piro"

,"description":"Au Sable Point East Group Campground is 0.2 miles west of the Au Sable Light Station and inland from the North Country Trail. The group campsite is surrounded by a coniferous forest. There is access to Lake Superior with a view of the Grand Sable Dunes. One shared fire ring and pit toilet. Water source is Lake Superior. Lake Superior access for kayakers."

,"latitude":

"46.670375" 

,"longitude":

"-86.13682" 

,"latLong":"{lat:46.670375, lng:-86.13682}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Overnight camping is permitted only in designated backcountry sites. These sites can only be reached by hiking or paddling (a few sites are accessible by boat). A backcountry camping permit is required for all overnight stays - year round. A permit is valid only for the dates, locations, and party size specified. Permits are not required for day hiking; however, day hikers must observe backcountry regulations."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/256367"

,"regulationsurl":"https://www.nps.gov/piro/planyourvisit/upload/BackcountryPlannerUpdate2020-final-accessible.pdf"

,"regulationsOverview":"The key to a successful trip is careful planning and preparation. Please read attached document thoroughly. When planning your itinerary, keep in mind the time of year, terrain, weather, and the physical condition of everyone in your party. You can only travel as fast as the slowest person in your group."

,"amenities":{"trashRecyclingCollection":"","toilets":[],"internetConnectivity":"","showers":[],"cellPhoneReception":"","laundry":"","amphitheater":"","dumpStation":"","campStore":"","staffOrVolunteerHostOnsite":"","potableWater":[],"iceAvailableForSale":"","firewoodForSale":"","foodStorageLockers":""}
,"contacts":{"phoneNumbers":[{"phoneNumber":"(906) 387-3700","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"PIRO_Information@nps.gov"}]}
,"fees":[{"cost":"5.00","description":"Per person, per night charge. There is also a $15 reservation fee for the permit.","title":"Camping Fee - Per Person, Per Night"},{"cost":"15.00","description":"$15 non-refundable fee per reservation.","title":"(Plus Reservation Fee)"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[]
,"images":[{"credit":"Bill Mobilian","crops":[],"title":"Au Sable East Group Backpacking Site","altText":"Sign reads Au Sable Group Site. Dirt path leads to campsite in the background.","caption":"Au Sable Group Site","url":"https://www.nps.gov/common/uploads/structured_data/544A2566-05FE-7C67-9B9465ED8CBBB57A.jpeg"}]
,"weatherOverview":""

,"numberOfSitesReservable":"1"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"1",
"group":"1",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"1"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"F3ED602F-ECEE-4C10-9FBF-299331032221"

,"url":"https://www.nps.gov/piro/planyourvisit/backcountry.htm"

,"name":"Au Sable East Individual Backpacking Sites"      

,"parkCode":"piro"

,"description":"Au Sable Point East Campground is next to the Au Sable Point East Group Campground. Due to the dense forest, you are unable to see the neighboring campground. The six campsites are scattered throughout the trees. Shared fire ring and pit toilet. Water source is Lake Superior. Lake Superior access for kayakers"

,"latitude":

"46.669327" 

,"longitude":

"-86.135215" 

,"latLong":"{lat:46.669327, lng:-86.135215}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Overnight camping is permitted only in designated backcountry sites. These sites can only be reached by hiking or paddling (a few sites are accessible by boats). A backcountry camping permit is required for all overnight stays - year round. A permit is valid only for the dates, locations, and party size specified. Permits are not required for day hiking; however, day hikers must observe backcountry regulations."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/256367"

,"regulationsurl":""

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Water"," but not potable"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"(906) 387-3700","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"PIRO_Information@nps.gov"}]}
,"fees":[{"cost":"5.00","description":"Per person, per night charge. There is also a $15 reservation fee for the permit.","title":"Camping Fee - Per Person, Per Night"},{"cost":"15.00","description":"$15 non-refundable fee per reservation","title":"(Plus Reservation Fee)"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[]
,"images":[{"credit":"NPS","crops":[],"title":"AuSable East Backpacking Site","altText":"Cleared flat ground in the forests with sparse trees. Brown post with a tent symbol and the number 2","caption":"AuSable East Site 2.","url":"https://www.nps.gov/common/uploads/structured_data/E5EF665E-C6E4-A218-1AA8E7BE01E45F31.png"}]
,"weatherOverview":""

,"numberOfSitesReservable":"6"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"6",
"group":"0",
"horse":"0",
"tentOnly":"6",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"6",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"One designated fire ring.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"2DEFC258-0088-4E21-B429-7B7014B09060"

,"url":""

,"name":"Avalanche"      

,"parkCode":"glac"

,"description":"Avalanche campground in located in one of the most popular sections of Glacier National Park west of the Continental Divide. The campground accommodates tent and RV campers, however only 50 sites will accommodate vehicle lengths up to 26 feet. Bring your hiking boots and binoculars. Two popular day hikes offer spectacular scenery and glimpses of birds and wildlife that inhabit the area. Advanced reservations are required for all sites. Check Recrecreation.gov for details."

,"latitude":

"48.6765458636" 

,"longitude":

"-113.818525079" 

,"latLong":"{lat:48.6765458636, lng:-113.818525079}"

,"audioDescription":"Avalanche campground is located in a dense dark cedar forest."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"B6204566-4AAC-48DA-9965-454C20DA8112"

,"reservationInfo":"Campsites become reservable on a rolling basis, 6 months in advance from the date you want to book your stay. New in 2023, a certain number of sites will be reservable up to 4 days before the desired date."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/258796"

,"regulationsurl":"https://www.nps.gov/glac/planyourvisit/camping.htm"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"Yes - seasonal","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"1-877-444-6777","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"This is the park's general contact email. There is no direct email for the park's campgrounds.","emailAddress":"glac_questions@nps.gov"}]}
,"fees":[{"cost":"20.00","description":"Avalanche campground is reservation only. Campsite capacity is limited to eight people and two vehicles, where space is available. A maximum of two tents per site is permitted.","title":"Summer fee"}]
,"directionsOverview":"Approximate driving distance via Going-to-the-Sun Road from West entrance: 15.7mi from St. Mary entrance: 34mi"

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-09-18","name":"Winter Closure","endDate":"2024-07-16"}],"description":"Avalanche Campground's summer season typically runs from about July 17 to September 17.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Avalanche"}]
,"addresses":[{"postalCode":"59936","city":"West Glacier","stateCode":"MT","countryCode":"US","provinceTerritoryCode":"","line1":"","type":"Physical","line3":"","line2":""},{"postalCode":"59936","city":"West Glacier","stateCode":"MT","countryCode":"US","provinceTerritoryCode":"","line1":"PO Box 128","type":"Mailing","line3":"","line2":"Attn: Avalanche Campground"}]
,"images":[{"credit":"NPS/David Restivo","crops":[],"title":"Avalanche Campground","altText":"tent, picnic table, and fire ring in forest site","caption":"Nestled among western hemlock and western red cedar","url":"https://www.nps.gov/common/uploads/structured_data/31BC1A7A-1DD8-B71B-0BE59EFB259EABCD.jpg"},{"credit":"NPS/Gabriel Morrow","crops":[],"title":"Avalanche Amphitheater","altText":"rows of wooden benches on gravel by trees","caption":"Simple bench seating","url":"https://www.nps.gov/common/uploads/structured_data/31D83BF7-1DD8-B71B-0B958DBAED84008D.jpg"}]
,"weatherOverview":"Glacier's weather is highly variable and can be extreme. Warm days and cool nights are the norm in summer. Even when it's in the 80s and 90s in the daytime it can cool down into the 40s at night. Hikers setting out on a warm summer day, should still bring along rain gear and lots of extra clothing. Dressing in layers is key to a comfortable visit all year long."

,"numberOfSitesReservable":"87"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"87",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"4",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"1 campsite (A33)",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Picnic tables and fire rings provided.",
"rvAllowed":"1",
"rvInfo":"50 sites can accommodate up to a 26 foot RV or truck and trailer combination.",
"rvMaxLength":"26",
"additionalInfo":"",
"trailerMaxLength":"26",
"adaInfo":"Restrooms facilities are accessible. Accessible Trails: Trail of the Cedars starts at the Avalanche Picnic Area, it is a 0.7 mile (1.1 km) accessible trail through old growth cedars. Trail surface is wood boardwalk and a sustainable non-asphalt polymer pavement.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"D82D2D01-80E6-4394-BEC0-C41ECAC12798"

,"url":"https://www.nps.gov/seki/planyourvisit/azalea.htm"

,"name":"Azalea Campground"      

,"parkCode":"seki"

,"description":"𝗢𝗽𝗲𝗻 𝘆𝗲𝗮𝗿-𝗿𝗼𝘂𝗻𝗱 𝗲𝘅𝗰𝗲𝗽𝘁 𝘄𝗵𝗲𝗻 𝘄𝗲𝗮𝘁𝗵𝗲𝗿 𝗼𝗿 𝘀𝗮𝗳𝗲𝘁𝘆 𝗰𝗼𝗻𝗱𝗶𝘁𝗶𝗼𝗻𝘀 𝗿𝗲𝗾𝘂𝗶𝗿𝗲 𝗮 𝗰𝗹𝗼𝘀𝘂𝗿𝗲. All sites are reservation only. Reservations can be made up to four months in advance."

,"latitude":

"36.74133435099185" 

,"longitude":

"-118.96777677730648" 

,"latLong":"{lat:36.74133435099185, lng:-118.96777677730648}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"4064BDAD-C201-46B9-A887-F3B606572CA0"

,"reservationInfo":"In winter, Azaela Campground has 20 sites open on a first-come, first-served basis. For those same 20 sites, reservations begin on January 10, 2023, on a four-month basis, for a summer opening date of May 10, 2023. 90 sites open on May 24, 2023, with reservations beginning on January 24, 2023, on a four-month rolling basis."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/10124502"

,"regulationsurl":"https://www.nps.gov/seki/planyourvisit/cg_regs.htm"

,"regulationsOverview":"Black bears are active in this area. Food and scented items must be stored properly to protect bears and other wildlife. When you arrive at the campground, be prepared to store all food and scented items in metal food-storage boxes provided at each site. Learn more about bears and the importance of food storage: http://www.nps.gov/seki/planyourvisit/bears.htm Pets are permitted within the campground but must be on a leash no longer than 6 feet (1.8 m). Pets, including those riding in backpacks, are not allowed on any trails in Sequoia and Kings Canyon National Parks. For more information about pet regulations: https://www.nps.gov/seki/planyourvisit/pets.htm Gates open/close at 12 pm on open and close dates. Check-in at 12 pm or later. Check out before 12 pm. If you have not checked in by noon on the second day of your reserved, your reserved site may be considered unoccupied and opened to new campers. Buy firewood at local markets, do not cut standing or living trees."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Flush Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"Yes - year round","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - year round"],"iceAvailableForSale":"Yes - year round","firewoodForSale":"Yes - seasonal","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"5595653341","description":"","extension":"","type":"Voice"},{"phoneNumber":"5595653730","description":"","extension":"","type":"Fax"}],"emailAddresses":[{"description":"","emailAddress":"SEKI_Information@nps.gov"}]}
,"fees":[{"cost":"28.00","description":"This fee is charged for standard sites that accommodate up to 6 people, and is charged per night.","title":"Camping Fee for Tent and RV Sites"},{"cost":"14.00","description":"This fee is valid for up to six people at a campsite. Valid with America the Beautiful Senior or Access passes.","title":"Senior/Access Camping Fee-Tent and RVs"}]
,"directionsOverview":"This campground is 3.5 miles (5.6 km) from the Kings Canyon entrance, in the Grant Grove area. Services can be found in Grant Grove Village."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Azalea campground is open year-round. In winter, only the main loop remains open reducing capacity to 21 sites on a first-come, first-served basis.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Azalea Campground"}]
,"addresses":[{"postalCode":"93633","city":"Grant Grove","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"Azalea Drive","type":"Physical","line3":"","line2":""},{"postalCode":"93271","city":"Three Rivers","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"47050 Generals Highway","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Azalea Campground Sign","altText":"An engraved wooden sign","caption":"Azalea Campground is located in Grant Grove just off of Highway 180.","url":"https://www.nps.gov/common/uploads/structured_data/3C7EDD05-1DD8-B71B-0BA57D1C0E6BA0BE.jpg"},{"credit":"NPS Photo","crops":[],"title":"Azalea Campground Campsite","altText":"A tent in a campsite","caption":"Azalea Campground is a popular destination for tent campers.","url":"https://www.nps.gov/common/uploads/structured_data/3C7EDEDA-1DD8-B71B-0B495430F2DE8557.jpg"},{"credit":"NPS Photo","crops":[],"title":"Azalea Campground Campsites","altText":"Two campsites beneath incense cedars","caption":"Azalea Campground is located in the mixed conifer zone, which includes Incense Cedars.","url":"https://www.nps.gov/common/uploads/structured_data/3C7EE094-1DD8-B71B-0B07FCFB962E1B77.jpg"}]
,"weatherOverview":"This campground is at 6,500 feet (1,980 m). Summers are usually warm and sunny, however the weather can change at any time. Be prepared for three-season camping, even in summer. Winters are cold and snowy."

,"numberOfSitesReservable":"110"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"110",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"The campground road is paved and relatively flat.",
"internetInfo":"Wifi is available at Kings Canyon Visitor Center.",
"cellPhoneInfo":"A pay phone is available at Kings Canyon Visitor Center.",
"fireStovePolicy":"Park fire restrictions may change depending on weather and conditions. Check the current restrictions online or at park bulletin boards before you camp.",
"rvAllowed":"1",
"rvInfo":"The length of RV or trailer that can be accommodated varies by site. Site 93 can accommodate RVs up to 47 feet in length. The campground has no hookups or dump stations. The nearest dump stations (summer only) are located at Dorst Creek Campground (when open) in Sequoia National Park, or Princess Campground (Hwy 180 at Hume Lake junction) in Sequoia National Forest. Generators are allowed between 9 am to 9 pm.",
"rvMaxLength":"47",
"additionalInfo":"In winter, campsites may be snow covered.",
"trailerMaxLength":"30",
"adaInfo":"Site 30 is designated accessible. It is relatively level with a tent pad and firm and stable surfaces. The site features an accessible parking space, an extended picnic table, a raised fire ring, and connects to the fee station and accessible restroom via the flat, paved campground road.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"43CF9CC2-4B3F-496F-9587-26F98A454217"

,"url":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"name":"Back Country Camping - Green Run"      

,"parkCode":"asis"

,"description":"Bayside back country site"

,"latitude":

"38.0799522999743" 

,"longitude":

"-75.2135101005224" 

,"latLong":"{lat:38.0799522999743, lng:-75.2135101005224}"

,"audioDescription":"The Green Run backcountry campsite is in the Maryland district and is located at GPS coordinates 38.0799523; -75. 2135101. It is accessible by land and by canoe or kayak. To hike on land, it is 10.5 miles south of the North Ocean Beach parking lot and 15 miles from the Toms Cove Visitor Center. A white sign at kilometer 29.2 with a brown camping icon, hiking icon and an arrow directing you to the west through the dune crossing. Continue south on the trail behind the dune. The first dirt access road to the west leads to Green Run. To access by canoe or kayak it is a 9 mile paddle south from Old Ferry Landing. As you approach by water you will see posts with orange reflective tape on them marking the route. The campsite is in an open clearing within the pine forest area with light pine cover, providing some shade and wind protection. Biting insects are likely. Each site is delineated by a 50 foot radius around a fire ring. Each site has a picnic table, fire ring and lantern hangers. Green Run can accommodate up to 3 groups or 15 people. There is a vault toilet available for shared use by all groups. There is no fresh water available. There are views of the Chincoteague Bay and salt marsh."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"B557BCD3-8C85-57EF-814E-2B8D3D31E1CF"

,"reservationInfo":"Reservations are not accepted due to changing weather conditions."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"regulationsOverview":"Pets are not allowed in the back country sites. Permits will not be issued until all parties are present. Transportation of campers or any of their equipment by motorized boat or vehicles (including vehicles with Over-Sand Permits) is strictly prohibited. Only dead and down wood may be collected for burning. You must pack all your trash out with you. Glass bottles and containers are prohibited in the back country campsites. Entering or approaching any buildings or closed areas is prohibited. Please see the back country brochure for additional information"

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Fee for back country camping. Permit may be obtained for up to 7 days per trip on a first come/first serve basis on the day of departure. Permits may be obtained at the Maryland District Ranger Station or the Tom's Cove Visitor Center in Virginia. Fee is per person for everyone over 16 years of age. No reservations are accepted","title":"Back Country Camping Permit"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Acces","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Open year round. Closures are subject to weather conditions and hunting seasons","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Back Country Camping - Green Run"}]
,"addresses":[{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Ranger Station/Campground Office - Maryland District","type":"Physical","line3":"","line2":"6633 Bayberry Drive"},{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Business Offices - Maryland District","type":"Mailing","line3":"","line2":"7206 National Seashore Lane"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Green Run Campsite","altText":"Green Run Campsite","caption":"Green Run Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BE695F8F-E81D-0309-404221381B5A714C.jpg"},{"credit":"NPS Photo","crops":[],"title":"Green Run Restroom","altText":"Green Run Restroom","caption":"Green Run Restroom","url":"https://www.nps.gov/common/uploads/structured_data/BE96ADF1-E292-FA45-D7907F4D5E50C826.jpg"},{"credit":"NPS Photo","crops":[],"title":"View of Green Run from the Water","altText":"View of Green Run from the Water","caption":"View of Green Run from the Water","url":"https://www.nps.gov/common/uploads/structured_data/BEA1AA37-F0A8-9677-6CCAFDB2B0F267D6.jpg"},{"credit":"NPS Photo","crops":[],"title":"Green Run Dock","altText":"Green Run Dock","caption":"Green Run Dock","url":"https://www.nps.gov/common/uploads/structured_data/BEAD53D3-C4DD-EF36-4D1E8C74A3A45491.jpg"}]
,"weatherOverview":"Spring: Often windy and cool with lows in the 40's and highs in the 60's. Summer: Hot and humid with lows in the 60's and highs in the 80's. Fall: Warm with lows in the 50's and highs in the 70's. Winter: Damp cold and often windy. Lows in the 20's, highs in the 40's. http://www.nps.gov/asis/planyourvisit/weather.htm"

,"numberOfSitesReservable":"1"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"15",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair accessible trails - Maryland District Life of the Forest Trail- 1/2 mile loop Life of the Marsh Trail - 1/2 mile loop Bicycle Bridge - 1/2 mile Back country site require hiking or paddling several miles to access the sites. The sites are not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"0",
"rvInfo":"Not allowed",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"All visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit www.ada.gov/service_animals_2010.htm",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"8540D911-6CCA-4DD7-A515-34A3939BABFE"

,"url":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"name":"Back Country Camping - Little Levels"      

,"parkCode":"asis"

,"description":"Back Country Camping, bayside"

,"latitude":

"38.1521378003843" 

,"longitude":

"-75.1727157999991" 

,"latLong":"{lat:38.1521378003843, lng:-75.1727157999991}"

,"audioDescription":"The Little Levels backcountry campsite is in the Maryland district and is the most northern oceanside back country campsite and is located at GPS coordinates 38.04778; -75.23417. It is 4 miles south of the North Beach parking lot and 21 miles from the Toms Cove Visitor Center parking lot. It is accessible by hiking over sandy, uneven terrain. If hiking from the Toms Cove parking lot, a 7.5 mile gravel road is an alternative option to part of the hike on the sand. A white sign at kilometer 20.3 with a brown camping icon, hiking icon and an arrow direct you to the campsite behind the dunes. Camping is permitted within the boundaries and the site area will be sandy. This campsite is primarily a dune area with no wind protection or shade. Camping on or destroying a dune structure is prohibited. Little Levels can accommodate up to 5 groups or 25 people. There is a picnic table and a vault toilet available for use by all groups. There is no fresh water available. There are views of the Atlantic Ocean to the east and of maritime forest to the west."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"B098162E-D7C0-5AD0-A5E2-44E89EBA612D"

,"reservationInfo":"Reservations are not accepted due to changing weather conditions."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"regulationsOverview":"Pets are not allowed in the back country sites. Permits will not be issued until all parties are present. Transportation of campers or any of their equipment by motorized boat or vehicles (including vehicles with Over-Sand Permits) is strictly prohibited. Only dead and down wood may be collected for burning. You must pack all your trash out with you. Glass bottles and containers are prohibited in the back country campsites. Entering or approaching any buildings or closed areas is prohibited. Please see the back country brochure for additional information"

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Fee for back country camping. Permit may be obtained for up to 7 days per trip on a first come/first serve basis on the day of departure. Permits may be obtained at the Maryland District Ranger Station or the Tom's Cove Visitor Center in Virginia. Fee is per person for everyone over 16 years of age. No reservations are accepted","title":"Back Country Camping Permit"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Access Passport are valid for entry.","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Open year round. Closures are subject to weather conditions and hunting seasons.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Back Country Camping"}]
,"addresses":[]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Little Levels Campsite","altText":"Little Levels Campsite","caption":"Little Levels Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BF288D4B-CFF7-4E11-B95A0AD69F5FA50A.jpg"},{"credit":"NPS Photo","crops":[],"title":"Little Levels Restroom","altText":"Little Levels Restroom","caption":"Little Levels Restroom","url":"https://www.nps.gov/common/uploads/structured_data/BF41DD7A-BDDE-C664-988F95C7F0ED8D4F.jpg"},{"credit":"NPS Photo","crops":[],"title":"Little Levels Sign","altText":"Little Levels Sign","caption":"Little Levels Sign","url":"https://www.nps.gov/common/uploads/structured_data/BF61BD02-9E79-91FA-3237ED4B0E621391.jpg"}]
,"weatherOverview":"Spring: Often windy and cool with lows in the 40's and highs in the 60's. Summer: Hot and humid with lows in the 60's and highs in the 80's. Fall: Warm with lows in the 50's and highs in the 70's. Winter: Damp cold and often windy. Lows in the 20's, highs in the 40's. http://www.nps.gov/asis/planyourvisit/weather.htm"

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"25",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair accessible trails - Maryland District Life of the Forest Trail- 1/2 mile loop Life of the Marsh Trail - 1/2 mile loop Bicycle Bridge - 1/2 mile Back country site require hiking or paddling several miles to access the sites. The sites are not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"0",
"rvInfo":"not allowed",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"All visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit www.ada.gov/service_animals_2010.htm",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"BEAF9758-4BAB-4FE7-A6C0-7336362BDE42"

,"url":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"name":"Back Country Camping - Pine Tree"      

,"parkCode":"asis"

,"description":"Bay side back country campsite"

,"latitude":

"38.1432381002" 

,"longitude":

"-75.1883865003" 

,"latLong":"{lat:38.1432381002, lng:-75.1883865003}"

,"audioDescription":"The Pine Tree backcountry campsite is in the Maryland district and is the second most northern bayside back country campsite and is located at GPS coordinates 38.1432381; -75.1883865. It is accessible by land and by canoe or kayak. To hike on land, it is 6 miles south of the North Ocean Beach parking lot and 19.5 miles from the Toms Cove Visitor Center. A white sign at kilometer 21.8 with a brown camping icon, hiking icon and an arrow directing you to the west where a dirt access road leads to Pine Tree. To access by canoe or kayak it is a 5 mile paddle south from Old Ferry Landing. As you approach you will see posts with orange reflective tape on them marking the route. The campsite is in the pine forest area with shade, wind protection and some privacy. Biting insects are likely. Each site is delineated by a 50 foot radius around a fire ring. Each site has a picnic table, fire ring and lantern hangers. Pine Tree can accommodate up to 5 groups or 25 people. There is a vault toilet available for shared use by all groups. There is no fresh water available. There are views of the Chincoteague Bay and salt marsh."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"0233A9ED-BDB7-576A-8201-0C7B8C2D204B"

,"reservationInfo":"Reservations are not accepted due to changing weather conditions."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"regulationsOverview":"Pets are not allowed in the back country sites. Permits will not be issued until all parties are present. Transportation of campers or any of their equipment by motorized boat or vehicles (including vehicles with Over-Sand Permits) is strictly prohibited. Only dead and down wood may be collected for burning. You must pack all your trash out with you. Glass bottles and containers are prohibited in the back country campsites. Entering or approaching any buildings or closed areas is prohibited. Please see the back country brochure for additional information"

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Fee for back country camping. Permit may be obtained for up to 7 days per trip on a first come/first serve basis on the day of departure. Permits may be obtained at the Maryland District Ranger Station or the Tom's Cove Visitor Center in Virginia. Fee is per person for everyone over 16 years of age. No reservations are accepted","title":"Back Country Camping Permit"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Access Passport are valid for entry.","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Primitive back country site. Open year round. Closures are subject to weather conditions and hunting seasons.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Back Country Camping - Pine Tree"}]
,"addresses":[{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Ranger Station/Campground Office - Maryland District","type":"Physical","line3":"","line2":"6633 Bayberry Drive"},{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Business Offices - Maryland District","type":"Mailing","line3":"","line2":"7206 National Seashore Lane"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Pine Tree Campsite","altText":"Pine Tree Campsite","caption":"Pine Tree Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BAA75CC3-D425-8112-99FFD8D1CD7DD65F.jpg"},{"credit":"NPS Photo","crops":[],"title":"Pine Tree Restroom","altText":"Pine Tree Restroom","caption":"Pine Tree Restroom","url":"https://www.nps.gov/common/uploads/structured_data/BAB5D524-BECB-3902-41F79F08AF8FA42C.jpg"},{"credit":"NPS Photo","crops":[],"title":"Pine Tree Access Road","altText":"Pine Tree Access Road","caption":"Pine Tree Access Road","url":"https://www.nps.gov/common/uploads/structured_data/BACA0B1B-B2B6-05F0-8F11962DB65756B4.jpg"},{"credit":"NPS Photo","crops":[],"title":"View of Pine Tree from water","altText":"View of Pine Tree from water","caption":"View of Pine Tree from water","url":"https://www.nps.gov/common/uploads/structured_data/BAD82012-94A4-51A1-BC2040E36DA149A7.jpg"}]
,"weatherOverview":"Spring: Often windy and cool with lows in the 40's and highs in the 60's. Summer: Hot and humid with lows in the 60's and highs in the 80's. Fall: Warm with lows in the 50's and highs in the 70's. Winter: Damp cold and often windy. Lows in the 20's, highs in the 40's. http://www.nps.gov/asis/planyourvisit/weather.htm"

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"25",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair accessible trails - Maryland District Life of the Forest Trail- 1/2 mile loop Life of the Marsh Trail - 1/2 mile loop Bicycle Bridge - 1/2 mile Back country site require hiking or paddling several miles to access the sites. The sites are not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"0",
"rvInfo":"not allowed",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"All visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit www.ada.gov/service_animals_2010.htm",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"FB37FF71-E7EE-4B25-8117-842784111EEC"

,"url":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"name":"Back Country Camping - Pope Bay"      

,"parkCode":"asis"

,"description":"Bay side back country campsite"

,"latitude":

"38.0477905997415" 

,"longitude":

"-75.2341248002154" 

,"latLong":"{lat:38.0477905997415, lng:-75.2341248002154}"

,"audioDescription":"The Pope backcountry campsite is in the Maryland district and is the most southern bayside back country campsite and is located at GPS coordinates 38. 04778; -75. 23417. It is accessible by land and by canoe or kayak. To hike on land, it is 12 miles south of the North Ocean Beach parking lot and 12.5 miles from the Toms Cove Visitor Center. A white sign at kilometer 33.1 with a brown camping icon, hiking icon and an arrow directing you to the west through the dune crossing and the dirt access road that leads to Pope Bay. To access by canoe or kayak it is a 13 mile paddle south from Old Ferry Landing. As you approach you will see posts with orange reflective tape on them marking the route. The campsite is in an open clearing within the pine forest area with light pine cover, providing some shade and wind protection. Biting insects are likely. Each site is delineated by a 50 foot radius around a fire ring. Each site has a picnic table, fire ring and lantern hangers. Pope Bay can accommodate up to 2 groups or 10 people. There is a vault toilet available for shared use by all groups. There is no fresh water available. There are views of the Chincoteague Bay and salt marsh."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"226D96E6-0D85-5B09-84DE-2183E4874121"

,"reservationInfo":"Reservations are not accepted due to changing weather conditions"

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"regulationsOverview":"Pets are not allowed in the back country sites. Permits will not be issued until all parties are present. Transportation of campers or any of their equipment by motorized boat or vehicles (including vehicles with Over-Sand Permits) is strictly prohibited. Only dead and down wood may be collected for burning. You must pack all your trash out with you. Glass bottles and containers are prohibited in the back country campsites. Entering or approaching any buildings or closed areas is prohibited. Please see the back country brochure for additional information"

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Fee for back country camping. Permit may be obtained for up to 7 days per trip on a first come/first serve basis on the day of departure. Permits may be obtained at the Maryland District Ranger Station or the Tom's Cove Visitor Center in Virginia. Fee is per person for everyone over 16 years of age. No reservations are accepted\n\nhttp://www.nps.gov/asis/planyourvisit/backcountry-camping.htm","title":"Back Country Camping Permit"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Access Passport are valid for entry.","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Open year round. Closures are subject to weather conditions and hunting seasons.\n\nBack Country Camping Permit","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Back Country Camping - Pope Bay"}]
,"addresses":[{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Ranger Station/Campground Office - Maryland District","type":"Physical","line3":"","line2":"6633 Bayberry Drive"},{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Business Offices - Maryland District","type":"Mailing","line3":"","line2":"7206 National Seashore Lane"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Pope Bay Campsite","altText":"Pope Bay Campsite","caption":"Pope Bay Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BEC24D41-CD16-F5D9-B3D3728E4EDA7302.jpg"},{"credit":"NPS Photo","crops":[],"title":"View of Pope Bay From Water","altText":"View of Pope Bay From Water","caption":"View of Pope Bay From Water","url":"https://www.nps.gov/common/uploads/structured_data/BF02AC2E-E8F4-8578-C5DB63233658F7BE.jpg"},{"credit":"NPS Photo","crops":[],"title":"Pope Bay Access Road","altText":"Pope Bay Access Road","caption":"Pope Bay Access Road","url":"https://www.nps.gov/common/uploads/structured_data/BF0BD247-CED4-FF3D-B763E306056DF486.jpg"},{"credit":"NPS Photo","crops":[],"title":"Pope Bay Dock","altText":"Pope Bay Dock","caption":"Pope Bay Dock","url":"https://www.nps.gov/common/uploads/structured_data/BF146016-C0BF-5405-F1E11C99986533AD.jpg"}]
,"weatherOverview":"Spring: Often windy and cool with lows in the 40's and highs in the 60's. Summer: Hot and humid with lows in the 60's and highs in the 80's. Fall: Warm with lows in the 50's and highs in the 70's. Winter: Damp cold and often windy. Lows in the 20's, highs in the 40's. http://www.nps.gov/asis/planyourvisit/weather.htm"

,"numberOfSitesReservable":"1"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"10",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Back country site require hiking or paddling several miles to access the sites. The sites are not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"0",
"rvInfo":"Not allowed",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"ll visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit www.ada.gov/service_animals_2010.htm",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"B238585C-BEFC-446C-B433-F785D295873E"

,"url":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"name":"Back Country Camping - State Line"      

,"parkCode":"asis"

,"description":"Back Country Camping; ocean side"

,"latitude":

"38.04472" 

,"longitude":

"-75.23139" 

,"latLong":"{lat:38.04472, lng:-75.23139}"

,"audioDescription":"The State Line backcountry campsite is in the Maryland district and is the most southern oceanside back country campsite and is located on the ocean side at GPS coordinates 38.04472; -75.23139. It is one mile north of the fence that delineates Maryland and Virginia. It is accessible by hiking over sandy, uneven terrain. It is a 12.5 mile hike from the North Beach parking lot and a 12 mile hike from the Toms Cove Visitor Center parking lot. If hiking from the Toms Cove parking lot, a 7.5 mile gravel road (Service Road) is an alternative option to part of the hike on the sand. A white sign at kilometer 33.3 with a brown camping icon, hiking icon and an arrow direct you to the campsite behind the dunes. Camping is permitted within the boundaries and areas may be sandy while other areas within the boundary may have vegetation. This campsite is primarily a dune area with no wind protection or shade. Camping on or destroying a dune structure is prohibited. State line can accommodate up to 5 groups or 25 people. There is a picnic table and a vault toilet available for use by all groups. There is no fresh water available. There are views of the Atlantic Ocean to the east and views of maritime forest to the west."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Reservations are not accepted due to changing weather conditions."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"regulationsOverview":"Pets are not allowed in the back country sites. Permits will not be issued until all parties are present. Transportation of campers or any of their equipment by motorized boat or vehicles (including vehicles with Over-Sand Permits) is strictly prohibited. Only dead and down wood may be collected for burning. You must pack all your trash out with you. Glass bottles and containers are prohibited in the back country campsites. Entering or approaching any buildings or closed areas is prohibited. Please see the back country brochure for additional information"

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Fee for back country camping. Permit may be obtained for up to 7 days per trip on a first come/first serve basis on the day of departure. Permits may be obtained at the Maryland District Ranger Station or the Tom's Cove Visitor Center in Virginia. Fee is per person for everyone over 16 years of age. No reservations are accepted","title":"Back Country Camping Permit"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Access Passport are valid for entry.","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Open year round. Closures are subject to weather conditions and hunting seasons.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Back Country Camping - State Line"}]
,"addresses":[]
,"images":[{"credit":"NPS Photo","crops":[],"title":"State Line Sandy Campsite","altText":"State Line Sandy Campsite","caption":"State Line Sandy Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BF75BB1B-9CAA-C308-052FF88CF29EDEF6.jpg"},{"credit":"NPS Photo","crops":[],"title":"State Line Grassy Campsite","altText":"State Line Grassy Campsite","caption":"State Line Grassy Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BF8F4036-0ACF-7D89-CB90140B10BF1CD4.jpg"},{"credit":"NPS Photo","crops":[],"title":"State Line Sign","altText":"State Line Sign","caption":"State Line Sign","url":"https://www.nps.gov/common/uploads/structured_data/BF9B2A2B-B051-4FA6-8001F5AEB089A49B.jpg"}]
,"weatherOverview":"Spring: Often windy and cool with lows in the 40's and highs in the 60's. Summer: Hot and humid with lows in the 60's and highs in the 80's. Fall: Warm with lows in the 50's and highs in the 70's. Winter: Damp cold and often windy. Lows in the 20's, highs in the 40's. http://www.nps.gov/asis/planyourvisit/weather.htm"

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"25",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Back country site require hiking or paddling several miles to access the sites. The sites are not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"0",
"rvInfo":"None",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"All visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit www.ada.gov/service_animals_2010.htm",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"B9AF19E6-8B7F-482F-AFB7-E606FFD4BA4E"

,"url":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"name":"Back Country Camping - Tingles Island"      

,"parkCode":"asis"

,"description":"Bayside back country site"

,"latitude":

"38.1777120008" 

,"longitude":

"-75.1754320001" 

,"latLong":"{lat:38.1777120008, lng:-75.1754320001}"

,"audioDescription":"The Tingles Island backcountry campsite is in the Maryland district and is the most northern bayside back country campsite and is located at GPS coordinates 38.1777115; -75.1754318. It is accessible by land and by canoe or kayak. To hike on land, it is 3 miles south of the North Ocean Beach parking lot and 22.5 miles from the Toms Cove Visitor Center. A white sign at kilometer 17.4 with a brown camping icon, hiking icon and an arrow directing you to the west where a dirt access road leads to Tingles Island. To access by canoe or kayak it is a 2 mile paddle south from Old Ferry Landing. As you approach by water you will see posts with orange reflective tape on them marking the route. The campsite is in the pine forest area with shade, wind protection and some privacy. Biting insects are likely. Each site is delineated by a 50 foot radius around a fire ring. Each site has a picnic table, fire ring and lantern hangers. Tingles Island can accommodate up to 5 groups or 25 people. There is a vault toilet available for shared use by all groups. There is no fresh water available. There are views of the Sinepuxent Bay and salt marsh."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"46959393-005C-5E86-83FF-F22BB014DA59"

,"reservationInfo":"Reservations are not accepted due to changing weather conditions."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/backcountry-camping.htm"

,"regulationsOverview":"Pets are not allowed in the back country sites. Permits will not be issued until all parties are present. Transportation of campers or any of their equipment by motorized boat or vehicles (including vehicles with Over-Sand Permits) is strictly prohibited. Only dead and down wood may be collected for burning. You must pack all your trash out with you. Glass bottles and containers are prohibited in the back country campsites. Entering or approaching any buildings or closed areas is prohibited. Please see the back country brochure for additional information."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - seasonal","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Fee for back country camping. Permit may be obtained for up to 7 days per trip on a first come/first serve basis on the day of departure. Permits may be obtained at the Maryland District Ranger Station or the Tom's Cove Visitor Center in Virginia. Fee is per person for everyone over 16 years of age. No reservations are accepted.","title":"Back Country Camping Permit"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Access Passport are valid for entry.","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Open year round. Closures are subject to weather conditions and hunting seasons.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Back Country Camping - Tingles Island"}]
,"addresses":[{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Ranger Station/Campground Office - Maryland District 6633 Bayberry Drive","type":"Physical","line3":"","line2":"6633 Bayberry Drive"},{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Business Offices - Maryland District","type":"Mailing","line3":"","line2":"7206 National Seashore Lane"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Tingles Island Campsite","altText":"Tingles Island Campsite","caption":"Tingles Island Campsite","url":"https://www.nps.gov/common/uploads/structured_data/BFB4A68D-ED70-E2D1-BC66258CF6D8F49D.jpg"}]
,"weatherOverview":""

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"25",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair accessible trails - Maryland District Life of the Forest Trail- 1/2 mile loop Life of the Marsh Trail - 1/2 mile loop Bicycle Bridge - 1/2 mile Back country site require hiking or paddling several miles to access the sites. The sites are not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"0",
"rvInfo":"Not allowed",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"All visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit www.ada.gov/service_animals_2010.htm",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"9E0AF4C5-2100-427F-AF7D-D8653FBF3FA5"

,"url":"https://www.nps.gov/whsa/planyourvisit/backpackingpr.htm"

,"name":"Backcountry Camping"      

,"parkCode":"whsa"

,"description":"Due to rehabilitation of camping sites, backcountry camping is closed."

,"latitude":

"32.809869" 

,"longitude":

"-106.264225" 

,"latLong":"{lat:32.809869, lng:-106.264225}"

,"audioDescription":"The backcountry camping trail is located directly in the dunefield, surrounded by white sand dunes that can be as tall as 36 feet. Two separate mountain ranges are visible to the east and west. Ten campsites are spread out over the entirety of the two-mile loop trail, and are marked by brown wooden posts that emerge straight up from the ground. Fixed to these posts are small square signs with campsite numbers ranging from 1-10, arrows pointing in the direction of each site, and a small brown square showing two white silhouettes of gender-neutral hikers with walking sticks and backpacks. The sites themselves are located in the inner dune areas, which are the flat low points between dunes. The ground here is hard-packed, firmer, and often slightly darker than the soft white sand found in the dunes themselves. In some of the sites and along parts of the trail, you can find bushels of varying types of grasses, which tend to be around 1-2 feet tall and dark green and tan in color. There may also be other types of vegetation along the trail and in the campsites, including the soaptree yucca. Depending on the season, the yucca have two main components: their bayonet leaves, which are dark green, about an inch wide, and sharp enough at the tips to warrant their name; and the stem, which is a tall, woody feature that stands vertically from the base and is often over five feet tall. When a stem is present, many creamy white flowers rest on its tip. The flower petals harden after they bloom in late spring, and transform into firm capsules that house the yucca’s dark brown, round seeds. Each site is marked by a bright orange post that protrudes from the ground, with the site number on it."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Permits are sold on a same day, first-come, first-served basis at the entrance station."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/whsa/planyourvisit/backcountry-camping-tips.htm"

,"regulationsOverview":"You must vacate your site by 1 p.m. the following day. If you wish to renew your permit, you must do so in person at the entrance booth the following day. Quiet hours are from 10 p.m. to 6 a.m. Be respectful of other visitors to enjoy the solitude and quite of the dunes. No loud music or noises are allowed at any time of day. The park gates are locked every night approximately one hour after sunset. You cannot leave the park until the next morning when the park opens. Your camp should be set-up within five feet (1.52 m) of the site marker at your assigned site. Camping on top of a dune is not permitted. Hiking after dark is not recommended. Open campfires are NOT permitted in the dunes. Camp stoves are allowed, and they must be elevated at least six inches (15 cm) above the sand. All campers are expected to follow Leave No Trace principles and pack out all trash and waste."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["No Toilets"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"5754796124","description":"","extension":"206","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"whsa_interpretation@nps.gov"}]}
,"fees":[{"cost":"3.00","description":"Camping fees are in addition to the monument entrance fees. The per adult fee is for any persons 16 years of age and older.","title":"Backcountry Camping Fee - Per Adult"},{"cost":"1.50","description":"Camping fees are in addition to the monument entrance fees. The per child fee is for any persons 15 years of age and younger.","title":"Backcountry Camping Fee - Per Child"}]
,"directionsOverview":"Backcountry camping sites are located along the Backcountry Camping Loop Trail, which is located about six miles north on Dunes Drive."

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[{"postalCode":"88310","city":"Alamogordo","stateCode":"NM","countryCode":"US","provinceTerritoryCode":"","line1":"19955 Highway 70 West","type":"Physical","line3":"","line2":""}]
,"images":[{"credit":"Brian Burghart","crops":[],"title":"Backcountry Camping cBurghart","altText":"A tent, backpack, and camera equipment at a backcountry camping site.","caption":"For a primitive overnight experience out in the dunefield, backcountry camping at White Sands is an excellent choice.","url":"https://www.nps.gov/common/uploads/structured_data/64463076-946B-DAF5-26B05F4ECEB8DDA9.jpg"}]
,"weatherOverview":"Temperatures at White Sands vary greatly throughout the year. Summer time temperatures can be very hot. Winters are mild with cool evenings. Spring time is the windy season. Fall is very enjoyable with mild daytime and night time temperatures."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"10"

,"campsites":{
"totalSites":"10",
"group":"0",
"horse":"0",
"tentOnly":"10",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"This area is inaccessible to wheelchairs.",
"internetInfo":"",
"cellPhoneInfo":"Cell phone reception can be spotty at times. Please carry alternate forms of communication with you as well.",
"fireStovePolicy":"Camp stoves are permitted. Flame must be 12 inches above the surface of the ground. No fires are allowed.",
"rvAllowed":"0",
"rvInfo":"This area is inaccessible to RVs and trailers, but campers are welcome to park in the parking lot and hike to their campsite.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"As all of the primitive campsites are located along a moderate trail within the dunefield, there are no ADA campsites at White Sands National Park.",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"07B94648-198D-4762-9D87-236DEC0C58BA"

,"url":""

,"name":"Backcountry Camping"      

,"parkCode":"care"

,"description":"A free backcountry permit, available at the visitor center, is required for camping outside of campgrounds. Capitol Reef offers many hiking options for serious backpackers and those who enjoy exploring remote areas. For more information on possible backpacking routes, route descriptions and maps are available on our hiking and backpacking page."

,"latitude":

"" 

,"longitude":

"" 

,"latLong":""

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":""

,"reservationUrl":""

,"regulationsurl":""

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"","toilets":[],"internetConnectivity":"","showers":[],"cellPhoneReception":"","laundry":"","amphitheater":"","dumpStation":"","campStore":"","staffOrVolunteerHostOnsite":"","potableWater":[],"iceAvailableForSale":"","firewoodForSale":"","foodStorageLockers":""}
,"contacts":{"phoneNumbers":[],"emailAddresses":[]}
,"fees":[]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[{"postalCode":"84775","city":"Torrey","stateCode":"UT","countryCode":"US","provinceTerritoryCode":"","line1":"","type":"Physical","line3":"","line2":""}]
,"images":[]
,"weatherOverview":""

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"0",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"AC81EBCF-B50B-420E-A286-13C67EE98B4F"

,"url":""

,"name":"Backcountry Camping in the Otis Pike High Dune Wilderness"      

,"parkCode":"fiis"

,"description":"Under the stars, near the sound of the surf, waking to a chorus of song birds, camping on Fire Island within the Otis Pike Fire Island High Dune Wilderness can be a memorable experience. This wilderness camping experience is available by permit only. Permits are limited and issued for specific nights and number of persons within the group. A maximum length of stay is three consecutive nights. Beach camping may be available from March 15 through Labor Day."

,"latitude":

"40.6961609" 

,"longitude":

"-72.9719285" 

,"latLong":"{lat:40.6961609, lng:-72.9719285}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"The wilderness is divided into two zones extending east and west of the Bellport Beach boundaries. Eastern Zone: Maximum number of permitted campers is 12 per night with a maximum number of four campers allowed in each site. While the breach at Old Inlet is open, access to the Eastern Zone will be by hiking in from Watch Hill, a 4 to 5 ½ miles walk. Western Zone: Maximum number of permitted campers is 24 per night with a maximum number of eight campers allowed in each site."

,"reservationUrl":"https://www.recreation.gov/permits/234768"

,"regulationsurl":""

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["No Toilets"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"6316874780","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"fiis_information@nps.gov"}]}
,"fees":[{"cost":"20.00","description":"A $20.00 fee is assessed for each primitive wilderness (\"backcountry\") camping permit.","title":"Wilderness Camping Permit Fee"}]
,"directionsOverview":"There are two camping zones within the Otis Pike Fire Island High Dune Wilderness, the east and west zones. Access to both east and west wilderness/backcountry camping zones is through Watch Hill. Accessible by private boat or ferry, Watch Hill is located directly across the Great South Bay from Patchogue. Visitors may also access Watch Hill from Davis Park, just west of Watch Hill. Campers may also be able to access the Otis Pike Wilderness by private boat, kayak, sailboat or canoe."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Primitive wilderness (\"backcountry\") camping is available year-round. Beach camping may be available March 15 through Labor Day. Most campers take the Watch Hill Ferry out of Patchogue on Long Island mid-May to mid-October. Kayak and canoe access is available. Access to wilderness camping mid-October through mid-May by passenger ferry is limited.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Primitive Wilderness ("}]
,"addresses":[]
,"images":[{"credit":"NPS/Santos","crops":[],"title":"Winter Backpacking in the Otis Pike Wilderness","altText":"A man with a large backpack hikes through a sandy beach wilderness","caption":"Backcountry camping can be challenging, but it is the perfect way to experience the Otis Pike Wilderness.","url":"https://www.nps.gov/common/uploads/structured_data/C73D510D-CED8-4C23-180D925C23AAEE6C.jpg"}]
,"weatherOverview":"Seasonal temperatures have historically ranged from below zero during December, January, and February to over 100 degrees in August. But average temperatures are more moderate. The fall and winter months along the coast are relatively cool and dry, with brief periods of rain. Spring along the coast can be cool and windy. Summers on Fire Island are typically warm and humid. Annual precipitation averages 38.9\" with the distribution being relatively consistent throughout the year."

,"numberOfSitesReservable":"36"

,"numberOfSitesFirstComeFirstServe":"36"

,"campsites":{
"totalSites":"36",
"group":"0",
"horse":"0",
"tentOnly":"36",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"36",
"other":"36"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"While a cellular signal is common in the backcountry camping area, campers should plan for spotty service and occasional outages.",
"fireStovePolicy":"No open fires are permitted due to the danger of brushfires. Campers are encouraged to use camping stoves or grills so long as they do not have open flames.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"9FA0E6D0-85F3-4388-92B1-26F408774F28"

,"url":"https://www.nps.gov/grsa/planyourvisit/backpacking.htm"

,"name":"Backpacking Campsites in the Dunes or Forest"      

,"parkCode":"grsa"

,"description":"The most popular and unique backpacking option is camping in the 30-square-mile dunefield, beyond the major dune ridgeline (about 1.5 mile hike minimum over dunes). Enjoy wide open views of the starry sky or a bright moonlit night. Designated sites are also available in the trees of the foothills, or camping is available in higher forests of Great Sand Dunes National Preserve. Reserve national park backpacking permits for the dunes or foothills through recreation.gov"

,"latitude":

"37.77724" 

,"longitude":

"-105.535601" 

,"latLong":"{lat:37.77724, lng:-105.535601}"

,"audioDescription":"The most popular and unique backpacking option is camping in the 30-square-mile dunefield, beyond the major dune ridgeline (about 1.5 mile hike minimum over dunes). Enjoy wide open views of the starry sky or a bright moonlit night. Designated sites are also available in the trees of the foothills, or camping is available in higher forests of Great Sand Dunes National Preserve. Reserve national park backpacking permits for the dunes or foothills through recreation.gov"

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Reserve national park backpacking permits through recreation.gov in advance up to the first day of your trip. Camping in the national preserve requires a free permit from the visitor center only if you are starting your trip in the national park."

,"reservationUrl":"https://www.recreation.gov/permits/4675316"

,"regulationsurl":"https://www.nps.gov/grsa/planyourvisit/backpacking.htm"

,"regulationsOverview":"- Maximum of six people per party/ group at all times - Gas stoves only; no campfires or wood burning stoves allowed - Dogs are not permitted in the dunes backcountry. Please visit our Pets web page for detailed information and maps of permitted pet areas. - Bears rarely visit the interior of the dunefield. Bear-proof containers are encouraged, but not required. - - - - Sand stakes are encouraged as most standard tent stakes do not work on the sand dunes. Plastic bags filled with sand can also help anchor your tent. - Plan to camp in the dunes only when weather is calm and clear to avoid blowing sand or dangerous thunderstorms with lightning; check the park weather forecast on our Weather webpage."

,"amenities":{"trashRecyclingCollection":"No","toilets":["No Toilets"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"719-378-6395","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"Contact email for questions about backpacking in the park and preserve","emailAddress":"grsa_interpretation@nps.gov"}]}
,"fees":[{"cost":"6.00","description":"Fee to make a required reservation for a backpacking permit through recreation.gov","title":"Backpacking Permit Fee"}]
,"directionsOverview":"To access the main park area, including the Dunes Parking Lot and backpacking trailheads, take CO Highway 150 from the south or County Road 6 from the west. Both are paved highways."

,"directionsUrl":"https://www.nps.gov/grsa/planyourvisit/directions.htm"

,"operatingHours":[]
,"addresses":[{"postalCode":"81146","city":"Mosca","stateCode":"CO","countryCode":"US","provinceTerritoryCode":"","line1":"11999 State Highway 150","type":"Physical","line3":"","line2":"Visitor Center"},{"postalCode":"81146","city":"Mosca","stateCode":"CO","countryCode":"US","provinceTerritoryCode":"","line1":"11999 State Highway 150","type":"Mailing","line3":"","line2":"Visitor Center"}]
,"images":[{"credit":"Kevin Winget","crops":[],"title":"Backpacking in the Dunes","altText":"Backpackers walking on eastern side of dunefield","caption":"Backpacking in the dunes is a unique experience, with open views of the sky.","url":"https://www.nps.gov/common/uploads/structured_data/C2DE0ACB-CE7E-2786-5C2A77662123BBC5.jpg"},{"credit":"NPS/Patrick Myers","crops":[],"title":"Backpacker in Dunefield","altText":"Girl with backpack viewing dunes at sunset","caption":"Backpacking into the dunes is a unique experience, with open views of the sky.","url":"https://www.nps.gov/common/uploads/structured_data/C3072B6A-C458-4D96-8445A961E9225022.jpg"}]
,"weatherOverview":"Spring can sometimes bring high winds, mainly in the afternoon. Temperatures may vary widely: highs may reach into the 70s F, or only into the 30s F with snow and an even colder wind chill. In summer, daytime high temperatures average 75-80 degrees F. However, sand surface temperatures can soar to 150 degrees F on sunny summer afternoons. Fall is generally mild, with Indian summer days. Highs average in the 60s - 70s F, with chilly nights in the 20s - 30s F. Frigid temperatures are the norm in winter."

,"numberOfSitesReservable":"27"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"27",
"group":"0",
"horse":"24",
"tentOnly":"27",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"27",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Dunes wheelchairs are available for free checkout from the visitor center, but require pushing through soft sand. It is beyond the average person's strength to push another adult over the first high ridge of dunes to camp in the backcountry. Backpacking sites in the foothills are not wheelchair accessible.",
"internetInfo":"Closest internet is in Alamosa, 40 miles southwest",
"cellPhoneInfo":"Cell phone service is limited. A few carriers can reach the national park if you have line-of-sight with Alamosa.",
"fireStovePolicy":"Gas stoves only",
"rvAllowed":"0",
"rvInfo":"RVs and trailers may park at trailheads for backpacking, but visitors may not sleep in them at trailheads.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Backpacking into the dunefield and forested sites requires hiking or horsepacking over rough, uneven terrain, soft sand, and elevations over 8,200 feet. Weather can change quickly in the Rocky Mountains. There are no restroom facilities in the backcountry.",
"trailerAllowed":"0",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"0131994D-CB80-4736-A362-A5ECF862337B"

,"url":"https://www.nps.gov/grba/planyourvisit/campgrounds.htm"

,"name":"Baker Creek Campground"      

,"parkCode":"grba"

,"description":"Baker Creek Campground contains 37 campsites. All sites are available, when the campground is open (seasons permitting), on a first-come-first-served basis. Potable water is not available."

,"latitude":

"38.98573" 

,"longitude":

"-114.24331" 

,"latLong":"{lat:38.98573, lng:-114.24331}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Campsites are First-Come-First-Served"

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/grba/planyourvisit/camping-regulations.htm"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"775-234-7331","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"grba_interpretation@nps.gov"}]}
,"fees":[{"cost":"20.00","description":"$20 per night per site. $10 for senior/access pass holders. No checks.","title":"Nightly Fee"}]
,"directionsOverview":"Second left on Baker Creek Road"

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-11-10","name":"Winter Hours","endDate":"2024-05-11"}],"description":"Baker Creek campground is open from Memorial Day - Labor Day (weather permitting)","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Baker Creek Campground"}]
,"addresses":[]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Baker Creek Campground Sign","altText":"Green sign with white text \"Baker Creek Campground\"","caption":"Baker Creek Campground is located on the Baker Creek Road","url":"https://www.nps.gov/common/uploads/structured_data/88FCCE2B-0669-D234-0A812CB56A93B459.jpg"}]
,"weatherOverview":"https://www.nps.gov/grba/planyourvisit/weather.htm"

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"37"

,"campsites":{
"totalSites":"37",
"group":"0",
"horse":"0",
"tentOnly":"4",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"4",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"The main road of this campground has paved parking areas for cars and campers. The campsites are gravel and dirt with some steep surfaces.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Gas stoves are permitted. Fires may only be built in provided metal fire rings. Fires must be extinguished when not attended. Only dead wood on the ground may be collected for use as fuel for campfires within the park. Standing trees or shrubs, alive or dead, and trees/shrubs that are still attached to the ground may not be collected. Chainsaw use is prohibited without a permit. Collection of Bristlecone Pine wood and any wood above 10,000 feet is not allowed. Check for local fire bans.",
"rvAllowed":"1",
"rvInfo":"RVs and Trailers allowed on Lower Loop. RVs and Trailers over 24 feet are not allowed on Upper Loop.",
"rvMaxLength":"50",
"additionalInfo":"",
"trailerMaxLength":"50",
"adaInfo":"ADA accessible campsite is Site #4, #21, and #28. Restrooms are ADA accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"E02FF569-7F16-4A73-B44F-2A2211C98513"

,"url":"https://www.nps.gov/choh/planyourvisit/camping.htm"

,"name":"Bald Eagle Island Hiker-Biker Campsite"      

,"parkCode":"choh"

,"description":"Mile 50.3 - Hiker-biker campgrounds are located along the towpath approximately every 5-7 miles. No fee or reservation required. Overnight stays are limited to one night. All sites include a chemical toilet, picnic table, grill, and water. Please Note: Water at hiker-biker campsites is non-potable. Water is not treated and not for drinking or cooking. If you use this water, you are advised to filter, chemically treat, or boil before use. Water is turned off from mid-November to mid-April each year."

,"latitude":

"39.299834" 

,"longitude":

"-77.557168" 

,"latLong":"{lat:39.299834, lng:-77.557168}"

,"audioDescription":"(73 words) The nearest parking lot to Bald Eagle Island Campsite is at Lock 29. From the parking lot, take the path past Lockhouse 29, over the lock to the towpath. Take a left onto the towpath, though the gate and head downriver .5 miles. On your right is the large, rolling, lightly wooded grassy camping area between the Potomac River and the C&O towpath. On the far side of the canal are train tracks."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"First-come, first served"

,"reservationUrl":""

,"regulationsurl":"http://www.nps.gov/choh/learn/management/index.htm"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["Portable Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - seasonal","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Water"," but not potable"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"301-739-4200","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"choh_information@nps.gov"}]}
,"fees":[{"cost":"0.00","description":"First-come, first serve sites","title":"Walk-in, tent-only site"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Campground is open year-round. Water is generally available from mid-April to mid-November.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bald Eagle Island Hiker-Biker Overnight (HBO) Campsite"}]
,"addresses":[{"postalCode":"20176","city":"Lander","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"","type":"Physical","line3":"","line2":""}]
,"images":[{"credit":"Stephanie Spencer","crops":[],"title":"Bald Eagle Campground","altText":"A narrow trail leads to a small clearing.","caption":"Bald Eagle Campground","url":"https://www.nps.gov/common/uploads/structured_data/A0B679C8-042F-AC23-C84E88531E0ABE83.jpg"}]
,"weatherOverview":"Campsites are near the Potomac River and are subject to flooding after heavy rains."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"1"

,"campsites":{
"totalSites":"1",
"group":"0",
"horse":"1",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"1",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Gravel, non-level terrain",
"internetInfo":"",
"cellPhoneInfo":"Cell phone reception is spotty throughout the park and is dependent on the carrier.",
"fireStovePolicy":"Fires are restricted to the grills and fire rings provided or to portable grills positioned off the ground. Coals must be extinguished and removed from the park. Firewood may be collected from dead material on the ground but for use in campgrounds only. Do not remove wood from the campground. Firewood cannot be brought into the park.",
"rvAllowed":"0",
"rvInfo":"N/A",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Campsite not ADA accessible.",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Primitive Camping Areas"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"E3D6E089-3B10-46E0-91C8-F7A5C7BBE409"

,"url":"https://www.nps.gov/grsm/planyourvisit/balsam-mountain.htm"

,"name":"Balsam Mountain Campground"      

,"parkCode":"grsm"

,"description":"Balsam Mountain Campground - elevation 5,310 feet (1618m) - is surrounded by mountain ranges and streams. Daytime temperatures rarely exceed 70°F and may dip into the low 50's at night. RV, camper trailer, and tent sites plus flush toilets and drinking water are available. No hookups or showers and no lights in the restrooms. Hammocks are allowed over the footprint of the campsite. Limited to trees 10 inches in diameter with adequate padding around the tree and only 2 hammocks may be suspended from tree."

,"latitude":

"35.56543624633261" 

,"longitude":

"-83.17429877302192" 

,"latLong":"{lat:35.56543624633261, lng:-83.17429877302192}"

,"audioDescription":"Balsam Mountain Campground is located in a relatively remote part of Great Smoky Mountains National Park. The secluded setting offers visitors the ability to enjoy a multitude of recreational activities without the crowds which are sometimes common in other parts of the park. Balsam Mountain Campground is surrounded by picturesque mountain ranges and pristine mountain streams. Elk are common in this part of the park during the spring and fall. Located at 5,310 feet elevation, Balsam Mountain's daytime temperatures rarely exceed 70°F and night time temperatures may dip into the low 50's. Balsam Mountain Campground offers 42 campsites for a traditional tent only outdoor camping experience with the added convenience of flush toilets and drinking water. There are no hookups or showers at the campground. No lights are available in the restrooms at this campground. For campers' safety use of a flashlight, lantern or headlamp is recommended when accessing these facilities after daylight hours."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"505F7CCF-9442-41DC-B5A2-317C7B90C7BD"

,"reservationInfo":""

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/grsm/planyourvisit/campregs.htm"

,"regulationsOverview":"All food and equipment used to prepare and store food must be kept sealed in a vehicle or in a camping unit constructed of solid, non-pliable material or as otherwise directed at all times when not in use. Campfires are permitted only in fire grates. You may collect wood in the park only if it is on the ground and dead. Beginning March 1, 2015 only heat-treated firewood that is bundled and certified by the United States Department of Agriculture (USDA) or a state agency may be brought into the park. Quiet hours are in effect from 10 pm to 6 am. Generator use is prohibited from 8 pm to 8 am. Your stay is limited to 14 consecutive days at a time. You may have up to six people per campsite."

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"Yes - seasonal","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[],"emailAddresses":[{"description":"","emailAddress":"GRSM_Smokies_Information@nps.gov"}]}
,"fees":[{"cost":"30.00","description":"Camping Fee is per site, per night.","title":"Camping Fee"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-10-10","name":"Closed Seasonally","endDate":"2024-05-11"}],"description":"Balsam Mtn. Campground is open from late May through early October.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Balsam Mt. Campground"}]
,"addresses":[{"postalCode":"37738","city":"Gatlinburg","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"","type":"Physical","line3":"","line2":""}]
,"images":[{"credit":"Brody Boyer","crops":[],"title":"Family Time - Balsam Mountain Campground","altText":"A family of six sitting around a campfire eating dinner.","caption":"Family Time","url":"https://www.nps.gov/common/uploads/structured_data/219E8E55-90FD-7270-A9DAD5AED3F5475F.jpg"}]
,"weatherOverview":"This campground is in the mountains and weather can rapidly change from warm and sunny to cold and rainy. Be prepared with layers and rain gear in all seasons."

,"numberOfSitesReservable":"42"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"42",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Bundles of certified heat-treated firewood are available for sale in the communities surrounding the national park. Firewood may not be brought into the park unless it bears the USDA-APHIS-PPQ or state certification that it has been heat-treated. See Firewood FAQs page for additional information.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"09BC0AFC-F118-44EA-B7E1-1FE0191CA77E"

,"url":"https://www.nps.gov/biso/planyourvisit/bandycreekcampground.htm"

,"name":"Bandy Creek Campground"      

,"parkCode":"biso"

,"description":"The campground offers a total of 181 campsites: 96 trailer sites which offer water and electric hook-ups, 49 sites for tent camping, and two group camping loops with 19 sites in one loop and 16 sites in the other. All campsites include picnic tables, fire rings, and access to restrooms and showers. A dump station is located near the registration kiosk. There are no sewer hook-ups at individual trailer sites. The group campsites also have their own cook shelters and campfire circles."

,"latitude":

"36.4886610474" 

,"longitude":

"-84.6971229739" 

,"latLong":"{lat:36.4886610474, lng:-84.6971229739}"

,"audioDescription":"The campground sits on the right side of Bandy Creek Road with an access that passes by a building known as the campground kiosk. This is where campers check-in and/or get information about the park. The campground is made up of five loops: A loop for tent camping; B, C, and D loops are for tent and RV camping; and E loop is the group camp. All sites have a paved parking pad along with a gravel tent pad. Each site has a picnic table, lantern hook and fire ring with grill. Most sites will also have a food storage locker on site or one nearby. Hook up sites have an electrical pedestal that stands near the water hydrant as well. There are seven bathhouses throughout the campground. All are accessible except the one located in C loop. The bathhouses have a ramp that climbs up to the porch where there is a sink for dish washing. There is bathroom access from the top of the porch steps/ramp porch to a men's side on the far right, women's side to the left and an accessible restroom directly to the left. Inside the main bathrooms are stalls with wooden doors. A long counter with three sinks stands between two showers on the opposite side of the toilet stalls."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"074F4DA2-1CE7-4722-B9B2-C30275FF9674"

,"reservationInfo":"Campground reservations for sites within Big South Fork can now be made through National Recreation Reservation Service by calling 1-877-444-6777 or online at the National Recreation Reservation Service web site. Reservations may be made up to 240 days in advance. Group camp can be reserved up to 360 days in advance."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/232506?q=Bandy%20Creek"

,"regulationsurl":"https://www.nps.gov/biso/planyourvisit/upload/Bandy-Creek-Campground-Map-Regs-2018-bw-2.pdf"

,"regulationsOverview":"All food, food items (mustard, ketchup, etc), coolers (even if they are empty or have ice, water, pop, etc), must be kept in a vehicle or trailer with hard sides, except while preparing or eating it. Parking is allowed on the asphalt surface ONLY, not on the grass or gravel pads (gravel pads are for tents). Pets MUST be restrained on a leash AT ALL TIMES. QUIET HOURS ARE FROM 10:00 PM (ET) TO 6:00 AM (ET) All grey water (dishes, shower, etc) must NEVER be dumped onto the ground. Bicycles may be ridden at night only if you have a light in the front and a red reflective marker on the back. Bicycles MUST stay on pavement or gravel while in the campground. Motorized vehicles not designated for on highway use (i.e. ATV’s, golf carts, etc) are prohibited on public roads including campground roads within the Big South Fork NRRA."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Flush Toilets - year round"],"internetConnectivity":"No","showers":["Hot - Year Round"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"Yes - year round","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - year round","potableWater":["Yes - year round"],"iceAvailableForSale":"Yes - year round","firewoodForSale":"Yes - year round","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4235699778","description":"","extension":"","type":"Voice"},{"phoneNumber":"4235692816","description":"","extension":"","type":"Fax"}],"emailAddresses":[{"description":"","emailAddress":"biso_information@nps.gov"}]}
,"fees":[{"cost":"32.00","description":"This fee applies to all sites with 50-amp service within loops B, C, and D.","title":"Campsites with Water and 50-amp Electric Hook-up"},{"cost":"20.00","description":"This fee applies to sites within loop A.","title":"Sites without Electric"},{"cost":"125.00","description":"This fee applies for up to 25 persons per night. An additional $3.00 per night per person is required for more than 25 persons.","title":"Group Camp"},{"cost":"25.00","description":"This fee applies to all sites with 30-amp service within loops B, C, and D.","title":"Campsites with Water and 30-amp Electric Hook-up"}]
,"directionsOverview":"Please use the following link to learn more about how to get here from various locations."

,"directionsUrl":"http://www.nps.gov/biso/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Campground is open year-round. Campsites are on reservation system year-round. Sites not reserved may be obtained on a first come-first serve basis.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bandy Creek Campground"}]
,"addresses":[{"postalCode":"37841","city":"Oneida","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"145 Campground Road","type":"Physical","line3":"","line2":""},{"postalCode":"37841","city":"Oneida","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"4564 Leatherwood Road","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS photo","crops":[],"title":"Campsite at Bandy Creek","altText":"pop up camper and truck on a campsite","caption":"Campers enjoy a beautiful day in the park.","url":"https://www.nps.gov/common/uploads/structured_data/3C797EEF-1DD8-B71B-0B6B2F6F976FFC20.jpg"}]
,"weatherOverview":"The weather along the Cumberland Plateau can be best described as unpredictable. Each season brings its own weather patterns. Summers are generally hot and humid, with high temperatures sometimes eclipsing 90 degrees. The low temperatures in winter often dip below freezing. Spring sees the most amount of precipitation, but rainfall can occur in various amounts throughout the year."

,"numberOfSitesReservable":"146"

,"numberOfSitesFirstComeFirstServe":"149"

,"campsites":{
"totalSites":"149",
"group":"2",
"horse":"0",
"tentOnly":"39",
"electricalHookups":"98",
"rvOnly":"108",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Designated ADA campsites (A14, A43, D1, D41,D51, D52, Group E-1, and Group E-2) are wheelchair accessible with a paved parking surface and gravel tent pad.",
"internetInfo":"Free WiFi is available at the Bandy Creek Visitor Center which is located across the road from the campground entrance.",
"cellPhoneInfo":"",
"fireStovePolicy":"Firewood must be purchased and/or collected from the local vicinity; to learn more visit http://dontmovefirewood.org/.",
"rvAllowed":"1",
"rvInfo":"There are ten 50 amp service sites: B11, C12, C32, D7, D24, D26, D29, D30, D31 and D48. All other sites in loops B, C and D provide 20/30 amp service. Right side trailers are permitted to park up to four feet on the tent pad, however they may not park on the grass.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"The following campsites are designated as handicap accessible: A14, A43, D1, D41,D51, D52, Group E-1, and Group E-2. Loops A and D have two accessible bathhouses whereas Loop C and each of the Group Camps have one each.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"4EAF0F61-6361-4CAC-BB23-F93C5CF4A8E2"

,"url":"https://www.nps.gov/bica/planyourvisit/trail-creek-campground.htm"

,"name":"Barry's Landing & Trail Creek Campground"      

,"parkCode":"bica"

,"description":"Barry's Landing & Trail Creek campgrounds are located on the south district near Barry's Landing, 27 miles north of Lovell, WY on HWY 37. - Open All Year - $18 per night during the summer season (Mid April through October) - 14 RV sites, 16 tent sites - Most RV sites are small for a 28 ft RV or smaller - Vault toilets only, no running water or electricity"

,"latitude":

"45.10441282728944" 

,"longitude":

"-108.22557108412536" 

,"latLong":"{lat:45.10441282728944, lng:-108.22557108412536}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"3A53E0E9-0462-43E1-A657-40A421A22BCF"

,"reservationInfo":"All sites are first come first serve except the group campground."

,"reservationUrl":"http://www.hiddentreasurecharters.com"

,"regulationsurl":""

,"regulationsOverview":"1. Overnight stays/camping in park is only allowed in established sites 2. Check-out is 12:00 pm 3. Quiet hours from 10:00 pm to 6:00 am; idling of motor vehicles is prohibited during quiet hours 4. Generators permitted from 8 am to 8 pm 5. Campsite occupancy may not exceed 14 cumulative days within a 28-day period 6. Collection of firewood is prohibited within the park 7. No attaching or tying items to trees 8. Pets must be leashed at all times and may not be left unattended"

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"307-548-7230","description":"","extension":"","type":"Voice"},{"phoneNumber":"307-899-1401","description":"","extension":"","type":"TTY"}],"emailAddresses":[{"description":"","emailAddress":"info@hiddentreasurecharters.com"}]}
,"fees":[{"cost":"18.00","description":"The Trail Creek Campground fee is $18 per site from mid April through October, per night. Only one RV is allowed per site. NPS Senior Pass discounted price is $9 per night. Please make checks payable to: Hidden Treasure Charters.  Add 4% for credit cards. Credit Cards can only be taken at Horseshoe Bend Marina (13 miles south).\n\nFee free October through mid May.","title":"Trail Creek Campground Fee"}]
,"directionsOverview":"From 14A turn north on Hwy 37 and continue on Hwy 37 for approximately 22 miles. Just inside the NPS welcome sign you will see a brown and white direction sign. Stay on Hwy 37 approximately 22 miles to where the sign shows to turn right to Barry's Landing. If you accidentally stay straight at this point the paved road does turn to gravel."

,"directionsUrl":"https://www.google.com/maps/dir//45.0962246,-108.2115038/@45.0981952,-108.2510898,13z"

,"operatingHours":[{"exceptions":[],"description":"Open year round. First come first serve.\n\nMid May through September there is a campground host and fees are collected.\n\nOctober through Mid May camping is free.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Barry's Landing & Trail Creek Campground"}]
,"addresses":[{"postalCode":"82413","city":"Lovell","stateCode":"WY","countryCode":"US","provinceTerritoryCode":"","line1":"20 Highway 14A East","type":"Physical","line3":"","line2":""}]
,"images":[{"credit":"NPS, Jen Prentiss","crops":[],"title":"Barry's Landing Camping","altText":"A gravel drive through campground with the canyon and lake in the background.","caption":"Barry's Landing Campground","url":"https://www.nps.gov/common/uploads/structured_data/9137A368-D2C5-4D50-D81A7E77CA5937A0.jpg"},{"credit":"NPS, Jen Prentiss","crops":[],"title":"Trail Creek Tent Campground","altText":"Several small tent campgrounds in the cotton wood trees.","caption":"Trail Creek Tent Campground","url":"https://www.nps.gov/common/uploads/structured_data/91474264-A92D-1EA7-2260297C93489664.jpg"},{"credit":"NPS, Jen Prentiss","crops":[],"title":"Trail Creek RV Campground","altText":"A gravel road with several well spaced out camp spots along a red rock background.","caption":"Trail Creek RV Campground","url":"https://www.nps.gov/common/uploads/structured_data/914D6D9F-B116-EDB1-3827835F80480B1A.jpg"}]
,"weatherOverview":""

,"numberOfSitesReservable":"1"

,"numberOfSitesFirstComeFirstServe":"30"

,"campsites":{
"totalSites":"30",
"group":"0",
"horse":"0",
"tentOnly":"16",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"ADA is limited. Paths and camp sites are gravel and level. Bathrooms are wheelchair accessible but do not have automatic openers.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Check locally, dependent on conditions.",
"rvAllowed":"1",
"rvInfo":"There are NO utility sites. Sites accommodate most sizes of RV plus vehicle and boat. There are no pull through sites.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"ADA is limited. Paths and camp sites are gravel and level. Bathrooms are wheelchair accessible but do not have automatic openers.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"8F8394D7-51F5-4593-9042-83BC845F0F71"

,"url":""

,"name":"Bartlett Cove Campground"      

,"parkCode":"glba"

,"description":"The National Park Service maintains a free walk-in campground in Bartlett Cove. The campground features bear-proof food caches, a fire-pit and warming shelter (with firewood provided) located in a very scenic setting along the shore, 1/4 mile south of the Bartlett Cove dock. Stays are limited to 14 days"

,"latitude":

"58.450780888" 

,"longitude":

"-135.894400288" 

,"latLong":"{lat:58.450780888, lng:-135.894400288}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"71B86944-1609-47FB-8A79-2E6C45DFC3BD"

,"reservationInfo":"No reservations. Campground is first-come, first-served. Campers are required to attend a camper orientation to register for a site."

,"reservationUrl":""

,"regulationsurl":"http://www.nps.gov/glba/planyourvisit/campground.htm"

,"regulationsOverview":"The campground is located about 1/4 mile by trail from the main dock in Bartlett Cove. It has specific sites, a warming shelter, outhouses, and food caches. Campground Permits and a camper orientation are required for camping in the campground. Group camping is permitted in the group camping area for groups of 12 or more. Camping outside of the campground is prohibited within one mile of Bartlett Cove. Water and garbage cans are located outside the Visitor Information Station. There are three food caches where all scented items are required to be stored. Cooking and eating are only allowed in the intertidal zone (the area on the beach between the high and low tide lines). Never leave food unattended, even when shuttling gear."

,"amenities":{"trashRecyclingCollection":"No","toilets":["Composting Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"Yes - seasonal","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Yes - year round"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"9076972627","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"glba_administration@nps.gov"}]}
,"fees":[{"cost":"0.00","description":"There is no fee for the Bartlett Cove Campground","title":"Free Camping"}]
,"directionsOverview":"The campground is located about 1/4 mile by trail from the main dock in Bartlett Cove. It has designated sites, a warming shelter, vault toilets, and bear-proof food caches. Wheelbarrows are available to help transport gear. Stop by the Visitor Information Station near the dock to obtain a free camping permit for the campground."

,"directionsUrl":"http://www.nps.gov/glba/planyourvisit/campground.htm"

,"operatingHours":[{"exceptions":[],"description":"The National Park Service maintains a free walk-in campground in Bartlett Cove, open year-round. The campground features a bear-proof food cache, fire-pit with firewood, and warming shelter located in a very scenic setting along the shoreline, 1/4 mile south of the Bartlett Cove dock. Stays are limited to 14 days.\nPlease Note: Campsites are available on a first come, first serve basis only. Feel free to contact the Visitor Information Station at (907) 697-2627 about space availability prior to arrival.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bartlett Cove Campground"}]
,"addresses":[{"postalCode":"99826","city":"Bartlett Cove","stateCode":"AK","countryCode":"US","provinceTerritoryCode":"","line1":"Along the shoreline of Bartlett Cove","type":"Physical","line3":"","line2":""},{"postalCode":"99826","city":"Gustavus","stateCode":"AK","countryCode":"US","provinceTerritoryCode":"","line1":"PO Box 140","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Bartlett Cove Campground","altText":"Bartlett Cove Campground","caption":"The Bartlett Cove campground is a walk-in campground along the shore of beautiful Bartlett Cove","url":"https://www.nps.gov/common/uploads/structured_data/3C7919D6-1DD8-B71B-0B62C2488B1DCBA3.jpg"},{"credit":"NPS Photo","crops":[],"title":"Nice views of the Bartlett Cove Shoreline","altText":"Nice views of the Bartlett Cove Shoreline","caption":"The campground is located along the shoreline in Bartlett Cove.","url":"https://www.nps.gov/common/uploads/structured_data/3C791AEB-1DD8-B71B-0B6F78ED8FD52601.jpg"},{"credit":"NPS Photo","crops":[],"title":"A serene location","altText":"A serene location","caption":"The Bartlett Cove Campground is a serene spot. Where else in the world can you camp in the woods and hear the breathing of whales?","url":"https://www.nps.gov/common/uploads/structured_data/3C791BDB-1DD8-B71B-0BA32104556BF0C2.jpg"},{"credit":"NPS","crops":[],"title":"Bear-proof food cache","altText":"Bear-proof food cache","caption":"All food and scented items must be stored in the bear-proof food caches that are found throughout the campground.","url":"https://www.nps.gov/common/uploads/structured_data/3C79513C-1DD8-B71B-0B4C9DDECEE5A574.jpg"},{"credit":"NPS Photo","crops":[],"title":"Campfire on the beach","altText":"Campfire on the beach","caption":"There is one designated campfire ring along the shore.","url":"https://www.nps.gov/common/uploads/structured_data/3C795241-1DD8-B71B-0B041AFD6EED047F.jpg"}]
,"weatherOverview":"Bartlett Cove receives about 70 inches of precipitation annually. You may find yourself thinking it’s all coming down during your visit! Good rain gear is essential here. April, May and June are usually the driest months of the year. September and October tend to be the wettest."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"33"

,"campsites":{
"totalSites":"33",
"group":"4",
"horse":"0",
"tentOnly":"33",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"33",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Nearby are a f",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires only permitted in the Warming Shelter and the Fire Ring on the Beach. No cooking or eating in the Campground.",
"rvAllowed":"0",
"rvInfo":"No RVs or Trailers.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"The Bartlett Cove Campground is accessible by foot traffic only. Paths through the campground are well-compacted soil and level. There are no wheelchair-accessible outhouses in the campground, but at the nearby Visitor Information Station (1/4 mile), there are two modern restrooms that are fully accessible. Nearby you will find a few short trails, a public dock, campground, and Glacier Bay Lodge. Pathways in Bartlett Cove are not paved, and may have exposed roots and rocks present. While navigable by many new wheelchairs, not all trails meet ADA standards. An exception is the beautiful wooden boardwalk that provides access to a viewing deck overlooking a serene pond. This 1/2-mile section of the Forest Trail is accessible and easy to negotiate.",
"trailerAllowed":"0",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"6EEB6398-2024-46B2-BFA0-B2A437464B37"

,"url":"https://www.nps.gov/slbe/planyourvisit/smibaycamp.htm"

,"name":"Bay Campground - South Manitou Island"      

,"parkCode":"slbe"

,"description":"The Bay Campground is the closest campground to the dock. Bring water filtration equipment because there is no source of purified drinking water. There are 25 individual sites and 3 group sites."

,"latitude":

"45.018882" 

,"longitude":

"-86.102772" 

,"latLong":"{lat:45.018882, lng:-86.102772}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Reservations Required for group sites"

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/232456"

,"regulationsurl":""

,"regulationsOverview":"Camping Permits and Park Passes are required. Pets are prohibited in the campgrounds. Camp only in designated sites (does not apply to North Manitou Island). Fires are permitted only in the communal metal fire rings. Use down and dead wood only. Do not leave a fire burning unattended. Put out all fires before leaving the campground. Carry out all trash. Snowmobiles, bicycles, or any wheeled vehicle is prohibited from being on the trail or in the campground."

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"2313264700","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"sleepingbearinfo@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"Nightly fee for Bay Campground for 1-4 persons","title":"Bay Campground for 1-4 persons"},{"cost":"30.00","description":"Nightly fee for Bay Campground group sItes for 7-20 persons","title":"Bay Campground Group SItes"}]
,"directionsOverview":"From Traverse City, Michigan, take M-22 to Sutton's Bay. Go west on M-204 from Sutton's Bay towards Leland. Turn north at the junction of M-22 and M-204 to Leland. Take the ferry from Leland to South Manitou Island."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"What do you want to say about season?","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bay Campground - South Manitou Island"}]
,"addresses":[{"postalCode":"49630","city":"Empire","stateCode":"MI","countryCode":"US","provinceTerritoryCode":"","line1":"9922 Front Street","type":"Physical","line3":"","line2":""},{"postalCode":"49630","city":"Empire","stateCode":"MI","countryCode":"US","provinceTerritoryCode":"","line1":"9922 Front Street","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"Bay Campground","altText":"Tent on sand surrounded by conifer trees and grasses.","caption":"Bay Campground","url":"https://www.nps.gov/common/uploads/structured_data/3E24A9DF-0F4B-D9FF-F62F87D96946A8C6.jpg"}]
,"weatherOverview":"Sleeping Bear Dunes is located in northern lower Michigan. You want to come equipped for any condition that may present itself as lake-borne weather patterns can change quickly. The well-advised visitor dresses in layers, prepared for a variety of conditions. Summer days have highs ranging from upper 70's to 90's with lows typically in the 50's to 70's. Winter days have highs ranging from 20's to 30's and lows in the 10's to 20's. Snow is usually on the ground from late November through March."

,"numberOfSitesReservable":"3"

,"numberOfSitesFirstComeFirstServe":"25"

,"campsites":{
"totalSites":"28",
"group":"3",
"horse":"0",
"tentOnly":"28",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"28",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"No accessible facilities",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires are permitted only in the designated fire rings, and only as long as there are no burn bans or dangerous fire weather.",
"rvAllowed":"0",
"rvInfo":"Not allowed",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"No accessible camp sites",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"700E6BD8-F6CA-4A1A-A361-CFEAF028902A"

,"url":"https://www.nps.gov/asis/planyourvisit/bayside-drive-in-campground-reservation.htm"

,"name":"Bayside Drive-in Campground"      

,"parkCode":"asis"

,"description":"Tents, trailers and recreational vehicles (no hookups). Sites have a picnic table and a fire ring. Sites are $30 per night. No generators allowed in Loop B. Reservations are required from March 15 through November 15, and are available for November 16 through March 14."

,"latitude":

"38.207737100574306" 

,"longitude":

"-75.1593790997531" 

,"latLong":"{lat:38.207737100574306, lng:-75.1593790997531}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"8338014F-3803-58F4-933E-463F8CAEC59F"

,"reservationInfo":"National Park Service Reservation System Reservations are required from March 15 through November 15. Campsite reservations are available six months in advance. Be aware that nearly all reservations for weekends are filled the first day that they become available. Call the toll-free reservation line: 1-877-444-6777 (10:00 AM - 10:00 PM EST) or visit http://www.recreation.gov"

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/232507"

,"regulationsurl":"https://www.nps.gov/asis/planyourvisit/campground-regulations.htm"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["Cold- Seasonal","Free - Seasonal"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"Yes - year round","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - year round"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4106411441","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"asis_information@nps.gov"}]}
,"fees":[{"cost":"30.00","description":"Tents, trailers and recreational vehicles (no hookups). Sites have a picnic table and a fire ring. \nSites are $30 per night.","title":"Camping Fee"},{"cost":"15.00","description":"IA Senior Pass and IA Access pass discount","title":"IA Senior Pass or IA Access Pass camping fee"},{"cost":"25.00","description":"All vehicles are subject to an entrance fee. \nEntrance fee is valid for 1-7 days for reentry into the park.\nCurrent Assateague Pass, IA-Annual Pass, IA-Senior Pass, IA-Access Pass. IA-4th Grade, IA-Military Pass, IA Golden Age Passport and IA-Golden Access Passport are valid for entry.","title":"Vehicle Entrance Fee"}]
,"directionsOverview":"Warning about GPS Systems! Vehicle Navigation Systems and GPS units may provide inaccurate information sending drivers to wrong destinations."

,"directionsUrl":"http://www.nps.gov/asis/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"Open year round","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bay side drive in campground - Loop A"}]
,"addresses":[{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Ranger Station/Campground Office - Maryland District","type":"Physical","line3":"","line2":"6633 Bayberry Drive"},{"postalCode":"21811","city":"Berlin","stateCode":"MD","countryCode":"US","provinceTerritoryCode":"","line1":"Business Offices - Maryland District","type":"Mailing","line3":"","line2":"7206 National Seashore Lane"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Bayside Loop A Site","altText":"Bayside Loop A Site","caption":"Bayside Loop A Site","url":"https://www.nps.gov/common/uploads/structured_data/5A4A0B37-F735-F998-CEF648F7A0D16FDE.jpg"},{"credit":"NPS Photo","crops":[],"title":"Bayside Loop A Paved Sites","altText":"Bayside Loop A Paved Sites","caption":"Bayside Loop A Paved Sites","url":"https://www.nps.gov/common/uploads/structured_data/5A5321FD-DDFD-1FFB-4B80DF0317D153DF.jpg"},{"credit":"NPS Photo","crops":[],"title":"Bayside Loop A Site grassy","altText":"Bayside Loop A Site grassy","caption":"Bayside Loop A Site grassy","url":"https://www.nps.gov/common/uploads/structured_data/5A87EF33-C7DE-196B-122A9733964649DB.jpg"}]
,"weatherOverview":"Spring: Often windy and cool with lows in the 40's and highs in the 60's. Summer: Hot and humid with lows in the 60's and highs in the 80's. Fall: Warm with lows in the 50's and highs in the 70's. Winter: Damp cold and often windy. Lows in the 20's, highs in the 40's. http://www.nps.gov/asis/planyourvisit/weather.htm"

,"numberOfSitesReservable":"22"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"22",
"group":"6",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair accessible trails - Maryland District Life of the Forest Trail- 1/2 mile loop Life of the Marsh Trail - 1/2 mile loop Bicycle Bridge - 1/2 mile",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Campers may not bring firewood from out of state. Firewood must be purchased locally.",
"rvAllowed":"1",
"rvInfo":"RV, Trailer and tents allowed",
"rvMaxLength":"45",
"additionalInfo":"",
"trailerMaxLength":"45",
"adaInfo":"All visitor centers, most nature trails, bathhouses and wayside exhibits are accessible. America the Beautiful - Access Pass National Parks and Federal Recreational Lands Pass This is a free, lifetime pass for U.S. citizens or permanent residents of the United States that have been medically determined to have a permanent disability. The pass provides access to, and use of, Federal recreation sites that charge an Entrance or Standard Amenity fee. It replaces the Golden Access Pass. Golden Access passes may be exchanged free of charge. Beach wheelchairs with balloon tires are available for use on the oceanside beaches in Maryland and Virginia. For more information please check at the Ranger Station in Maryland (410-641-3030). Service animals are allowed in National Parks. For a definition of a service animal please visit",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"88FE257F-E2CF-45DC-858E-7DF1B92AFF4F"

,"url":"https://www.nps.gov/biso/planyourvisit/horsecamps.htm"

,"name":"Bear Creek Horse Camp"      

,"parkCode":"biso"

,"description":"This campground contains 23 developed campsites. Each site offers water and electricity, tables, grills, tie-outs for 4 horses, access to modern restrooms with hot showers, a dump station and access miles of horse trails. Bear Creek Horse Camp is located on Bear Creek Road off Hwy. 742, west of Stearns, Kentucky. The fee rate per night is $28.00 (half price for holders of the Interagency Access/Senior Passes)."

,"latitude":

"36.6423697456121" 

,"longitude":

"-84.5243896745863" 

,"latLong":"{lat:36.6423697456121, lng:-84.5243896745863}"

,"audioDescription":"The campground sits at the end of a gravel road with an entrance that passes by a small building with a bulletin board of information. This is where campers get information about the park. All sites have a gravel parking pad along with a gravel tent pad. Each site has a picnic table, lantern hook and fire ring with grill. Most sites will also have a food storage locker on site or one nearby. Hook up sites have an electrical pedestal that stands near the water hydrant as well. There is one accessible bathhouse located in the center of the campground. Access to the bathhouse porch is up a ramp or set of steps. There is bathroom access from the center of the porch to a men's side slightly on the left, women's side on the right side and an accessible restroom directly to the left. Inside the main bathrooms are stalls. The showers are straight to the back of the restroom on each side. A sink stands against the wall just outside the showers with the toilet stalls on the opposite side."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"E7BE1AB7-95DC-43C5-8EED-C016C9922DD9"

,"reservationInfo":"Bear Creek Horse Camp is now operated by the National Park Service. Camping reservations can be made by calling 1-877-444-6777 or online at www.recreation.gov. Unreserved sites are available on a first-come first-serve basis."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/251468?q=Bear%20Creek%20Horse%20Camp"

,"regulationsurl":"http://www.nps.gov/biso/planyourvisit/upload/Bear-Creek-Horse-Camp-Map-and-regulations-2015.pdf"

,"regulationsOverview":"All food, food items (mustard, ketchup, etc), coolers (even if they are empty or have ice, water, pop, etc), must be kept in a vehicle or trailer with hard sides, except while preparing or eating it. Parking is not allowed on the gravel pads (gravel pads are for tents). Pets MUST be restrained on a leash AT ALL TIMES. QUIET HOURS ARE FROM 10:00 PM (ET) TO 6:00 AM (ET) All grey water (dishes, shower, etc) must NEVER be dumped onto the ground. Motorized vehicles not designated for on highway use (i.e. ATV’s, golf carts, etc) are prohibited on public roads including campground roads within the Big South Fork NRRA."

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["Hot - Seasonal"],"cellPhoneReception":"Yes - seasonal","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"Yes - seasonal","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"4232867275","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"biso_information@nps.gov"}]}
,"fees":[{"cost":"28.00","description":"This fee covers one night of camping for up to six persons per site. Holders of the Interagency Access/Senior Passports pay only half the fee.","title":"Campsite Fee"}]
,"directionsOverview":"From I-75, take exit 11 Williamsburg and travel west on Hwy 92 for 18.5 miles to U.S. 27. Turn left on U.S. 27 and travel approximately 2.4 miles to Hwy 1470. Turn right and follow the brown park signs to the Bear Creek Horse Campground approximately 8 miles."

,"directionsUrl":"https://www.nps.gov/biso/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[],"description":"This campground is open and on the reservation system from April through November. Sites that are not reserved may be used on a first come-first served basis.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bear Creek Horse Camp"}]
,"addresses":[{"postalCode":"42649","city":"Strunk","stateCode":"KY","countryCode":"US","provinceTerritoryCode":"","line1":"Lee Hollow Road","type":"Physical","line3":"","line2":""},{"postalCode":"37841","city":"Oneida","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"4564 Leatherwood Road","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"Campsite at Bear Creek Horse Camp","altText":"campsite located near the entrance of campground","caption":"This campground provides access to one of many horse trails in the park.","url":"https://www.nps.gov/customcf/structured_data/upload/20150103_1203191.jpg"},{"credit":"NPS","crops":[],"title":"Bear Creek Horse Campsite","altText":"A picnic table sits under a tree next to a campsite pad.","caption":"Bear Creek Horse Camp","url":"https://www.nps.gov/common/uploads/structured_data/9325DAD2-F47E-2163-2A267153DC956A00.jpg"}]
,"weatherOverview":"The weather along the Cumberland Plateau can be best described as unpredictable. Each season brings its own weather patterns. Summers are generally hot and humid, with high temperatures sometimes eclipsing 90 degrees. The low temperatures in winter often dip below freezing. Spring sees the most amount of precipitation, but rainfall can occur in various amounts throughout the year."

,"numberOfSitesReservable":"22"

,"numberOfSitesFirstComeFirstServe":"22"

,"campsites":{
"totalSites":"23",
"group":"0",
"horse":"23",
"tentOnly":"23",
"electricalHookups":"23",
"rvOnly":"23",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair access to the bathhouse is available. Campsites and other surfaces are gravel only.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Firewood must be purchased and/or collected from the local vicinity; to learn more visit http://dontmovefirewood.org/.",
"rvAllowed":"1",
"rvInfo":"RVs and trailers are permitted.",
"rvMaxLength":"52",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"There is currently one accessible site near the bathhouse which is also accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"CF03117B-0727-4497-885A-0C81227D2F11"

,"url":""

,"name":"Bear Island Campground"      

,"parkCode":"bicy"

,"description":"Primitive campground with no water. Vault toilets available. Forty designated sites. Access to the Bear Island Campground is at the end of a 20-mile secondary gravel road"

,"latitude":

"26.183239748193" 

,"longitude":

"-81.247475274331" 

,"latLong":"{lat:26.183239748193, lng:-81.247475274331}"

,"audioDescription":"Primitive campground with no water. Vault toilets available. Forty designated sites. No reservations. First come, first served. Access to the Bear Island Campground is at the end of a 20-mile Turner River Road."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"9E96FAE9-7E96-4C9C-8CD5-73922444DBF1"

,"reservationInfo":"Reservations may be made on recreation.gov or call 877-444-6777 in advance. Any sites not reserved in advance are available on a first come first serve basis."

,"reservationUrl":"https://www.recreation.gov"

,"regulationsurl":""

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"","toilets":[],"internetConnectivity":"","showers":[],"cellPhoneReception":"","laundry":"","amphitheater":"","dumpStation":"","campStore":"","staffOrVolunteerHostOnsite":"","potableWater":[],"iceAvailableForSale":"","firewoodForSale":"","foodStorageLockers":""}
,"contacts":{"phoneNumbers":[{"phoneNumber":"239-695-4111","description":"","extension":"3","type":"Voice"}],"emailAddresses":[{"description":"bicy_information@nps.gov","emailAddress":"bicy_information@nps.gov"}]}
,"fees":[{"cost":"10.00","description":"This is for one night of camping for RV or tent","title":"All Sites"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Sites 1-12 are open year-round.\nSites 13-40 are open August 15-April 15","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bear Island Campground"}]
,"addresses":[{"postalCode":"34141","city":"Ochopee","stateCode":"FL","countryCode":"US","provinceTerritoryCode":"","line1":"33100 Tamiami Trail East","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Bear Island Campground Entrance","altText":"two dirt paths diverge with palm trees in the background","caption":"The entrance to Bear Island Campground","url":"https://www.nps.gov/common/uploads/structured_data/3C87CFFA-1DD8-B71B-0BC0957E39026243.jpg"},{"credit":"NPS Photo","crops":[],"title":"Campsite in Bear Island Campground","altText":"campsite with a picnic table and fire ring","caption":"one of the campsites in the Bear Island Campground","url":"https://www.nps.gov/common/uploads/structured_data/3C87D16C-1DD8-B71B-0B249E8885967007.jpg"}]
,"weatherOverview":""

,"numberOfSitesReservable":"40"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"40",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Please call for more information 239-695-1205",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"",
"rvAllowed":"1",
"rvInfo":"Please call for more information 239-695-1205",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"This campground meets minimum ADA requirements for access.",
"trailerAllowed":"0",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"7108D5E4-1BE3-42A7-846A-7BF3C631E8E9"

,"url":""

,"name":"Beaver Creek Individual Backpacking Sites"      

,"parkCode":"piro"

,"description":"Beaver Creek Campground is on the bluff above Lake Superior and Beaver Creek in the Beaver Basin Wilderness. The six campsites are dispersed throughout the sandy grounds, shaded by pine trees. There is one communal fire ring with a view of Lake Superior. Shared pit toilet. Water source is Lake Superior and Beaver Creek. Lake Superior access for kayakers."

,"latitude":

"46.577012" 

,"longitude":

"-86.350163" 

,"latLong":"{lat:46.577012, lng:-86.350163}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Overnight camping is permitted only in designated backcountry sites. These sites can only be reached by hiking or paddling (a few sites area accessible by boat). A backcountry camping permit is required for all overnight stays - year round. A permit is valid only for the dates, locations, and party size specified. Permits are not required for day hiking; however, day hikers must observe backcountry regulations."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/256367"

,"regulationsurl":"https://www.nps.gov/piro/planyourvisit/upload/BackcountryPlannerUpdate2020-final-accessible.pdf"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Water"," but not potable"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"(906) 387-3700","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"PIRO_Information@nps.gov"}]}
,"fees":[{"cost":"5.00","description":"Per person, per night charge. There is also a $15 reservation fee for the permit.","title":"Camping Fee - Per Person, Per Night"},{"cost":"15.00","description":"$15 non-refundable fee for reservation","title":"(Plus Reservation Fee)"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[]
,"images":[{"credit":"Diana Pray","crops":[],"title":"Beaver Creek Backpacking Sites","altText":"A campsite in a forest with four people standing to the left of two tents set up.","caption":"Beaver Creek Site 3","url":"https://www.nps.gov/common/uploads/structured_data/E1D0F055-C0DC-D052-A566DC3470D4F8E0.jpeg"}]
,"weatherOverview":""

,"numberOfSitesReservable":"6"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"6",
"group":"0",
"horse":"0",
"tentOnly":"6",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"6",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"One designated fire ring.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"D3397636-7BAA-419B-A634-9C53D6AD7E55"

,"url":"https://www.nps.gov/isro/planyourvisit/boating-guide.htm"

,"name":"Beaver Island Campground"      

,"parkCode":"isro"

,"description":"Located in the center of Washington Harbor, near Windigo. All shelters are water facing. Boats can stay at the dock overnight. Stay Limit: 3 nights effective from 6/1 - Labor Day annually. Shelters: 3 Depth at dock (normal conditions): 2'-5' Access: Canoe/kayak/private boat"

,"latitude":

"47.90406144441624" 

,"longitude":

"-89.1743364694965" 

,"latLong":"{lat:47.90406144441624, lng:-89.1743364694965}"

,"audioDescription":"Beaver Island Campground is located in Washington Harbor on the southwest end of Isle Royale National Park. The forested campground is about a mile by water from the Windigo Dock. The Beaver Island Dock is located on the southeastern side of Beaver Island. Three water front shelters comprise the campground along with a vault toilet. There are no tent sites. This campground is accessible by private boat, canoe, or kayak. Campsites have boat slip accessibility for kayaks and canoes."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"964BDDE0-0144-42C4-99F9-14C6EEDC45EB"

,"reservationInfo":"First come, first serve."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/isro/planyourvisit/camping-regulations.htm"

,"regulationsOverview":"All park visitors pay an entrance fee. Self-contained stoves only. Dogs, cats, and other pets are not allowed. Quiet hours are from 10:00 p.m. to 6:00 a.m. EDT/ 9:00 p.m. to 5:00 a.m. CDT. Fishing licenses are not required for inland lakes and streams on the island. However, Michigan size, season, and possession limits still apply. Only barbless hooks and artificial lures and flies may be used on inland lakes and streams. A State of Michigan fishing license is required to fish in the waters of Lake Superior."

,"amenities":{"trashRecyclingCollection":"No","toilets":["Composting Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Water"," but not potable"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"9064820984","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"isro_parkinfo@nps.gov"}]}
,"fees":[{"cost":"0.00","description":"No fee for small-party camping. A free overnight permit is required.","title":"Small-party Camping (6 people or less)"}]
,"directionsOverview":"Located on the west end of Isle Royale National Park, in Washington Harbor, near Windigo."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-11-01","name":"Park Closed","endDate":"2024-04-15"}],"description":"The campground is open from April 16 - October 31 (the park operating season) annually, 24 hours a day.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Beaver Island Campground"}]
,"addresses":[{"postalCode":"49931","city":"Houghton","stateCode":"MI","countryCode":"US","provinceTerritoryCode":"","line1":"800 E. Lakeshore Dr.","type":"Physical","line3":"","line2":""},{"postalCode":"49931","city":"Houghton","stateCode":"MI","countryCode":"US","provinceTerritoryCode":"","line1":"800 E. Lakeshore Dr.","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS / Paul Brown","crops":[],"title":"Aerial View of Washington Harbor and Beaver Island","altText":"Aerial View of Washington Harbor and Beaver Island.","caption":"Beaver Island is located in the center of Washington Harbor.","url":"https://www.nps.gov/common/uploads/structured_data/3C802F23-1DD8-B71B-0B681A0ACFF92DE5.jpg"},{"credit":"NPS / Marty Olgren","crops":[],"title":"Beaver Island Dock","altText":"L Shaped Dock along Lake Superior","caption":"Beaver Island is a popular water access-only campground.","url":"https://www.nps.gov/common/uploads/structured_data/118C3320-CCCD-908E-795691AA221C18C0.jpg"},{"credit":"Tom Brown","crops":[],"title":"Paddlers at Beaver Island Shelter","altText":"Two kayaks rest in front of a campground shelter.","caption":"Where will your Isle Royale paddles take you?","url":"https://www.nps.gov/common/uploads/structured_data/1197DAEA-ACF9-1E84-906636BD62214BE9.jpg"}]
,"weatherOverview":"Isle Royale National Park is a remote archipelago in the middle of Lake Superior. To make the most of your visit, it is necessary that you plan ahead and prepare. Be aware that many services and items that are available on the mainland are not available at Isle Royale. Due to the unpredictable waters of Lake Superior and its effect on island weather, be prepared for any and all weather conditions."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"3"

,"campsites":{
"totalSites":"3",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"3",
"other":"3"
}

,"accessibility":{
"wheelchairAccess":"Not wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Self-contained stoves only.",
"rvAllowed":"0",
"rvInfo":"No RV/Trailer access.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Mostly flat, uneven earth terrain. Facilities are not accessible.",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"7E99AF3C-193D-4F89-8AA3-A799590CB89C"

,"url":"https://www.nps.gov/glca/planyourvisit/camping.htm"

,"name":"Beehives Campground"      

,"parkCode":"glca"

,"description":"No reservations. $14 per night. 6 designated sites. Across the highway from Wahweap South Entrance. Picnic table at each site. No hookups, dump station, or restrooms. Pack it in, pack it out. Portable toilets required. No campfires or glass containers. Three night camping limit."

,"latitude":

"36.938243" 

,"longitude":

"-111.496291" 

,"latLong":"{lat:36.938243, lng:-111.496291}"

,"audioDescription":"Located on the unpaved road across the highway from the Wahweap South Entrance Station, the Beehive Campground is a small circle with six marked off sites. The road is unpaved, the sites are unpaved. There are no amenities, restrooms or trash receptacles, pack out everything you bring in. In one direction you can see Lake Powell, in the other, some amazing rounded sandstone mounds are open for hiking. Do not camp outside of the camping area."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"6 designated sites. Across from Wahweap South Entrance. Picnic table at each site. No hookups, dump station, or restrooms. Pack it in, pack it out. Portable toilets required. No campfires or glass containers. No reservations. $14 per night. Three night camping limit."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/glca/planyourvisit/camping.htm"

,"regulationsOverview":"6 designated sites. Across from Wahweap South Entrance. Picnic table at each site. No hookups, dump station, or restrooms. Pack it in, pack it out. Portable toilets required. No campfires or glass containers. No reservations. $14 per night. Three night camping limit."

,"amenities":{"trashRecyclingCollection":"No","toilets":["No Toilets"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[],"emailAddresses":[{"description":"This is the general information email for Glen Canyon National Recreation Area. It is checked weekly.","emailAddress":"glca_carl_hayden@nps.gov"}]}
,"fees":[{"cost":"14.00","description":"$14 per site per night. Limit 3 nights.","title":"Beehive Campground fees"}]
,"directionsOverview":"From Carl Hayden Visitor Center: turn right, north on Hwy 89. After less than half a mile, even before the Wahweap South entrance, turn left onto an unmarked dirt road. Bear right after the cattle guard, then you will see the campground sign with regulations."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Primitive camping area. Open all day, every day. If there is no one at the fee station, pay at the automatic machine.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Beehives Campground"}]
,"addresses":[{"postalCode":"86040","city":"Page","stateCode":"AZ","countryCode":"US","provinceTerritoryCode":"","line1":"Ferry Swale Rd","type":"Physical","line3":"","line2":"Off Hwy 89"},{"postalCode":"86040","city":"page","stateCode":"AZ","countryCode":"US","provinceTerritoryCode":"","line1":"Glen Canyon National Recreation Area","type":"Mailing","line3":"","line2":"PO Box 1507"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Beehive Campground 1","altText":"Primitive campground with regulation sign. RV","caption":"The Beehive campground has six sites and no amenities.","url":"https://www.nps.gov/common/uploads/structured_data/9F005994-FA4D-6569-647547030B27E494.jpg"},{"credit":"NPS Photo","crops":[],"title":"Beehive campground 2","altText":"Six campsites on dirt grounds with sandstone cliffs above.","caption":"With no amenities at the Beehive campground, campers must pack out what they bring in.","url":"https://www.nps.gov/common/uploads/structured_data/9F0BCF7B-EBFD-F0CA-FA6FD71FEB43F7F0.jpg"},{"credit":"NPS Photo","crops":[],"title":"Beehive campground 3","altText":"Two RVs and a black truck on rugged road. Mountain and cliffs in background.","caption":"A quick hike up the beehives gets you a pretty good view of the small campground and the iconic scenery.","url":"https://www.nps.gov/common/uploads/structured_data/9F2ABE2B-D8DC-66CD-7F6548AB8E35EF2B.jpg"}]
,"weatherOverview":"Temperatures can range from 110° F (38°C) in June & July to 0° F (-16°C) in December & January. Precipitation is generally light (less than 6 inches [15.2cm] annually) though heavy rains and flash flooding is possible during the summer and fall \"monsoons.\" We recommend lightweight, light colored clothing for summer, including a hat. Layers of clothing are best for other times of the year"

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"6"

,"campsites":{
"totalSites":"6",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"No ADA campsites.",
"internetInfo":"",
"cellPhoneInfo":"Sometimes there is a signal, most of the time there is not.",
"fireStovePolicy":"Fires in rings or grills only.",
"rvAllowed":"1",
"rvInfo":"No hookups, dump station, or restrooms. Pack it in, pack it out. Portable toilets required.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"This area is primitive, unpaved, and not accessible.",
"trailerAllowed":"1",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Designated Primitive Campsites"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"07E7E764-4D4F-4615-ADEB-28AB6BD87471"

,"url":"https://www.nps.gov/jotr/planyourvisit/belle-campground.htm"

,"name":"Belle Campground"      

,"parkCode":"jotr"

,"description":"This small (18 site) campground is at an elevation of 3,800 ft (1,158 m). First-come, first-served. Pit toilets. No water so bring plenty of your own. Belle is a great campground to see dark night skies. When you arrive, look for an open, vacated site. Move into an open site and set up camp. Then proceed as soon as possible to an entrance station to complete registration and pay. If arriving after entrance stations close, payment may be delayed until morning."

,"latitude":

"34.00193734907302" 

,"longitude":

"-116.01976203151656" 

,"latLong":"{lat:34.00193734907302, lng:-116.01976203151656}"

,"audioDescription":"Belle Campground is a desert campground nestled among rock formations. The campground is made up of a single dirt road with a loop at the end with camping spots to accommodate tents and RVs. Each camping spot has a dirt parking area, picnic table, fire pit, and campsite marker. The ground is hard and rocky. Throughout the campground there are many Joshua trees, small trees, and shrubs. Scattered around the campground you can find trash and recycling cans as well as two bathrooms."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"5CE0F4DF-FD44-443A-AA79-33E69A8BFB8B"

,"reservationInfo":"Sites are first-come, first-served, year-round."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/jotr/planyourvisit/camping-regulations.htm"

,"regulationsOverview":"A maximum of six people, three tents, and two vehicles may occupy an individual campsite. Some sites only have enough parking for one vehicle. A vehicle towing a trailer, popup, tent trailer, or fifth wheel, or a motorhome towing a vehicle, is considered two vehicles. Camping fees must be paid within one hour of selecting a campsite. Check in and check out are at noon. There is a 30-day camping limit each year. Only 14 of these nights may take place from October-May. All tents, tarps, and other camping equipment must be set up within 25 feet (7.6 m) of the picnic table or fire grate. Food must be stored securely where wildlife cannot get to it. Any scented or odorous items, including sunscreen and toiletries, must be secured as if they were food. Campsites left vacant for 24 hours will be treated as vacant. Holding or reserving campsites for persons not present is not allowed. Pets must remain on leash at all times and may not be left unattended. No slacklines in campgrounds."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"7603675554","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"jotr_info@nps.gov"}]}
,"fees":[{"cost":"15.00","description":"Campsites must be pre-paid at an entrance station. A maximum of six people, three tents, and two cars may occupy an individual campsite, only if there is space available. Some sites only have enough parking for one vehicle.","title":"Campsite Fee"},{"cost":"7.50","description":"Nightly camping fee for one site for a camper with a Senior or Access pass. Camping fees must be pre-paid at an entrance station. A maximum of six people, three tents, and two cars may occupy an individual campsite, only if there is space available. Some sites only have enough parking for one vehicle.","title":"Senior/Access Pass Campsite Fee"}]
,"directionsOverview":"From the North Entrance: Continue along Park Blvd and turn left onto Pinto Basin Road. Drive approximately 1.5 miles south along Pinto Basin Road. Turn left into Belle Campground at the Belle Campground sign. From the West Entrance: Drive along Park Blvd and turn right onto Pinto Basin Road. Turn left into Belle Campground at the Belle Campground sign. From the South : Drive north on Pinto Basin Road. Turn right at Belle Campground."

,"directionsUrl":"http://www.nps.gov/jotr/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-05-31","name":"Summer Closure","endDate":"2023-09-04"}],"description":"Campgrounds are open 24 hours a day. Check in and check out are at noon. Quiet hours are from 10 pm to 6 am.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Belle Campground"}]
,"addresses":[{"postalCode":"92277","city":"Twentynine Palms","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"Pinto Basin Road","type":"Physical","line3":"","line2":""},{"postalCode":"92277","city":"Twentynine Palms","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"74485 National Park Drive","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Belle Campground Information Board","altText":"Belle Campground information board is shown in front of a trail and a Joshua tree.","caption":"Located off Pinto Basin Road in the northern end of the park. Belle has 18 campsites.","url":"https://www.nps.gov/common/uploads/structured_data/3C86D137-1DD8-B71B-0BD13CD522E0517F.jpg"},{"credit":"NPS photo","crops":[],"title":"Belle Campsite","altText":"A campground with a picnic table, a grill and a Joshua tree.","caption":"Belle Campground offers great view to the west - making it a great place to watch the sunset.","url":"https://www.nps.gov/common/uploads/structured_data/3C86D2E7-1DD8-B71B-0B92AB4441AF3055.jpg"},{"credit":"NPS Photo","crops":[],"title":"Belle Campground View","altText":"Under a large rock in the distance you can see a pit toilet and road.","caption":"Belle Campground offers great view to the west - making it a great place to watch the sunset.","url":"https://www.nps.gov/common/uploads/structured_data/3C86D4B9-1DD8-B71B-0BA78DFA7E74199B.jpg"},{"credit":"NPS Photo","crops":[],"title":"Facility at Belle Campground","altText":"A paved path leads to a vault toilet.","caption":"Belle has vault toilets and no running water.","url":"https://www.nps.gov/common/uploads/structured_data/3C87B4CA-1DD8-B71B-0BF47C09DDA77541.jpg"},{"credit":"NPS Photo","crops":[],"title":"Campsite at Belle","altText":"A post with the number \"15\". In the background, a picnic table and charcoal grill are in a campsite.","caption":"There are 18 sites at Belle Campground. Campsites are surrounded by large boulders.","url":"https://www.nps.gov/common/uploads/structured_data/3C87B780-1DD8-B71B-0B44F67ECAF9346D.jpg"}]
,"weatherOverview":"Days are typically clear with less than 25% humidity. Temperatures are most comfortable in the spring and fall, with an average high/low of 85 and 50°F (29 and 10°C) respectively. Winter brings cooler days, around 60°F (15°C), and freezing nights. It occasionally snows at higher elevations. Summers are hot, over 100°F (38°C) during the day and may cool to around 75°F (24°C) at night. Weather can change quickly. Check a weather forecast before camping."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"18"

,"campsites":{
"totalSites":"18",
"group":"0",
"horse":"0",
"tentOnly":"0",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Campsites and roads are unpaved and uneven. The path to the bathroom is paved and flat, but the road to the path is unpaved.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Because of the park's very dry climate, fire danger in Joshua Tree is almost always very high. Be cautious. Campfires are allowed only in designated fire rings or grills that are found in park campgrounds or picnic areas. Keep fires small. Bring your own firewood. You may not gather park vegetation, whether living or dead, to fuel your campfire. If you plan to have a campfire, bring extra water to douse it thoroughly.",
"rvAllowed":"1",
"rvInfo":"There are no hookups for RVs at any campground in Joshua Tree. Generator use is permitted only from 7-9 am, noon-2 pm, and 5-7 pm.",
"rvMaxLength":"35",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"The campground has no ADA accessible campsite. Campgrounds with ADA accessible campsites include Indian Cove (site 1), Jumbo Rocks (site 122), and Black Rock (site 61).",
"trailerAllowed":"0",
"accessRoads":[
  "Unpaved Roads - All vehicles OK in good weather"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"BCFEC04A-6E92-4CC5-844F-B0486E386268"

,"url":"https://www.nps.gov/deto/planyourvisit/campgrounds.htm"

,"name":"Belle Fourche River Campground"      

,"parkCode":"deto"

,"description":"*Loop A CLOSED 8/3/23-8/10/23 AND Loop B Closed 8/8/23-8/10/23* The first come, first served campground (no reservations) Belle Fourche River Campground is a 2-loop, 46-site campground (43 pull-through sites with room for RVs up to 35') with 4 ADA sites and 3 tent-only group sites. Drinking water is available at water spigots and in the restrooms. No hookups are available. Large cottonwood trees provide shade. A picnic shelter and tables are available north of the campground. 14-day limit on occupancy."

,"latitude":

"44.58183403582838" 

,"longitude":

"-104.70634354706146" 

,"latLong":"{lat:44.58183403582838, lng:-104.70634354706146}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"8441984A-C7A3-4A40-8002-587D0AD36C70"

,"reservationInfo":"No reservations are available for this campground. Occupation is on a first come, first served basis. There is a 14 day limit on occupancy. The campground will fill on some nights from June through September. There are typically sites available until 6:00 pm every day."

,"reservationUrl":""

,"regulationsurl":"http://www.nps.gov/deto/planyourvisit/upload/Campground-Regulations-2017.pdf"

,"regulationsOverview":"1. Overnight stays/camping in park is only allowed in established sites within the Belle Fourche River Campground 2. Check-out is 12:00 pm 3. Maximum of 2 autos and 8 people per site; 4 vehicles and 20 people for group sites. 4. Quiet hours from 10:00 pm to 6:00 am; idling of motor vehicles is prohibited during quiet hours 5. Generators permitted from 8 am to 8 pm 6. Campsite occupancy may not exceed 14 cumulative days within a 28-day period 7. Collection of firewood is prohibited within the park 8. No attaching or tying items to trees 9. Pets must be leashed at all times and may not be left unattended"

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"Yes - seasonal","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"3074675283","description":"","extension":"741","type":"Voice"},{"phoneNumber":"3074675350","description":"","extension":"","type":"Fax"}],"emailAddresses":[{"description":"","emailAddress":"deto_fee_office@nps.gov"}]}
,"fees":[{"cost":"20.00","description":"Individual sites can accommodate up to 8 people. A maximum of two vehicles (or 4 motorcycles) are permitted at each site. The nearby picnic area may be used for overflow parking.","title":"Individual Sites"},{"cost":"30.00","description":"Group sites can accommodate up to 20 people per site. A maximum of 4 autos is permitted at each site. The nearby picnic area may be used for overflow parking if necessary.","title":"Group Sites"},{"cost":"20.00","description":"Accessible sites are: A2, A4, B11 and B25. \nIndividual sites can accommodate up to 8 people. A maximum of two vehicles (or 4 motorcycles) are permitted at each site. The nearby picnic area may be used for overflow parking.","title":"Accessible Sites"}]
,"directionsOverview":"From the entrance station, travel along the park road approximately 1 mile, and turn left at the Administration Building. Stay left at the fork, and the campground is at the end of the road."

,"directionsUrl":"http://www.nps.gov/deto/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-08-03","name":"Sturgis 2023","endDate":"2023-08-10"},{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-10-15","name":"Off-Season Closure","endDate":"2024-05-12"}],"description":"The Belle Fourche Campground will be open for the season May 12 - October 15 (closed by noon on 10/15)","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Belle Fourche River Campground"}]
,"addresses":[{"postalCode":"82714","city":"Devils Tower","stateCode":"WY","countryCode":"US","provinceTerritoryCode":"","line1":"Hwy 110 Bldg 170","type":"Physical","line3":"","line2":""},{"postalCode":"82714","city":"Devils Tower","stateCode":"WY","countryCode":"US","provinceTerritoryCode":"","line1":"Po Box 10","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS","crops":[],"title":"The Belle Fourche Campground","altText":"A peaceful, quiet campground with tents, fire grates and picnic benches.","caption":"The Belle Fourche Campground","url":"https://www.nps.gov/common/uploads/structured_data/3C80AA75-1DD8-B71B-0B817B3C29C08D4F.jpg"},{"credit":"NPS Photo / Avery Locklear","crops":[],"title":"Campground in Fall","altText":"Campground with Devils Tower in the background","caption":"September is a beautiful time to camp at Devils Tower National Monument!","url":"https://www.nps.gov/common/uploads/structured_data/27401407-1DD8-B71B-0B783051867565C3.jpg"},{"credit":"NPS Photo","crops":[],"title":"Group Site","altText":"Several tents set up in a group site","caption":"The three group sites are great for large gatherings","url":"https://www.nps.gov/common/uploads/structured_data/2749E449-1DD8-B71B-0BD88CA92DC9690A.jpg"},{"credit":"NPS Image / Joe Bruce","crops":[],"title":"Campground Map","altText":"A map of the campground area","caption":"The campground is separated into two loops, with basic services available throughout.","url":"https://www.nps.gov/common/uploads/structured_data/2B834DC7-B585-8F60-6B35B7EC1DBBEC7B.png"}]
,"weatherOverview":"Obtain forecast information before beginning your adventures and observe changing weather conditions. Thunderstorms can develop quickly bringing lightening, hail, rain, and hypothermia. Summer days can bring very hot temperatures. Carry enough water, and realize the area around the Tower can reach over 100 degrees Fahrenheit."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"46"

,"campsites":{
"totalSites":"46",
"group":"3",
"horse":"0",
"tentOnly":"3",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"4"
}

,"accessibility":{
"wheelchairAccess":"Wheelchairs should be able to navigate around the campground, picnic and amphitheater areas with little difficulty. Be aware that the roads are paved but most areas have gravel parking with grass and dirt camping areas, except the accessible sites which have cement areas and a raised platform for tents.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Fires are permitted only in the designated fire rings, and only as long as there are no fire restrictions or dangerous fire weather",
"rvAllowed":"1",
"rvInfo":"The 46 sites include pull-thrus with room for RVs up to 35', No hookups available. Long vehicles and vehicles with trailers are recommended to use B Loop.",
"rvMaxLength":"35",
"additionalInfo":"",
"trailerMaxLength":"35",
"adaInfo":"Four sites in the campground are accessible - sites A-2, A-4, B-11, and B-25. Campground restrooms are accessible. The outdoor amphitheater is wheelchair accessible. The picnic area restrooms and drinking fountain are accessible. Two picnic tables will accommodate wheelchairs. They are located on either side of the sidewalk before you reach the restrooms.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"4E13DA78-AC48-422A-A82B-444BF0F46C37"

,"url":"https://www.nps.gov/isro/planyourvisit/boating-guide.htm"

,"name":"Belle Isle Campground"      

,"parkCode":"isro"

,"description":"A campground located on Belle Isle, in Belle Harbor, on the northeast end of Isle Royale National Park. Boats can use dock for overnight stays. Stay Limit: 5 nights, effective 6/1 – Labor Day. Shelters: 6 Depth at dock (normal conditions): 13’ Access: Canoe/kayak/private boat"

,"latitude":

"48.15235177620953" 

,"longitude":

"-88.58598760529463" 

,"latLong":"{lat:48.15235177620953, lng:-88.58598760529463}"

,"audioDescription":"Belle Isle is located in Belle Harbor, on the northeast end of Isle Royale National Park. This campground consists of one individual tent site and six shelters. Under normal conditions, the depth at the dock is 13'. Overnight stay is permitted at the dock. Canoe/kayak accessible."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"9FD17160-EA4E-44B8-9858-621C3899F6C3"

,"reservationInfo":"First come, first serve. Consecutive night stay limit is 5 nights, effective 6/1 - Labor Day. Normal conditions of depth at dock is 13'."

,"reservationUrl":""

,"regulationsurl":"https://www.nps.gov/isro/planyourvisit/camping-regulations.htm"

,"regulationsOverview":"All park visitors pay an entrance fee. Campfire rings or standing grills provided. Dogs, cats, and other pets are not allowed. Quiet hours are from 10:00 p.m. to 6:00 a.m. EDT/ 9:00 p.m. to 5:00 a.m. CDT. Fishing licenses are not required for inland lakes and streams on the island. However, Michigan size, season, and possession limits still apply. Only barbless hooks and artificial lures and flies may be used on inland lakes and streams. A State of Michigan fishing license is required to fish in the waters of Lake Superior."

,"amenities":{"trashRecyclingCollection":"No","toilets":["Composting Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Water"," but not potable"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"9064820984","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"isro_parkinfo@nps.gov"}]}
,"fees":[{"cost":"0.00","description":"No fee for small-party camping. A free overnight permit is required.","title":"Small-party Camping (6 people or less)"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-11-01","name":"Park Closed","endDate":"2024-04-15"}],"description":"The campground is open from April 16 - October 31 (the park operating season) annually, 24 hours a day.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Belle Isle Campground"}]
,"addresses":[{"postalCode":"49931","city":"Houghton","stateCode":"MI","countryCode":"US","provinceTerritoryCode":"","line1":"800 E. Lakeshore Drive","type":"Physical","line3":"","line2":""},{"postalCode":"49931","city":"Houghton","stateCode":"MI","countryCode":"US","provinceTerritoryCode":"","line1":"800 E. Lakeshore Drive","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS / Paul Brown","crops":[],"title":"Aerial View of Belle Isle","altText":"Aerial view of Belle Isle and surrounding waterways.","caption":"Belle Isle sits off the main island of Isle Royale and offers boaters and paddlers a hub to explore the northeast waterways.","url":"https://www.nps.gov/common/uploads/structured_data/3C80308D-1DD8-B71B-0B9CE93BA163FA54.jpg"},{"credit":"NPS / Mike Ausema","crops":[],"title":"Belle Island Campground Shelter #1","altText":"A shelter sits along trees across a field with a blue sky above","caption":"Relax at Belle Island Campground","url":"https://www.nps.gov/common/uploads/structured_data/11C5E4C3-992C-26AB-C144A0BD65F9FF06.jpg"}]
,"weatherOverview":"Isle Royale National Park is a remote archipelago in the middle of Lake Superior. To make the most of your visit, it is necessary that you plan ahead and prepare. Be aware that many services and items that are available on the mainland are not available at Isle Royale. Due to the unpredictable waters of Lake Superior and its effect on island weather, be prepared for any and all weather conditions."

,"numberOfSitesReservable":"0"

,"numberOfSitesFirstComeFirstServe":"7"

,"campsites":{
"totalSites":"7",
"group":"0",
"horse":"0",
"tentOnly":"1",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"7",
"other":"6"
}

,"accessibility":{
"wheelchairAccess":"Not accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Community fire ring. Otherwise, self-contained stoves only.",
"rvAllowed":"0",
"rvInfo":"No RV/Trailer Access.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Unpaved, uneven, rough surface throughout campground. Facilities are not accessible.",
"trailerAllowed":"0",
"accessRoads":[
  "No Roads"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"B0B0CF0A-F97A-4DA8-AC53-B72516E0B248"

,"url":"https://www.nps.gov/piro/planyourvisit/backcountry.htm"

,"name":"Benchmark Individual Backpacking Sites"      

,"parkCode":"piro"

,"description":"Benchmark Campground is on a sandy bluff above Lake Superior. The six campsites are sandy and open. There are social trails that lead down to Lake Superior, but it is a steep climb back to your campsite. When hiking from the west, walk through Twelvemile Beach Campground to the trailhead and day use area to connect back to the North Country Trail. Two shared fire rings and a pit toilet. Water source is Lake Superior. Lake Superior access for kayakers."

,"latitude":

"46.647014" 

,"longitude":

"-86.200461" 

,"latLong":"{lat:46.647014, lng:-86.200461}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"Overnight camping is permitted only in designated backcountry sites. These sites can only be reached by hiking or paddling (a few sites are accessible by boat). A backcountry camping permit is required for all overnight stays - year round. A permit is valid only for the dates, locations, and party size specified. Permits are not required for day hiking; however, day hikers must observe backcountry regulations."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/256367"

,"regulationsurl":"https://www.nps.gov/piro/planyourvisit/upload/BackcountryPlannerUpdate2020-final-accessible.pdf"

,"regulationsOverview":""

,"amenities":{"trashRecyclingCollection":"No","toilets":["Vault Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["Water"," but not potable"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"(906) 387-3700","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"PIRO_Information@nps.gov"}]}
,"fees":[{"cost":"5.00","description":"Per person, per night charge. There is also a $15 reservation fee for the permit.","title":"Camping Fee - Per Person, Per Night"},{"cost":"15.00","description":"$15 non-refundable fee per reservation.","title":"(Plus Reservation Fee)"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[]
,"addresses":[]
,"images":[{"credit":"NPS","crops":[],"title":"Benchmark Individual Backpacking Site","altText":"Tent set up on sand.","caption":"Benchmark Site 1","url":"https://www.nps.gov/common/uploads/structured_data/E6A9B06E-99B8-0962-A442CF8CE09FE125.png"}]
,"weatherOverview":""

,"numberOfSitesReservable":"6"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"6",
"group":"0",
"horse":"0",
"tentOnly":"6",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"6",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"One designated fire ring.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"2AFC7456-747A-4F35-8572-418E6E103989"

,"url":"https://www.recreation.gov/camping/campgrounds/272229"

,"name":"Bicentennial Campground"      

,"parkCode":"goga"

,"description":"Bicentennial Campground is the easiest to reach campground in Golden Gate, approximately 100 yards from the parking area near Battery Wallace. The campground is a great location for those wanting to camp near the city. There is a moderate short hill to climb to/from the campground from the parking area. It is downhill to the site and uphill back to the parking area. Open Year Round. $25.00/per campsite per night"

,"latitude":

"37.824572114428165" 

,"longitude":

"-122.52672546997377" 

,"latLong":"{lat:37.824572114428165, lng:-122.52672546997377}"

,"audioDescription":""

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"4AF06FA2-820E-4646-9C4A-77B5F1FCF8E9"

,"reservationInfo":"Reservations can be made up to three months before your arrival and may extend up to two days beyond this 3-month booking window. You can reserve directly from this page via a partnership with recreation.gov by clicking the green 'reserve' button. A recreation.gov account is required to make a reservation. The reservation fee at Bicentennial Campground increases to $25 on January 1. Please follow local guidelines regarding COVID-19. There is no water on the campground, so bring your own water, soap, and hand sanitizer. We urge visitors to continue to practice Leave No Trace principles, including by packing out their trash, to keep outdoor spaces safe."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/272229"

,"regulationsurl":"https://www.nps.gov/goga/planyourvisit/outdooractivities.htm"

,"regulationsOverview":"Maximum stay is three nights per year. No pets allowed. No car camping. 3 people per overnight site. Check fire restrictions, such as Red Flag Warnings or Spare the Air Days, before grilling."

,"amenities":{"trashRecyclingCollection":"Yes - year round","toilets":["Vault Toilets - year round"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"Yes - year round","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"No","potableWater":["No water"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"Yes - year round"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"415-331-1540","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"goga_info@nps.gov"}]}
,"fees":[{"cost":"25.00","description":"Tent Only Site","title":"Tent Only Nonelectric"}]
,"directionsOverview":"Upon entering the Marin Headlands via the Baker-Barry Tunnel, drive until you reach Field Road. Turn left onto Field Road, drive less than 0.5 miles uphill and make the first left turn you can, followed by a right. You will see signs for Bicentennial Campground. Either parallel park on the road or in the small dirt pull-out."

,"directionsUrl":""

,"operatingHours":[{"exceptions":[],"description":"Bicentennial Campground is currently open and reservations can be three weeks in advance. Recreate responsibly, only camp with members of your household, and stay home if sick.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Bicentennial Campground"}]
,"addresses":[{"postalCode":"94965","city":"Sausalito","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"Bicentennial Campground","type":"Physical","line3":"Marin Headlands","line2":"Conzelman Road"},{"postalCode":"94123-0022","city":"San Francisco","stateCode":"CA","countryCode":"US","provinceTerritoryCode":"","line1":"Golden Gate National Recreation Area","type":"Mailing","line3":"Fort Mason","line2":"Building 201"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Camping at Bicentennial","altText":"Campers make use of the food storage boxes and picnic tables at the campground.","caption":"Settling into the campground.","url":"https://www.nps.gov/common/uploads/structured_data/CD83477D-1DD8-B71B-0B4DD961D23A8721.jpg"},{"credit":"NPS Photo","crops":[],"title":"Picnic table","altText":"Campers sit contentedly at the picnic table with a gray sky above them.","caption":"Gray skies, happy campers.","url":"https://www.nps.gov/common/uploads/structured_data/CDB7D5C0-1DD8-B71B-0B78246DC3E03322.jpg"},{"credit":"NPS Photo","crops":[],"title":"Setting up camp","altText":"Campers set up a tent in a dry, grassy field with green cypresses behind them.","caption":"Setting up camp.","url":"https://www.nps.gov/common/uploads/structured_data/CDD849DE-1DD8-B71B-0BF112C422227372.jpg"},{"credit":"NPS Photoe","crops":[],"title":"View of the Golden Gate Bridge","altText":"The view of the Golden Gate Bridge from the campground.","caption":"View of the Golden Gate","url":"https://www.nps.gov/common/uploads/structured_data/CDF4975C-1DD8-B71B-0BEFF5BA1B26DD0E.jpg"},{"credit":"NPS Photo","crops":[],"title":"Enjoying the campsite","altText":"Campers have their tent set up next to a picnic table covered in food and supplies.","caption":"Ready to relax","url":"https://www.nps.gov/common/uploads/structured_data/D37FA7CA-1DD8-B71B-0B92DFC568B4C600.jpg"}]
,"weatherOverview":"Temperatures are mild year-round. Expect lows from 50-55 degrees and highs from 60-65. Fog is prevalent in the summer months from May - Sept. It is best to bring clothing that can be layered."

,"numberOfSitesReservable":"3"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"3",
"group":"0",
"horse":"0",
"tentOnly":"3",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"3",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Wheelchair access is limited, as there are no paved areas in the campground.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"No campfires allowed; gas camp stoves are permitted. Grills are provided on site to use with charcoal only.",
"rvAllowed":"0",
"rvInfo":"No RVs or trailers.",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Bicentennial Campground is not accessible by car. While the campground itself is flat, there is a steep 300 yard walk down to the campground.",
"trailerAllowed":"0",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Limited Development Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"559F6C6D-8688-4269-9578-86DE30B01674"

,"url":"https://www.nps.gov/grsm/planyourvisit/camping-at-big-creek.htm"

,"name":"Big Creek Campground"      

,"parkCode":"grsm"

,"description":"Big Creek Campground - elevation 1,700 feet (518m) - is located beside beautiful Big Creek in a remote and secluded setting. The climate is moderate, characterized by mild winters and hot, humid summers. Tent only camping, flush toilets, and drinking water are available. There are no hookups or showers at the campground. Hammocks are allowed over the footprint of the campsite. Limited to trees 10 inches in diameter with adequate padding around the tree and only 2 hammocks may be suspended from tree."

,"latitude":

"35.7500776458923" 

,"longitude":

"-83.1113810735188" 

,"latLong":"{lat:35.7500776458923, lng:-83.1113810735188}"

,"audioDescription":"Big Creek Campground is located in a remote portion of Great Smoky Mountains National Park. The beautiful flowing waters of Big Creek parallel the campground offering the visitor a pleasant soundscape and peaceful beauty. Located at an elevation of 1,700' Big Creek Campground is surrounded by picturesque mountain ranges and a pristine mountain stream. Black Bear sightings are not uncommon and some lucky visitors may spot River Otter playing in Big Creek. Big Creek Campground offers 12 Tent only campsites for a traditional outdoor camping experience with the added convenience of flush toilets and drinking water. All campsites are drive-up and allow a maximum of two vehicles. Each campsite allows a maximum of six people and tents must be on tent pads; plan accordingly. Check out time is 12:00 p.m. There are no hookups or showers at the campground. There is an emergency phone available at the Big Creek Ranger Station located 1 mile from the campground. No generator use or recreational vehicles are allowed in Big Creek Campground. There is a food storage locker available for public use. Hammocks are allowed in the campground with the following guidelines: Must be over the footprint of the campsite, limited to trees 10 inches in diameter with adequate padding around the tree and only 2 hammocks are allowed to be suspended from the same tree. Campsites are $17.50 per night for individual campsites. Reservations for campsites at Big Creek Campground can be made 6 months prior to your arrival date online at www.recreation.gov or by calling 877-444-6777. Reservations are required to camp in this campground. Owners of an Interagency Senior/Golden Age or Interagency Access/Access Pass receive a 50% discount on individual campsites. There is no discount on group sites. There is no discount on camping fees for an Interagency Annual Pass ($80 pass)."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":"6F890B24-20DB-477C-872E-110B10E471B3"

,"reservationInfo":"Big Creek Campground offers 12 TENT ONLY campsites for a traditional outdoor camping experience with the added convenience of flush toilets and drinking water. There are no hookups or showers at the campground. There is an emergency phone available at the Big Creek Ranger Station located 1 mile from the campground. No generator use or recreational vehicles are allowed in Big Creek Campground. There is a food storage locker available for public use."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/273821"

,"regulationsurl":"https://www.nps.gov/grsm/planyourvisit/campregs.htm"

,"regulationsOverview":"All food and equipment used to prepare and store food must be kept sealed in a vehicle or in a camping unit constructed of solid, non-pliable material or as otherwise directed at all times when not in use. Campfires are permitted only in fire grates. You may collect wood in the park only if it is on the ground and dead. Beginning March 1, 2015 only heat-treated firewood that is bundled and certified by the United States Department of Agriculture (USDA) or a state agency may be brought into the park. Quiet hours are in effect from 10 pm to 6 am. Generator use is prohibited from 8 pm to 8 am. Your stay is limited to 14 consecutive days at a time. You may have up to six people per campsite. No more than two motor vehicles or one vehicle with trailer are allowed per campsite. Please keep wheels, including trailer wheels and guest cars, on the pavement. Park only in designated spaces. All tents must be pitched on the pad, where provided."

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["None"],"cellPhoneReception":"No","laundry":"No","amphitheater":"No","dumpStation":"No","campStore":"No","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"No","firewoodForSale":"No","foodStorageLockers":"No"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"828-486-5910","description":"","extension":"","type":"Voice"}],"emailAddresses":[{"description":"","emailAddress":"GRSM_Smokies_Information@nps.gov"}]}
,"fees":[{"cost":"30.00","description":"Camping Fee is per site, per night.","title":"Camping Fee"}]
,"directionsOverview":""

,"directionsUrl":""

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-10-30","name":"Closed Seasonally","endDate":"2024-04-06"}],"description":"The campground is open from early April through October.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Big Creek Campground"}]
,"addresses":[{"postalCode":"37821","city":"Newport","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"236 Big Creek Park Road","type":"Physical","line3":"","line2":""},{"postalCode":"37738","city":"Gatlinburg","stateCode":"TN","countryCode":"US","provinceTerritoryCode":"","line1":"107 Park Headquarters Road","type":"Mailing","line3":"","line2":""}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Big Creek Campground","altText":"A wooded campsite with gravel tent pad","caption":"Big Creek Campground is located in a remote portion of Great Smoky Mountains National Park.","url":"https://www.nps.gov/common/uploads/structured_data/F101F578-FAC7-E0B2-D2743A2903052A13.jpg"}]
,"weatherOverview":"This campground is in the mountains and weather can rapidly change from warm and sunny to cold and rainy. Be prepared with layers and rain gear in all seasons."

,"numberOfSitesReservable":"12"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"12",
"group":"0",
"horse":"0",
"tentOnly":"12",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"Bundles of certified heat-treated firewood are available for sale in the communities surrounding the national park. Firewood may not be brought into the park unless it bears the USDA-APHIS-PPQ or state certification that it has been heat-treated. See Firewood FAQs page for additional information.",
"rvAllowed":"0",
"rvInfo":"",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"",
"trailerAllowed":"0",
"accessRoads":[],
"classifications":[]
}

,"multimedia":[]
,"lastIndexedDate":""


}
,
{

"id":"75E4DC88-1332-456C-9F06-05E9F4E1CAB6"

,"url":"https://www.nps.gov/shen/planyourvisit/big-meadows-campground.htm"

,"name":"Big Meadows Campground"      

,"parkCode":"shen"

,"description":"Big Meadows Campground (mile 51.2) is centrally-located in Shenandoah National Park, providing easy access to many of the most popular destinations in the Park, including Big Meadows, Dark Hollow Falls, and Byrd Visitor Center. All sites include a place for a tent or RV, a fire ring, and a picnic table. All sites at Big Meadows Campground are by reservation only."

,"latitude":

"38.5279623" 

,"longitude":

"-78.4369404" 

,"latLong":"{lat:38.5279623, lng:-78.4369404}"

,"audioDescription":"A log structure stands on the left side of the road as you enter Big Meadows Campground. There is an overhang supported by wooden beams facing the road. Under the overhang is a kiosk window where a ranger is present during open hours. Next to the kiosk window is a bulletin board with current information."

,"isPassportStampLocation":"0"
,"passportStampLocationDescription":""

,"passportStampImages":[]
,"geometryPoiId":""

,"reservationInfo":"All sites at Big Meadows Campground are by reservation only. Rangers can make limited reservations on site, but availability is not guaranteed. It is recommended you make your reservation ahead of time. Reservations can be made through Recreation.gov as well as the site map on the campground page. Check the map to see when specific sites are scheduled to be released. Reservable sites will be released in sections: 6 months prior to the date of your arrival - 50% of reservable sites will be released; 2 weeks prior to the date of your arrival - 25% of reservable sites will be released; 4 days prior to the date of your arrival - the remaining 25% of reservable sites will be released. Reservations for Big Meadows Campground can be made online at any time."

,"reservationUrl":"https://www.recreation.gov/camping/campgrounds/232459"

,"regulationsurl":"https://www.nps.gov/shen/planyourvisit/campground-regulations.htm"

,"regulationsOverview":"Stays are limited to 30 days. Checkout time is noon. Be sure to clip your camping pass to your site post to show occupancy. Quiet hours are from 10 p.m. to 6 a.m. Generators may be used from 8 a.m. to 10 a.m. and from 4 p.m. to 7 p.m. From opening until April 14, and October 15 through the end of the season, generator hours are extended to 9 p.m. for the purpose of generating heat. Generator use is prohibited in sites designated as “generator-free” and in group sites. Bear, deer, raccoons, and skunks are year-round residents of Shenandoah. Food, garbage, equipment used to prepare or store food, and all scented items must be kept in a locked vehicle or storage locker when not being actively used. It is illegal to feed or disturb wildlife."

,"amenities":{"trashRecyclingCollection":"Yes - seasonal","toilets":["Flush Toilets - seasonal"],"internetConnectivity":"No","showers":["Coin-Operated - Seasonal"],"cellPhoneReception":"No","laundry":"Yes - seasonal","amphitheater":"Yes - seasonal","dumpStation":"Yes - seasonal","campStore":"Yes - seasonal","staffOrVolunteerHostOnsite":"Yes - seasonal","potableWater":["Yes - seasonal"],"iceAvailableForSale":"Yes - seasonal","firewoodForSale":"Yes - seasonal","foodStorageLockers":"Yes - seasonal"}
,"contacts":{"phoneNumbers":[{"phoneNumber":"(540) 999-3500","description":"","extension":"","type":"Voice"},{"phoneNumber":"(800) 828-1120","description":"","extension":"","type":"TTY"}],"emailAddresses":[{"description":"We get a large number of e-mail inquiries, and e-mails are not answered on weekends. Please allow one week for a reply.","emailAddress":"shen_info@nps.gov"}]}
,"fees":[{"cost":"75.00","description":"Big Meadows Campground has two nonelectric group sites. Each group site can accommodate 7-15 people.","title":"Group Campsite (Nonelectric)"},{"cost":"30.00","description":"A standard, nonelectric campsite for tent or RV (motorhome, pop-up, or 5th-wheel). Standard campsites are limited to six people (or 1 immediate family) per site and one RV.","title":"Standard Campsite (Nonelectric)"}]
,"directionsOverview":"Via Thornton Gap Entrance Station (Luray, Route 211): upon entering Skyline Drive, make your way south to mile 51.2 (mile markers can be seen on the side of the Skyline Drive). Follow the signs to Big Meadows Campground, on your right. Via Swift Run Entrance Station (Elkton, Route 33): head north on the Drive to mile 51.2 (mile markers can be seen on the side of the Skyline Drive). Follow the signs to Big Meadows Campground, on your left."

,"directionsUrl":"http://www.nps.gov/shen/planyourvisit/directions.htm"

,"operatingHours":[{"exceptions":[{"exceptionHours":{"wednesday":"Closed","monday":"Closed","thursday":"Closed","sunday":"Closed","tuesday":"Closed","friday":"Closed","saturday":"Closed"},"startDate":"2023-11-26","name":"Closed in Winter","endDate":"2024-03-23"}],"description":"Big Meadows Campground is open during the spring, summer, and fall. Opening and closing dates vary from year to year and are subject to change at any time. Camping is NOT permitted in the campgrounds when they are closed.","standardHours":{"wednesday":"All Day","monday":"All Day","thursday":"All Day","sunday":"All Day","tuesday":"All Day","friday":"All Day","saturday":"All Day"},"name":"Big Meadows Campground"}]
,"addresses":[{"postalCode":"22851","city":"Robertson","stateCode":"VA","countryCode":"US","provinceTerritoryCode":"","line1":"304 Big Meadows Access Road","type":"Physical","line3":"","line2":""},{"postalCode":"22835","city":"Luray","stateCode":"VA","countryCode":"US","provinceTerritoryCode":"","line1":"Shenandoah National Park","type":"Mailing","line3":"3655 Hwy 211 E","line2":"Attn: Big Meadows Campground"}]
,"images":[{"credit":"NPS Photo","crops":[],"title":"Big Meadows Campground","altText":"A small pop-up camper is parked in a campground with green trees overhead.","caption":"Come relax under the shade of verdant trees in the campground at Big Meadows.","url":"https://www.nps.gov/common/uploads/structured_data/CDCBBE90-F13C-885E-08EA51066F851B02.jpg"}]
,"weatherOverview":"Shenandoah National Park has four very distinct seasons. Spring typically brings mild temperatures, rain, and wildflowers. Summer brings lush green forests, but can be hot and very humid. Fall follows with cooler temperatures and spectacular fall foliage. Winter can bring snow and ice. The mountain is usually 10°F cooler than the valley below. Always check the forecast, dress in layers, and be prepared."

,"numberOfSitesReservable":"220"

,"numberOfSitesFirstComeFirstServe":"0"

,"campsites":{
"totalSites":"221",
"group":"2",
"horse":"0",
"tentOnly":"51",
"electricalHookups":"0",
"rvOnly":"0",
"walkBoatTo":"0",
"other":"0"
}

,"accessibility":{
"wheelchairAccess":"Seven ADA accessible sites are available for wheelchair access. Showers and laundry facilities are also wheelchair accessible.",
"internetInfo":"",
"cellPhoneInfo":"",
"fireStovePolicy":"To help slow the spread of the emerald ash borer, visitors must only use USDA-certified firewood (signified by the USDA stamp on packaging), which can be purchased in the Park. Dead wood may also be used if it is gathered from the ground in the Park; do not cut, saw, or break any standing trees, dead or alive, for firewood. Fires are only allowed in Park-provided fire grates. You must fully extinguish your fire before leaving the area, even for a short amount of time. To do this, simply douse the fire with water and stir with a stick. Repeat this until you no longer feel warmth coming from the fire grate. Camping and backpacking stoves are permitted, but the use of charcoal grills is prohibited.",
"rvAllowed":"1",
"rvInfo":"Big Meadows Campground features pull-through and deep back-in sites which can handle most RVs and a tow vehicle. Although electric and water hookups are not available, potable water and dump stations are available, and limited generator use is permitted (see regulations).",
"rvMaxLength":"0",
"additionalInfo":"",
"trailerMaxLength":"0",
"adaInfo":"Seven accessible sites are available at Big Meadows Campground. Accessible shower and laundry facilities are also available.",
"trailerAllowed":"1",
"accessRoads":[
  "Paved Roads - All vehicles OK"
  ],
"classifications":[
  "Developed Campground"
  ]
}

,"multimedia":[]
,"lastIndexedDate":""


}

]
}

  recorded_at: Tue, 01 Aug 2023 22:14:09 GMT
recorded_with: VCR 6.2.0
